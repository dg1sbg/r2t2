cscope 15 /home/r2t2/ghpsdr3-alex/trunk/src/DttSP               0000877670
	@am_demod.c

36 
	~<am_demod.h
>

37 
	~<cx›s.h
>

45 
	$öô_∂l
 (
AMD
 
am
,

46 
REAL
 
ßm¥©e
, REAL 
‰eq
, REAL 
lo‰eq
, REAL 
hi‰eq
, REAL 
b™dwidth
)

48 
REAL
 
Ác
 = (REALË(
TWOPI
 / 
ßm¥©e
);

49 
am
->
∂l
.
‰eq
.
f
 = fªq * 
Ác
;

50 
am
->
∂l
.
‰eq
.
l
 = 
lo‰eq
 * 
Ác
;

51 
am
->
∂l
.
‰eq
.
h
 = 
hi‰eq
 * 
Ác
;

52 
am
->
∂l
.
phs
 = 0.0;

53 
am
->
∂l
.
dñay
 = 
cxJ
;

55 
am
->
∂l
.
iú
.
Æpha
 = 
b™dwidth
 * 
Ác
;

56 
am
->
∂l
.
Æpha
 =ám->∂l.
iú
.alpha * 0.3f;

57 
am
->
∂l
.
bëa
 =ám->∂l.
Æpha
 *ám->pll.alpha * 0.25f;

58 
am
->
∂l
.
Á°_Æpha
 =ám->∂l.
Æpha
;

59 
	}
}

62 
	$∂l
 (
AMD
 
am
, 
COMPLEX
 
sig
)

64 
COMPLEX
 
z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
am
->
∂l
.
phs
), (REALË
	`sö
 (am->pll.phs));

65 
REAL
 
diff
;

67 
am
->
∂l
.
dñay
.
ª
 = 
z
.ª * 
sig
.ª + z.
im
 * sig.im;

68 
am
->
∂l
.
dñay
.
im
 = -
z
.im * 
sig
.
ª
 + z.re * sig.im;

69 
diff
 = 
	`Á°_©™2
 (
am
->
∂l
.
dñay
.
im
,ám->∂l.dñay.
ª
);

71 
am
->
∂l
.
‰eq
.
f
 +am->∂l.
bëa
 * 
diff
;

73 i‡(
am
->
∂l
.
‰eq
.
f
 <ám->∂l.‰eq.
l
)

74 
am
->
∂l
.
‰eq
.
f
 =ám->∂l.‰eq.
l
;

75 i‡(
am
->
∂l
.
‰eq
.
f
 >ám->∂l.‰eq.
h
)

76 
am
->
∂l
.
‰eq
.
f
 =ám->∂l.‰eq.
h
;

78 
am
->
∂l
.
phs
 +am->∂l.
‰eq
.
f
 +ám->∂l.
Æpha
 * 
diff
;

80 
am
->
∂l
.
phs
 >
TWOPI
)

81 
am
->
∂l
.
phs
 -(
REAL
Ë
TWOPI
;

82 
am
->
∂l
.
phs
 < 0)

83 
am
->
∂l
.
phs
 +(
REAL
Ë
TWOPI
;

84 
	}
}

86 
REAL


87 
	$dem
 (
AMD
 
am
)

89 
am
->
lock
.
cuº
 =

90 (
REAL
Ë(0.999 * 
am
->
lock
.
cuº
 + 0.001 * 
	`Ábs
 (am->
∂l
.
dñay
.
im
));

102 
am
->
lock
.
¥ev
 =ám->lock.
cuº
;

103 
am
->
dc
 = 0.99999‡*ám->d¯+ 0.00001‡*ám->
∂l
.
dñay
.
ª
;

104  
am
->
∂l
.
dñay
.
ª
 -ám->
dc
;

105 
	}
}

112 
	$AMDemod
 (
AMD
 
am
)

114 
i
;

115 
REAL
 
demout
;

116 
am
->
mode
)

118 
SAMdë
:

119 
i
 = 0; i < 
am
->
size
; i++)

121 
	`∂l
 (
am
, 
	`CXBd©a
 (am->
ibuf
, 
i
));

122 
demout
 = 
	`dem
 (
am
);

123 
	`CXBd©a
 (
am
->
obuf
, 
i
Ë
	`Cm∂x
 (
demout
, demout);

126 
AMdë
:

127 
i
 = 0; i < 
am
->
size
; i++)

129 
am
->
lock
.
cuº
 = 
	`Cmag
 (
	`CXBd©a
 (am->
ibuf
, 
i
));

130 
am
->
dc
 = 0.9999‡*ám->d¯+ 0.0001‡*ám->
lock
.
cuº
;

131 
am
->
smoŸh
 = 0.5‡*ám->smoŸh + 0.5‡* (am->
lock
.
cuº
 -ám->
dc
);

133 
	`CXBd©a
 (
am
->
obuf
, 
i
Ë
	`Cm∂x
 (am->
smoŸh
,ám->smooth);

137 
	}
}

139 
AMD


140 
	$√wAMD
 (
REAL
 
ßm¥©e
,

141 
REAL
 
f_öôül
,

142 
REAL
 
f_lobound
,

143 
REAL
 
f_hibound
,

144 
REAL
 
f_b™dwid
,

145 
size
, 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, 
AMMode
 
mode
, *
èg
)

147 
AMD
 
am
 = (AMDË
	`ß„Æloc
 (1,  (
AMDDesc
), 
èg
);

149 
am
->
size
 = size;

150 
am
->
ibuf
 = 
	`√wCXB
 (
size
, 
ivec
, 
èg
);

151 
am
->
obuf
 = 
	`√wCXB
 (
size
, 
ovec
, 
èg
);

152 
am
->
mode
 = mode;

153 
	`öô_∂l
 (
am
, 
ßm¥©e
, 
f_öôül
, 
f_lobound
, 
f_hibound
, 
f_b™dwid
);

155 
am
->
lock
.
cuº
 = 0.5;

156 
am
->
lock
.
¥ev
 = 1.0;

157 
am
->
dc
 = 0.0;

159  
am
;

160 
	}
}

163 
	$dñAMD
 (
AMD
 
am
)

165 i‡(
am
)

167 
	`dñCXB
 (
am
->
ibuf
);

168 
	`dñCXB
 (
am
->
obuf
);

169 
	`ß„‰ì
 ((*Ë
am
);

171 
	}
}

	@am_demod.h

34 #i‚de‡
_am_demod_h


35 
	#_am_demod_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<•lôfõlds.h
>

40 
	~<d©©y≥s.h
>

41 
	~<bufvec.h
>

42 
	~<cx›s.h
>

43 
	~<Á°rig.h
>

44 
	~<upd©e.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

52 
	e_ammode


53 { 
	mAMdë
, 
	mSAMdë
 } 
	tAMMode
;

54 
	s_am_demod


56 
	msize
;

57 
CXB
 
	mibuf
, 
	mobuf
;

61 
REAL
 
	mÆpha
, 
	mbëa
, 
	mÁ°_Æpha
;

64 
REAL
 
	mf
, 
	ml
, 
	mh
;

65 } 
	m‰eq
;

66 
REAL
 
	mphs
;

69 
REAL
 
	mÆpha
;

70 } 
	miú
;

71 
COMPLEX
 
	mdñay
;

72 } 
	m∂l
;

76 
REAL
 
	mcuº
, 
	m¥ev
;

77 } 
	mlock
;

79 
REAL
 
	mdc
;

80 
REAL
 
	msmoŸh
;

81 
AMMode
 
	mmode
;

82 } 
	tAMDDesc
, *
	tAMD
;

84 
AMDemod
 (
AMD
 
am
);

85 
AMD
 
√wAMD
 (
REAL
 
ßm¥©e
,

86 
REAL
 
f_öôül
,

87 
REAL
 
f_lobound
,

88 
REAL
 
f_hibound
,

89 
REAL
 
f_b™dwid
,

90 
size
,

91 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, 
AMMode
 
mode
, *
èg
);

92 
dñAMD
 (
AMD
 
am
);

94 #i‚de‡
TWOPI


95 
	#TWOPI
 (2.0*
M_PI
)

	)

	@amd.c

27 
	~<comm⁄.h
>

28 
	~<m©h.h
>

29 
	~<amd.h
>

31 
AMD
 
	g√wAMD


33 
	gbuff_size
,

34 
COMPLEX
 *
	gö_buff
,

35 
COMPLEX
 *
	gout_buff
,

36 
	gmode
,

37 
	gÀvñÁde
,

38 
	gsbmode
,

39 
	gßm∂e_øã
,

40 
	gfmö
,

41 
	gfmax
,

42 
	gzëa
,

43 
	gt£t
,

44 
	gèuR
,

45 
	gèuI
,

46 *
	gèg


49 
AMD
 
	ga
;

50 
	ga
 = (
AMD
Ë
ß„Æloc
 (1,(
amd
), 
èg
);

51 
	ga
->
	gbuff_size
 = 
buff_size
;

52 
	ga
->
	gö_buff
 = 
ö_buff
;

53 
	ga
->
	gout_buff
 = 
out_buff
;

54 
	ga
->
	gmode
 = 
mode
;

55 
	ga
->
	gÀvñÁde
 = 
ÀvñÁde
;

56 
	ga
->
	gsbmode
 = 
sbmode
;

57 
	ga
->
	gßm∂e_øã
 = 
ßm∂e_øã
;

58 
	ga
->
	gfmö
 = 
fmö
;

59 
	ga
->
	gfmax
 = 
fmax
;

60 
	ga
->
	gzëa
 = 
zëa
;

61 
	ga
->
	gt£t
 = 
t£t
;

62 
	ga
->
	gèuR
 = 
èuR
;

63 
	ga
->
	gèuI
 = 
èuI
;

65 
öô_amd
(
a
);

66  
	ga
;

69 
	$dñ_amd
(
AMD
 
a
)

71 i‡(
a
Ë
	`ß„‰ì
((*)á);

72 
	}
}

74 
	$öô_amd
(
AMD
 
a
)

77 
omega_«t
;

78 
omega_«t
 = 
TWOPI
 / 
a
->
t£t
;

79 
a
->
omega_mö
 = 
TWOPI
 *á->
fmö
 /á->
ßm∂e_øã
;

80 
a
->
omega_max
 = 
TWOPI
 *á->
fmax
 /á->
ßm∂e_øã
;

81 
a
->
g1
 = 1.0 - 
	`exp
(-2.0 * 
omega_«t
 *á->
zëa
 /á->
ßm∂e_øã
);

82 
a
->
g2
 = -a->
g1
 + 2.0 * (1 - 
	`exp
(-
omega_«t
 *á->
zëa
 /á->
ßm∂e_øã
Ë* 
	`cos
(omega_«à/á->ßm∂e_øã * 
	`sqπ
(1.0 -á->zeta *á->zeta)));

83 
a
->
phs
 = 0.0;

84 
a
->
fû_out
 = 0.0;

85 
a
->
omega
 = 0.0;

88 
a
->
dc
 = 0.0;

89 
a
->
dc_ö£π
 = 0.0;

90 
a
->
mèuR
 = 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èuR
));

91 
a
->
⁄em_mèuR
 = 1.0 -á->
mèuR
;

92 
a
->
mèuI
 = 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èuI
));

93 
a
->
⁄em_mèuI
 = 1.0 -á->
mèuI
;

96 
a
->
c0
[0] = -0.328201924180698;

97 
a
->
c0
[1] = -0.744171491539427;

98 
a
->
c0
[2] = -0.923022915444215;

99 
a
->
c0
[3] = -0.978490468768238;

100 
a
->
c0
[4] = -0.994128272402075;

101 
a
->
c0
[5] = -0.998458978159551;

102 
a
->
c0
[6] = -0.999790306259206;

104 
a
->
c1
[0] = -0.0991227952747244;

105 
a
->
c1
[1] = -0.565619728761389;

106 
a
->
c1
[2] = -0.857467122550052;

107 
a
->
c1
[3] = -0.959123933111275;

108 
a
->
c1
[4] = -0.988739372718090;

109 
a
->
c1
[5] = -0.996959189310611;

110 
a
->
c1
[6] = -0.999282492800792;

111 
	}
}

113 
	$am_demod
(
AMD
 
a
)

115 
i
;

116 
audio
;

117 
vco
[2];

118 
c‹r
[2];

119 
dë
;

120 
dñ_out
;

121 
ai
, 
bi
, 
aq
, 
bq
;

122 
ai_ps
, 
bi_ps
, 
aq_ps
, 
bq_ps
;

123 
j
, 
k
;

125 
a
->
mode
)

130 
i
 = 0; i < 
a
->
buff_size
; i++)

132 
audio
 = 
	`sqπ
(()
a
->
ö_buff
[
i
].
ª
 * (Ô->ö_buff[i].ª + (Ô->ö_buff[i].
im
 * ()a->in_buff[i].im);

133 i‡(
a
->
ÀvñÁde
)

135 
a
->
dc
 =á->
mèuR
 *á->d¯+á->
⁄em_mèuR
 * 
audio
;

136 
a
->
dc_ö£π
 =á->
mèuI
 *á->dc_ö£π +á->
⁄em_mèuI
 * 
audio
;

137 
audio
 +
a
->
dc_ö£π
 -á->
dc
;

139 
a
->
out_buff
[
i
].
ª
 = ()
audio
;

140 
a
->
out_buff
[
i
].
im
 = ()
audio
;

147 
i
 = 0; i < 
a
->
buff_size
; i++)

149 
vco
[0] = 
	`cos
(
a
->
phs
);

150 
vco
[1] = 
	`sö
(
a
->
phs
);

152 
ai
 = ()
a
->
ö_buff
[
i
].
ª
 * 
vco
[0];

153 
bi
 = ()
a
->
ö_buff
[
i
].
ª
 * 
vco
[1];

154 
aq
 = ()
a
->
ö_buff
[
i
].
im
 * 
vco
[0];

155 
bq
 = ()
a
->
ö_buff
[
i
].
im
 * 
vco
[1];

157 i‡(
a
->
sbmode
 != 0)

159 
a
->a[0] =á->
dsI
;

160 
a
->
b
[0] = 
bi
;

161 
a
->
c
[0] =á->
dsQ
;

162 
a
->
d
[0] = 
aq
;

163 
a
->
dsI
 = 
ai
;

164 
a
->
dsQ
 = 
bq
;

166 
j
 = 0; j < 
STAGES
; j++)

168 
k
 = 3 * 
j
;

169 
a
->a[
k
 + 3] =á->
c0
[
j
] * (a->a[k] -á->a[k + 5]) +á->a[k + 2];

170 
a
->
b
[
k
 + 3] =á->
c1
[
j
] * (a->b[k] -á->b[k + 5]) +á->b[k + 2];

171 
a
->
c
[
k
 + 3] =á->
c0
[
j
] * (a->c[k] -á->c[k + 5]) +á->c[k + 2];

172 
a
->
d
[
k
 + 3] =á->
c1
[
j
] * (a->d[k] -á->d[k + 5]) +á->d[k + 2];

174 
ai_ps
 = 
a
->a[
OUT_IDX
];

175 
bi_ps
 = 
a
->
b
[
OUT_IDX
];

176 
bq_ps
 = 
a
->
c
[
OUT_IDX
];

177 
aq_ps
 = 
a
->
d
[
OUT_IDX
];

179 
j
 = 
OUT_IDX
 + 2; j > 0; j--)

181 
a
->a[
j
] =á->a[j - 1];

182 
a
->
b
[
j
] =á->b[j - 1];

183 
a
->
c
[
j
] =á->c[j - 1];

184 
a
->
d
[
j
] =á->d[j - 1];

188 
c‹r
[0] = +
ai
 + 
bq
;

189 
c‹r
[1] = -
bi
 + 
aq
;

191 
a
->
sbmode
)

195 
audio
 = 
c‹r
[0];

200 
audio
 = (
ai_ps
 + 
bi_ps
Ë- (
aq_ps
 - 
bq_ps
);

205 
audio
 = (
ai_ps
 - 
bi_ps
Ë+ (
aq_ps
 + 
bq_ps
);

210 i‡(
a
->
ÀvñÁde
)

212 
a
->
dc
 =á->
mèuR
 *á->d¯+á->
⁄em_mèuR
 * 
audio
;

213 
a
->
dc_ö£π
 =á->
mèuI
 *á->dc_ö£π +á->
⁄em_mèuI
 * 
c‹r
[0];

214 
audio
 +
a
->
dc_ö£π
 -á->
dc
;

216 
a
->
out_buff
[
i
].
ª
 = ()
audio
;

217 
a
->
out_buff
[
i
].
im
 = ()
audio
;

219 i‡((
c‹r
[0] == 0.0) && (corr[1] == 0.0)) corr[0] = 1.0;

220 
dë
 = 
	`©™2
(
c‹r
[1], corr[0]);

221 
dñ_out
 = 
a
->
fû_out
;

222 
a
->
omega
 +a->
g2
 * 
dë
;

223 i‡(
a
->
omega
 <á->
omega_mö
)á->omega =á->omega_min;

224 i‡(
a
->
omega
 >á->
omega_max
)á->omega =á->omega_max;

225 
a
->
fû_out
 =á->
g1
 * 
dë
 +á->
omega
;

226 
a
->
phs
 +
dñ_out
;

227 
a
->
phs
 >
TWOPI
)á->phs -= TWOPI;

228 
a
->
phs
 < 0.0Ëa->ph†+
TWOPI
;

233 
	}
}

	@amd.h

27 #i‚de‡
_amd_h


29 
	#_amd_h


	)

31 #i‚de‡
TWOPI


32 
	#TWOPI
 6.28318530717959

	)

36 #i‚de‡
STAGES


37 
	#STAGES
 7

	)

40 #i‚de‡
OUT_IDX


41 
	#OUT_IDX
 (3 * 
STAGES
)

	)

44 
	s_amd


46 
	mbuff_size
;

47 
COMPLEX
 *
	mö_buff
;

48 
COMPLEX
 *
	mout_buff
;

49 
	mmode
;

50 
	mßm∂e_øã
;

51 
	mdc
;

52 
	mfmö
;

53 
	mfmax
;

54 
	momega_mö
;

55 
	momega_max
;

56 
	mzëa
;

57 
	mt£t
;

58 
	mphs
;

59 
	momega
;

60 
	mfû_out
;

61 
	mg1
, 
	mg2
;

62 
	mèuR
;

63 
	mèuI
;

64 
	mmèuR
;

65 
	m⁄em_mèuR
;

66 
	mmèuI
;

67 
	m⁄em_mèuI
;

68 
	ma
[3 * 
STAGES
 + 3];

69 
	mb
[3 * 
STAGES
 + 3];

70 
	mc
[3 * 
STAGES
 + 3];

71 
	md
[3 * 
STAGES
 + 3];

72 
	mc0
[
STAGES
];

73 
	mc1
[
STAGES
];

74 
	mdsI
;

75 
	mdsQ
;

76 
	mdc_ö£π
;

77 
	msbmode
;

78 
	mÀvñÁde
;

80 }
	tamd
, *
	tAMD
;

82 
AMD
 
√wAMD


84 
buff_size
,

85 
COMPLEX
 *
ö_buff
,

86 
COMPLEX
 *
out_buff
,

87 
mode
,

88 
ÀvñÁde
,

89 
sbmode
,

90 
ßm∂e_øã
,

91 
fmö
,

92 
fmax
,

93 
zëa
,

94 
t£t
,

95 
èuR
,

96 
èuI
,

97 *
èg


100 
öô_amd
 (
AMD
 
a
);

102 
dñ_amd
 (
AMD
 
a
);

104 
am_demod
 (
AMD
 
a
);

	@anf.c

27 
	~<comm⁄.h
>

28 
	~<m©h.h
>

29 
	~<™f.h
>

31 
ANF
 
	$√wANF
 (

32 
buff_size
,

33 
COMPLEX
 *
buff
,

34 
dlöe_size
,

35 
n_èps
,

36 
dñay
,

37 
two_mu
,

38 
gamma
,

40 
lidx
,

41 
lidx_mö
,

42 
lidx_max
,

43 
ngamma
,

44 
dí_mu…
,

45 
lö¸
,

46 
lde¸
,

47 *
èg


50 
ANF
 
a
;

51 
a
 = (
ANF
Ë
	`ß„Æloc
 (1,(
™f
), 
èg
);

53 
a
->
buff_size
 = buff_size;

54 
a
->
buff
 = buff;

55 
a
->
dlöe_size
 = dline_size;

56 
a
->
mask
 = 
dlöe_size
 - 1;

57 
a
->
n_èps
 =Ç_taps;

58 
a
->
dñay
 = delay;

59 
a
->
two_mu
 =Åwo_mu;

60 
a
->
gamma
 = gamma;

62 
a
->
lidx
 =Üidx;

63 
a
->
lidx_mö
 =Üidx_min;

64 
a
->
lidx_max
 =Üidx_max;

65 
a
->
ngamma
 =Çgamma;

66 
a
->
dí_mu…
 = den_mult;

67 
a
->
lö¸
 =Üincr;

68 
a
->
lde¸
 =Üdecr;

70 
	`mem£t
 (
a
->
d
, 0, (Ë* 
DLINE_SIZE
);

71 
	`mem£t
 (
a
->
w
, 0, (Ë* 
DLINE_SIZE
);

73  
a
;

74 
	}
}

76 
	$dñ_™f
 (
ANF
 
a
)

78 i‡(
a
)

79 
	`ß„‰ì
((*Ë
a
);

80 
	}
}

82 
	$nŸch
(
ANF
 
a
)

84 
i
, 
j
, 
idx
;

85 
c0
, 
c1
;

86 
y
, 
îr‹
, 
sigma
, 
öv_sigp
;

87 
√l
, 
√v
;

89 
i
 = 0; i < 
a
->
buff_size
; i++)

91 
a
->
d
[a->
ö_idx
] = (Ô->
buff
[
i
].
ª
;

93 
y
 = 0;

94 
sigma
 = 0;

96 
j
 = 0; j < 
a
->
n_èps
; j++)

98 
idx
 = (
a
->
ö_idx
 + 
j
 +á->
dñay
Ë&á->
mask
;

99 
y
 +
a
->
w
[
j
] *á->
d
[
idx
];

100 
sigma
 +
a
->
d
[
idx
] *á->d[idx];

102 
öv_sigp
 = 1.0 / (
sigma
 + 1e-10);

103 
îr‹
 = 
a
->
d
[a->
ö_idx
] - 
y
;

105 
a
->
buff
[
i
].
ª
 = (
REAL
)
îr‹
;

106 
a
->
buff
[
i
].
im
 = 0.0f;

108 if((
√l
 = 
îr‹
 * (1.0 - 
a
->
two_mu
 * 
sigma
 * 
öv_sigp
)) < 0.0)Çel = -nel;

109 if((
√v
 = 
a
->
d
[a->
ö_idx
] - (1.0 -á->
two_mu
 *á->
ngamma
Ë* 
y
 -á->two_mu * 
îr‹
 * 
sigma
 * 
öv_sigp
) < 0.0)Çev = -nev;

110 i‡(
√v
 < 
√l
)

112 if((
a
->
lidx
 +a->
lö¸
Ë>á->
lidx_max
)á->lidx =á->lidx_max;

115 if((
a
->
lidx
 -a->
lde¸
Ë<á->
lidx_mö
)á->lidx =á->lidx_min;

116 
a
->
ngamma
 =á->
gamma
 * (a->
lidx
 *á->lidxË* (a->lidx *á->lidxË*á->
dí_mu…
;

118 
c0
 = 1.0 - 
a
->
two_mu
 *á->
ngamma
;

119 
c1
 = 
a
->
two_mu
 * 
îr‹
 * 
öv_sigp
;

121 
j
 = 0; j < 
a
->
n_èps
; j++)

123 
idx
 = (
a
->
ö_idx
 + 
j
 +á->
dñay
Ë&á->
mask
;

124 
a
->
w
[
j
] = 
c0
 *á->w[j] + 
c1
 *á->
d
[
idx
];

126 
a
->
ö_idx
 = (a->ö_idx +á->
mask
) &á->mask;

128 
	}
}

	@anf.h

27 #i‚de‡
_™f_h


29 
	#_™f_h


	)

31 
	#DLINE_SIZE
 1024

	)

33 
	s_™f


35 
	mbuff_size
;

36 
COMPLEX
 *
	mbuff
;

37 
	mdlöe_size
;

38 
	mmask
;

39 
	mn_èps
;

40 
	mdñay
;

41 
	mtwo_mu
;

42 
	mgamma
;

43 
	md
 [
DLINE_SIZE
];

44 
	mw
 [
DLINE_SIZE
];

45 
	mö_idx
;

47 
	mlidx
;

48 
	mlidx_mö
;

49 
	mlidx_max
;

50 
	mngamma
;

51 
	mdí_mu…
;

52 
	mlö¸
;

53 
	mlde¸
;

55 
	mèg
[4];

56 } 
	t™f
, *
	tANF
;

58 
ANF
 
√wANF
 (

59 
buff_size
,

60 
COMPLEX
 *
buff
,

61 
dlöe_size
,

62 
n_èps
,

63 
dñay
,

64 
two_mu
,

65 
gamma
,

67 
lidx
,

68 
lidx_mö
,

69 
lidx_max
,

70 
ngamma
,

71 
dí_mu…
,

72 
lö¸
,

73 
lde¸
,

74 *
èg


77 
dñ_™f
 (
ANF
 
a
);

79 
nŸch
 (
ANF
 
a
);

	@anr.c

27 
	~<comm⁄.h
>

28 
	~<m©h.h
>

29 
	~<™r.h
>

31 
ANR
 
	$√wANR
 (

32 
buff_size
,

33 
COMPLEX
 *
buff
,

34 
dlöe_size
,

35 
n_èps
,

36 
dñay
,

37 
two_mu
,

38 
gamma
,

40 
lidx
,

41 
lidx_mö
,

42 
lidx_max
,

43 
ngamma
,

44 
dí_mu…
,

45 
lö¸
,

46 
lde¸
,

47 *
èg


50 
ANR
 
a
;

51 
a
 = (
ANR
Ë
	`ß„Æloc
 (1,(
™r
), 
èg
);

53 
a
->
buff_size
 = buff_size;

54 
a
->
buff
 = buff;

55 
a
->
dlöe_size
 = dline_size;

56 
a
->
mask
 = 
dlöe_size
 - 1;

57 
a
->
n_èps
 =Ç_taps;

58 
a
->
dñay
 = delay;

59 
a
->
two_mu
 =Åwo_mu;

60 
a
->
gamma
 = gamma;

62 
a
->
lidx
 =Üidx;

63 
a
->
lidx_mö
 =Üidx_min;

64 
a
->
lidx_max
 =Üidx_max;

65 
a
->
ngamma
 =Çgamma;

66 
a
->
dí_mu…
 = den_mult;

67 
a
->
lö¸
 =Üincr;

68 
a
->
lde¸
 =Üdecr;

70 
	`mem£t
 (
a
->
d
, 0, (Ë* 
DLINE_SIZE
);

71 
	`mem£t
 (
a
->
w
, 0, (Ë* 
DLINE_SIZE
);

73  
a
;

74 
	}
}

76 
	$dñ_™r
 (
ANR
 
a
)

78 i‡(
a
)

79 
	`ß„‰ì
((*Ë
a
);

80 
	}
}

82 
	$noi£_ªdu˚
(
ANR
 
a
)

84 
i
, 
j
, 
idx
;

85 
c0
, 
c1
;

86 
y
, 
îr‹
, 
sigma
, 
öv_sigp
;

87 
√l
, 
√v
;

89 
i
 = 0; i < 
a
->
buff_size
; i++)

91 
a
->
d
[a->
ö_idx
] = (Ô->
buff
[
i
].
ª
;

93 
y
 = 0;

94 
sigma
 = 0;

96 
j
 = 0; j < 
a
->
n_èps
; j++)

98 
idx
 = (
a
->
ö_idx
 + 
j
 +á->
dñay
Ë&á->
mask
;

99 
y
 +
a
->
w
[
j
] *á->
d
[
idx
];

100 
sigma
 +
a
->
d
[
idx
] *á->d[idx];

102 
öv_sigp
 = 1.0 / (
sigma
 + 1e-10);

103 
îr‹
 = 
a
->
d
[a->
ö_idx
] - 
y
;

105 
a
->
buff
[
i
].
ª
 = (
REAL
)
y
;

106 
a
->
buff
[
i
].
im
 = 0.0f;

108 if((
√l
 = 
îr‹
 * (1.0 - 
a
->
two_mu
 * 
sigma
 * 
öv_sigp
)) < 0.0)Çel = -nel;

109 if((
√v
 = 
a
->
d
[a->
ö_idx
] - (1.0 -á->
two_mu
 *á->
ngamma
Ë* 
y
 -á->two_mu * 
îr‹
 * 
sigma
 * 
öv_sigp
) < 0.0)Çev = -nev;

110 i‡(
√v
 < 
√l
)

111 if((
a
->
lidx
 +a->
lö¸
Ë>á->
lidx_max
)á->lidx =á->lidx_max;

113 if((
a
->
lidx
 -a->
lde¸
Ë<á->
lidx_mö
)á->lidx =á->lidx_min;

114 
a
->
ngamma
 =á->
gamma
 * (a->
lidx
 *á->lidxË* (a->lidx *á->lidxË*á->
dí_mu…
;

116 
c0
 = 1.0 - 
a
->
two_mu
 *á->
ngamma
;

117 
c1
 = 
a
->
two_mu
 * 
îr‹
 * 
öv_sigp
;

119 
j
 = 0; j < 
a
->
n_èps
; j++)

121 
idx
 = (
a
->
ö_idx
 + 
j
 +á->
dñay
Ë&á->
mask
;

122 
a
->
w
[
j
] = 
c0
 *á->w[j] + 
c1
 *á->
d
[
idx
];

124 
a
->
ö_idx
 = (a->ö_idx +á->
mask
) &á->mask;

126 
	}
}

	@anr.h

26 #i‚de‡
_™r_h


28 
	#_™r_h


	)

30 
	#DLINE_SIZE
 1024

	)

32 
	s_™r


34 
	mbuff_size
;

35 
COMPLEX
 *
	mbuff
;

36 
	mdlöe_size
;

37 
	mmask
;

38 
	mn_èps
;

39 
	mdñay
;

40 
	mtwo_mu
;

41 
	mgamma
;

42 
	md
 [
DLINE_SIZE
];

43 
	mw
 [
DLINE_SIZE
];

44 
	mö_idx
;

46 
	mlidx
;

47 
	mlidx_mö
;

48 
	mlidx_max
;

49 
	mngamma
;

50 
	mdí_mu…
;

51 
	mlö¸
;

52 
	mlde¸
;

54 
	mèg
[4];

55 } 
	t™r
, *
	tANR
;

57 
ANR
 
√wANR
 (

58 
buff_size
,

59 
COMPLEX
 *
buff
,

60 
dlöe_size
,

61 
n_èps
,

62 
dñay
,

63 
two_mu
,

64 
gamma
,

66 
lidx
,

67 
lidx_mö
,

68 
lidx_max
,

69 
ngamma
,

70 
dí_mu…
,

71 
lö¸
,

72 
lde¸
,

73 *
èg


76 
dñ_™r
 (
ANR
 
a
);

78 
noi£_ªdu˚
 (
ANR
 
a
);

	@banal.c

34 
	~<‰omsys.h
>

35 
	~<b™Æ.h
>

38 
	$nûfunc
 ()

40 
	}
}

42 
REAL


43 
	$sqr
 (
REAL
 
x
)

45  
x
 * x;

46 
	}
}

49 
	$p›˙t
 (
k
)

51 
c
, 
i
;

52 
c
 = 
k
 & 01;

53 
i
 = 1; i < 32; i++)

54 
c
 +(
k
 >> 
i
) & 01;

55  
c
;

56 
	}
}

59 
	$≈oof2
 (
n
)

61 
i
 = 0;

62 --
n
;

63 
n
 > 0)

64 
n
 >>1, 
i
++;

65  
i
;

66 
	}
}

69 
	$nblock2
 (
n
)

71  1 << 
	`≈oof2
 (
n
);

72 
	}
}

75 
	$ö_blocks
 (
cou¡
, 
block_size
)

77 i‡(
block_size
 < 1)

79 
	`Ârötf
 (
°dîr
, "block_size zero in in_blocks\n");

80 
	`exô
 (1);

82  (1 + ((
cou¡
 - 1Ë/ 
block_size
));

83 
	}
}

85 
FILE
 *

86 
	$ef›í
 (*
∑th
, *
mode
)

88 
FILE
 *
i›
 = 
	`f›í
 (
∑th
, 
mode
);

89 i‡(!
i›
)

91 
	`Ârötf
 (
°dîr
, "ˇn'à›í \"%s\" i¿modê\"%s\"\n", 
∑th
, 
mode
);

92 
	`exô
 (1);

94  
i›
;

95 
	}
}

97 
FILE
 *

98 
	$e‰e›í
 (*
∑th
, *
mode
, 
FILE
 * 
°rm
)

100 
FILE
 *
i›
 = 
	`‰e›í
 (
∑th
, 
mode
, 
°rm
);

101 i‡(!
i›
)

103 
	`Ârötf
 (
°dîr
, "ˇn'àª›í \"%s\" i¿modê\"%s\"\n", 
∑th
, 
mode
);

104 
	`exô
 (1);

106  
i›
;

107 
	}
}

109 
size_t


110 
	$fûesize
 (*
∑th
)

112 
°©
 
sbuf
;

113 i‡(
	`°©
 (
∑th
, &
sbuf
) == -1)

115  
sbuf
.
°_size
;

116 
	}
}

118 
size_t


119 
	$fdsize
 (
fd
)

121 
°©
 
sbuf
;

122 i‡(
	`f°©
 (
fd
, &
sbuf
) == -1)

124  
sbuf
.
°_size
;

125 
	}
}

127 
	#MILLION
 (1000000)

	)

130 
timevÆ


131 
	$now_tv
 ()

133 
timevÆ
 
tv
;

134 
	`gëtimeofday
 (&
tv
, 0);

135  
tv
;

136 
	}
}

139 
timevÆ


140 
	$diff_tv
 (
timevÆ
 *
è
, timevÆ *
tb
)

142 
timevÆ
 
tv
;

143 i‡(
tb
->
tv_u£c
 > 
è
->tv_usec)

145 
è
->
tv_£c
--;

146 
è
->
tv_u£c
 +
MILLION
;

148 
tv
.
tv_£c
 = 
è
->tv_£¯- 
tb
->tv_sec;

149 i‡((
tv
.
tv_u£c
 = 
è
->tv_u£¯- 
tb
->tv_u£cË>
MILLION
)

151 
tv
.
tv_u£c
 -
MILLION
;

152 
tv
.
tv_£c
++;

154  
tv
;

155 
	}
}

158 
timevÆ


159 
	$sum_tv
 (
timevÆ
 *
è
, timevÆ *
tb
)

161 
timevÆ
 
tv
;

162 
tv
.
tv_£c
 = 
è
->tv_£¯+ 
tb
->tv_sec;

163 i‡((
tv
.
tv_u£c
 = 
è
->tv_u£¯+ 
tb
->tv_u£cË>
MILLION
)

165 
tv
.
tv_u£c
 -
MILLION
;

166 
tv
.
tv_£c
++;

168  
tv
;

169 
	}
}

172 
	$fmt_tv
 (
timevÆ
 *
tv
)

174 
buff
[256];

175 
	`¢¥ötf
 (
buff
,  (buff), "%ds%du", 
tv
->
tv_£c
,Åv->
tv_u£c
);

176  
buff
;

177 
	}
}

180 
	$sö˚
 (
timevÆ
 *
tv
)

182 
timevÆ
 
¡
 = 
	`now_tv
 (), 
dt
 = 
	`diff_tv
 (&¡, 
tv
);

183  
	`fmt_tv
 (&
dt
);

184 
	}
}

193 
	$höãΩ_vec
 (
REAL
 * 
u
, 
m
, REAL * 
v
, 
n
)

195 i‡(!
u
 || !
v
 || (
n
 < 2Ë|| (
m
 <Ç) || (m %Ç))

199 
div
 = 
m
 / 
n
, 
i
, 
j
 = 0;

200 
i
 = 1; i < 
n
; i++)

202 
k
;

203 
REAL
 
vl
 = 
v
[
i
 - 1], 
dñ
 = (v[i] - vlË/ 
div
;

204 
u
[
j
++] = 
vl
;

205 
k
 = 1; k < 
div
; k++)

206 
u
[
j
++] = 
vl
 + 
k
 * 
dñ
;

208 
u
[
j
++] = 
v
[
n
 - 1];

209  
j
;

211 
	}
}

214 
	$°©us_mesßge
 (*
msg
)

216 
	`wrôe
 (2, 
msg
, 
	`°æí
 (msg));

217 
	}
}

219 
FILE
 *

220 
	$föd_rcfûe
 (*
ba£
)

222 
∑th
[
MAXPATHLEN
];

223 
FILE
 *
Â
;

224 
	`•rötf
 (
∑th
, "./%s", 
ba£
);

225 i‡((
Â
 = 
	`f›í
 (
∑th
, "r")))

226  
Â
;

229 *
home
 = 
	`gëív
 ("HOME");

230 i‡(!
home
)

231 
	`Ârötf
 (
°dîr
, "ˇn'àgë HOME!\n"), 
	`exô
 (1);

232 
	`•rötf
 (
∑th
, "%s/%s", 
home
, 
ba£
);

233 i‡((
Â
 = 
	`f›í
 (
∑th
, "r")))

234  
Â
;

237 
	}
}

242 
	$hash
 (*
°r
)

244 
hash
 = 5381;

245 
c
;

246 
c
 = *
°r
++)

247 
hash
 = ((hash << 5Ë+ hashË+ 
c
;

248  
hash
;

249 
	}
}

252 
	$gcd
 (
m
, 
n
)

254  (
m
 % 
n
 =0 ?Ç : 
	`gcd
 (n, m %Ç));

255 
	}
}

258 
	$Àa°_comm⁄_mul
 (
i
, 
j
)

260  (
	`abs
 ((
i
 * 
j
Ë/ 
	`gcd
 (i, j)));

261 
	}
}

	@banal.h

35 #i‚de‡
_b™Æ_h


37 
	#_b™Æ_h


	)

39 
	~<‰omsys.h
>

40 
	~<defs.h
>

41 
	~<d©©y≥s.h
>

42 
	~<uni°d.h
>

43 
	~<sys/time.h
>

45 #i‚de‡
mö


46 
	#mö
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

48 #i‚de‡
max


49 
	#max
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

51 
	#abs
(
a
Ë(◊Ë>0 ? (aË: -◊))

	)

53 
	#MONDO
 1e15

	)

54 
	#BITSY
 1e-15

	)

56 
	#TRUE
 1

	)

57 
	#FALSE
 0

	)

59 
nûfunc
 ();

60 
INLINE
 
REAL
 
sqr
 (REAL);

61 
p›˙t
 ();

62 
≈oof2
 ();

63 
nblock2
 ();

65 
ö_blocks
 (
cou¡
, 
block_size
);

67 
FILE
 *
ef›í
 (*
∑th
, *
mode
);

68 
FILE
 *
e‰e›í
 (*
∑th
, *
mode
, FILE * 
°rm
);

69 
size_t
 
fûesize
 (*
∑th
);

70 
size_t
 
fdsize
 (
fd
);

72 
timevÆ
 
now_tv
 ();

73 
timevÆ
 
diff_tv
 (timeval *, timeval *);

74 
timevÆ
 
sum_tv
 (timeval *, timeval *);

75 *
fmt_tv
 (
timevÆ
 *);

76 *
sö˚
 (
timevÆ
 *);

77 
timevÆ
 
now_tv
 ();

79 
höãΩ_vec
 (
REAL
 *, , REAL *, );

81 
°©us_mesßge
 (*
msg
);

83 
FILE
 *
föd_rcfûe
 (*
ba£
);

85 
hash
 (*
°r
);

86 
gcd
 (
m
, 
n
);

87 
Àa°_comm⁄_mul
 (
i
, 
j
);

	@bufvec.c

37 
	~<bufvec.h
>

38 
	~<f·w3.h
>

39 
	~<f·w3_fix.h
>

44 
PRIVATE
 
size_t
 
	g_ß„mem_cuºcou¡
 = 0;

47 
	$ß„Æloc
(
cou¡
, 
nbyãs
, *
èg
)

49 *
p
 = 
	`ˇŒoc
(
cou¡
, 
nbyãs
);

50 i‡(!
p
)

52 i‡(
èg
 && *tag)

53 
	`Ârötf
(
°dîr
, "ß„Æloc: %s\n", 
èg
);

55 
	`≥º‹
("safealloc");

56 
	`exô
(1);

59 
_ß„mem_cuºcou¡
 +
cou¡
 * 
nbyãs
;

61  
p
;

62 
	}
}

65 
	$ß„‰ì
(*
p
)

67 i‡(
p
)

68 
	`‰ì
((*Ë
p
);

69 
	}
}

71 
size_t


72 
	$ß„memcuºcou¡
()

74  
_ß„mem_cuºcou¡
;

75 
	}
}

78 
	$ß„memª£t
()

80 
_ß„mem_cuºcou¡
 = 0;

81 
	}
}

86 
REAL
 *

87 
	$√wvec_REAL
(
size
, *
èg
)

89  (
REAL
 *Ë
	`ß„Æloc
(
size
, (REAL), 
èg
);

90 
	}
}

93 
	$dñvec_REAL
(
REAL
 *
vec
)

95 
	`ß„‰ì
((*Ë
vec
);

96 
	}
}

98 
IMAG
 *

99 
	$√wvec_IMAG
(
size
, *
èg
)

101  (
IMAG
 *Ë
	`ß„Æloc
(
size
, (IMAG), 
èg
);

102 
	}
}

105 
	$dñvec_IMAG
(
IMAG
 *
vec
)

107 
	`ß„‰ì
((*Ë
vec
);

108 
	}
}

110 
COMPLEX
 *

111 
	$√wvec_COMPLEX
(
size
, *
èg
)

113  (
COMPLEX
 *Ë
	`ß„Æloc
(
size
, (COMPLEX), 
èg
);

114 
	}
}

117 
	$dñvec_COMPLEX
(
COMPLEX
 *
vec
)

119 
	`ß„‰ì
((*Ë
vec
);

120 
	}
}

122 
COMPLEX
 *

123 
	$√wvec_COMPLEX_f·w
(
size
, *
èg
)

125 
COMPLEX
 *
p
 = 
	`f·wf_mÆloc
(
size
*(COMPLEX));

126 i‡(!
p
)

128 i‡(
èg
 && *tag)

129 
	`Ârötf
(
°dîr
, "f·wf_mŒoc: %s\n", 
èg
);

131 
	`≥º‹
("fftw malloc");

132 
	`exô
(1);

135  
p
;

136 
	}
}

139 
	$dñvec_COMPLEX_f·w
(
COMPLEX
 *
vec
)

141 
	`f·wf_‰ì
((*Ë
vec
);

142 
	}
}

149 
CXB


150 
	$√wCXB
(
size
, 
COMPLEX
 *
ba£
, *
èg
)

152 
CXB
 
p
 = (CXBË
	`ß„Æloc
(1, (
CXBuf„r
), 
èg
);

153 i‡(
ba£
)

155 
	`CXBba£
(
p
Ë
ba£
;

156 
	`CXBmöe
(
p
Ë
FALSE
;

160 
	`CXBba£
(
p
Ë
	`√wvec_COMPLEX
(
size
, "newCXB");

161 
	`CXBmöe
(
p
Ë
TRUE
;

163 
	`CXBsize
(
p
Ë
	`CXBw™t
’Ë
size
;

164 
	`CXBovÕ
(
p
Ë
	`CXBhave
’Ë
	`CXBd⁄e
(p) = 0;

165  
p
;

166 
	}
}

169 
	$dñCXB
(
CXB
 
p
)

171 i‡(
p
)

173 i‡(
	`CXBmöe
(
p
))

174 
	`dñvec_COMPLEX
(
	`CXBba£
(
p
));

175 
	`ß„‰ì
((*Ë
p
);

177 
	}
}

182 
RLB


183 
	$√wRLB
(
size
, 
REAL
 *
ba£
, *
èg
)

185 
RLB
 
p
 = (RLBË
	`ß„Æloc
(1, (
RLBuf„r
), 
èg
);

186 i‡(
ba£
)

188 
	`RLBba£
(
p
Ë
ba£
;

189 
	`RLBmöe
(
p
Ë
FALSE
;

193 
	`RLBba£
(
p
Ë
	`√wvec_REAL
(
size
, "newRLB");

194 
	`RLBmöe
(
p
Ë
TRUE
;

196 
	`RLBsize
(
p
Ë
	`RLBw™t
’Ë
size
;

197 
	`RLBovÕ
(
p
Ë
	`RLBhave
’Ë
	`RLBd⁄e
(p) = 0;

198  
p
;

199 
	}
}

202 
	$dñRLB
(
RLB
 
p
)

204 i‡(
p
)

206 i‡(
p
->
möe
)

207 
	`dñvec_REAL
(
	`RLBba£
(
p
));

208 
	`ß„‰ì
((*Ë
p
);

210 
	}
}

215 
REAL


216 
	$n‹mÆize_vec_REAL
(
REAL
 *
v
, 
n
, REAL 
s˛
)

218 i‡(
v
 && (
n
 > 0))

220 
i
;

221 
REAL
 
big
 = -(REALË
MONDO
;

222 
i
 = 0; i < 
n
; i++)

224 
REAL
 
a
 = 
	`abs
(
v
[
i
]);

225 
big
 = 
	`max
(big, 
a
);

227 i‡(
big
 > 0.0)

229 
REAL
 
s˛
 = (REALË(1.0 / 
big
);

230 
i
 = 0; i < 
n
; i++)

231 
v
[
i
] *
s˛
;

232  
s˛
;

237 
	}
}

239 
REAL


240 
	$n‹mÆize_vec_COMPLEX
(
COMPLEX
 *
z
, 
n
, 
REAL
 
sˇÀ
)

242 i‡(
z
 && (
n
 > 0))

244 
i
;

245 
REAL
 
big
 = -(REALË
MONDO
;

246 
i
 = 0; i < 
n
; i++)

248 
REAL
 
a
 = 
	`Cabs
(
z
[
i
]);

249 
big
 = 
	`max
(big, 
a
);

251 i‡(
big
 > 0.0)

253 
REAL
 
s˛
 = (REALË(
sˇÀ
 / 
big
);

254 
i
 = 0; i < 
n
; i++)

255 
z
[
i
] = 
	`Cs˛
(z[i], 
s˛
);

256  
s˛
;

261 
	}
}

268 
	$dump_REAL
(
FILE
 * 
Â
, *
hód
, 
REAL
 *
±r
, 
beg
, 
fö
)

270 
i
;

271 
FILE
 *
i›
 = 
Â
 ? f∞: 
°dîr
;

272 i‡(
hód
 && *head)

273 
	`Ârötf
(
i›
, "dump_REAL: %s\n", 
hód
);

274 
i
 = 
beg
; i < 
fö
; i++)

275 
	`Ârötf
(
i›
, "%5d %g\n", 
i
, 
±r
[i]);

276 
	}
}

279 
	$dump_IMAG
(
FILE
 * 
Â
, *
hód
, 
IMAG
 *
±r
, 
beg
, 
fö
)

281 
i
;

282 
FILE
 *
i›
 = 
Â
 ? f∞: 
°dîr
;

283 i‡(
hód
 && *head)

284 
	`Ârötf
(
i›
, "dump_REAL: %s\n", 
hód
);

285 
i
 = 
beg
; i < 
fö
; i++)

286 
	`Ârötf
(
i›
, "%5d %g\n", 
i
, 
±r
[i]);

287 
	}
}

290 
	$dump_CX
(
FILE
 * 
Â
, *
hód
, 
COMPLEX
 *
±r
, 
beg
, 
fö
)

292 
i
;

293 
FILE
 *
i›
 = 
Â
 ? f∞: 
°dîr
;

294 i‡(
hód
 && *head)

295 
	`Ârötf
(
i›
, "dump_CX: %s\n", 
hód
);

296 
i
 = 
beg
; i < 
fö
; i++)

297 
	`Ârötf
(
i›
, "%5d %g %g\n", 
i
, 
±r
[i].
ª
,Öå[i].
im
);

298 
	}
}

	@bufvec.h

36 #i‚de‡
_bufvec_h


38 
	#_bufvec_h


	)

40 
	~<‰omsys.h
>

41 
	~<d©©y≥s.h
>

42 
	~<com∂ex.h
>

43 
	~<cx›s.h
>

45 
	s_com∂ex_buf„r_desc
 {

46 
COMPLEX
 *
	md©a
;

47 
	msize
, 
	movÕ
, 
	mw™t
, 
	mhave
, 
	md⁄e
, 
	mmöe
;

48 } 
	tCXBuf„r
, *
	tCXB
;

52 
	#CXBba£
(
p
Ë(’)->
d©a
)

	)

53 
	#CXBd©a
(
p
, 
i
Ë(
	`CXBba£
’)[(i)])

	)

54 
	#CXBªÆ
(
p
, 
i
Ë(
	`CXBba£
’)[(i)].
ª
)

	)

55 
	#CXBimag
(
p
, 
i
Ë(
	`CXBba£
’)[(i)].
im
)

	)

56 
	#CXBsize
(
p
Ë(’)->
size
)

	)

57 
	#CXBovÕ
(
p
Ë(’)->
ovÕ
)

	)

58 
	#CXBw™t
(
p
Ë(’)->
w™t
)

	)

59 
	#CXBhave
(
p
Ë(’)->
have
)

	)

60 
	#CXBd⁄e
(
p
Ë(’)->
d⁄e
)

	)

61 
	#CXBmöe
(
p
Ë(’)->
möe
)

	)

63 
	s_ªÆ_buf„r_desc
 {

64 
REAL
 *
	md©a
;

65 
	msize
, 
	movÕ
, 
	mw™t
, 
	mhave
, 
	md⁄e
, 
	mmöe
;

66 } 
	tRLBuf„r
, *
	tRLB
;

68 
	#RLBba£
(
p
Ë(’)->
d©a
)

	)

69 
	#RLBd©a
(
p
, 
i
Ë(
	`RLBba£
’)[(i)])

	)

70 
	#RLBsize
(
p
Ë(’)->
size
)

	)

71 
	#RLBovÕ
(
p
Ë(’)->
ovÕ
)

	)

72 
	#RLBw™t
(
p
Ë(’)->
w™t
)

	)

73 
	#RLBhave
(
p
Ë(’)->
have
)

	)

74 
	#RLBd⁄e
(
p
Ë(’)->
d⁄e
)

	)

75 
	#RLBmöe
(
p
Ë(’)->
möe
)

	)

77 *
ß„Æloc
(
cou¡
, 
nbyãs
, *
èg
);

78 
ß„‰ì
(*
p
);

79 
size_t
 
ß„memcuºcou¡
();

80 
ß„memª£t
();

82 
REAL
 *
√wvec_REAL
(
size
, *
èg
);

83 
dñvec_REAL
(
REAL
 *
vec
);

84 
IMAG
 *
√wvec_IMAG
(
size
, *
èg
);

85 
dñvec_IMAG
(
IMAG
 *
vec
);

86 
COMPLEX
 *
√wvec_COMPLEX
(
size
, *
èg
);

87 
dñvec_COMPLEX
(
COMPLEX
 * 
buf
);

88 
COMPLEX
 *
√wvec_COMPLEX_f·w
(
size
, *
èg
);

89 
dñvec_COMPLEX_f·w
(
COMPLEX
 * 
buf
);

90 
dump_REAL
(
FILE
 *
Â
, *
hód
, 
REAL
 *
±r
, 
beg
, 
fö
);

91 
dump_IMAG
(
FILE
 *
Â
, *
hód
, 
IMAG
 *
±r
, 
beg
, 
fö
);

92 
dump_CX
(
FILE
 *
Â
, *
hód
, 
COMPLEX
 *
±r
, 
beg
, 
fö
);

94 
CXB
 
√wCXB
(
size
, 
COMPLEX
 *
ba£
, *
èg
);

95 
dñCXB
(
CXB
 
p
);

97 
RLB
 
√wRLB
(
size
, 
REAL
 *
ba£
, *
èg
);

98 
dñRLB
(
RLB
 
p
);

100 
REAL
 
n‹mÆize_vec_REAL
(REAL *, , REAL);

101 
REAL
 
n‹mÆize_vec_COMPLEX
(
COMPLEX
 *, , REAL);

	@common.h

35 #i‚de‡
_comm⁄_h


37 
	#_comm⁄_h


	)

40 
	~<‰omsys.h
>

41 
	~<defs.h
>

42 
	~<b™Æ.h
>

43 
	~<•lôfõlds.h
>

44 
	~<d©©y≥s.h
>

45 
	~<bufvec.h
>

46 
	~<cx›s.h
>

47 
	~<rögb.h
>

48 
	~<lmadf.h
>

49 
	~<f·w3.h
>

50 
	~<f·w3_fix.h
>

51 
	~<ovsv.h
>

52 
	~<fûãr.h
>

53 
	~<fût2p2z.h
>

54 
	~<oscûœt‹.h
>

55 
	~<dâ•agc.h
>

57 
	~<fm_demod.h
>

58 
	~<ªßm∂e.h
>

59 
	~<ªßm∂eF.h
>

60 
	~<noi£bœnkî.h
>

61 
	~<c‹ª˘IQ.h
>

62 
	~<dcblock.h
>

63 
	~<•ìch¥oc.h
>

64 
	~<wscom∑nd.h
>

65 
	~<•Ÿt⁄e.h
>

66 
	~<upd©e.h
>

67 
	~<mëî.h
>

68 
	~<•e˘rum.h
>

69 
	~<wödow.h
>

70 
	~<isob™d.h
>

71 
	~<gøphi˚q.h
>

74 
	~<±hªad.h
>

75 
	~<sched.h
>

76 
	~<£m≠h‹e.h
>

82 
	~<sdªxp‹t.h
>

83 
	~<loˇl.h
>

	@complex.h

34 #i‚de‡
_com∂ex_h


35 
	#_com∂ex_h


	)

36 
	~<d©©y≥s.h
>

37 
	s_COMPLEX


39 
REAL
 
	mª
, 
	mim
;

40 } 
	tCOMPLEX
;

42 
	#c_ª
(
x
Ë((x).
ª
)

	)

43 
	#c_im
(
x
Ë((x).
im
)

	)

	@compress.c

36 
	~<comm⁄.h
>

37 
	~<com¥ess.h
>

38 
	~<m©h.h
>

40 
COMPRESSOR
 
	$√wCom¥ess‹
 (

41 
COMPLEX
 *
öbuff
,

42 
COMPLEX
 *
outbuff
,

43 
buffsize
,

44 
gaö
,

45 *
èg


48 
COMPRESSOR
 
a
;

49 
a
 = (
COMPRESSOR
Ë
	`ß„Æloc
 (1,(
com¥ess‹
), 
èg
);

50 
a
->
öbuff
 = inbuff;

51 
a
->
outbuff
 = outbuff;

52 
a
->
buffsize
 = buffsize;

53 
a
->
gaö
 = gain;

55  
a
;

56 
	}
}

58 
	$dñCom¥ess‹
 (
COMPRESSOR
 
a
)

60 i‡(
a
)

61 
	`ß„‰ì
 ((*Ë
a
);

62 
	}
}

64 
	$Com¥ess‹
 (
COMPRESSOR
 
a
)

66 
i
;

67 
mag
;

69 
i
 = 0; i < 
a
->
buffsize
; i++)

71 
mag
 = ()
	`sqπ
(
a
->
öbuff
[
i
].
ª
 *á->öbuff[i].ª +á->öbuff[i].
im
 *á->inbuff[i].im);

72 i‡(
a
->
gaö
 * 
mag
 > 1.0f)

74 
a
->
outbuff
[
i
].
ª
 =á->
öbuff
[i].ª / 
mag
;

75 
a
->
outbuff
[
i
].
im
 = 0.0;

79 
a
->
outbuff
[
i
].
ª
 =á->
gaö
 *á->
öbuff
[i].re;

80 
a
->
outbuff
[
i
].
im
 = 0.0;

84 
	}
}

	@compress.h

33 #i‚de‡
_com¥ess‹_h


34 
	#_com¥ess‹_h


	)

36 
	s_com¥ess‹


38 
COMPLEX
 *
	möbuff
;

39 
COMPLEX
 *
	moutbuff
;

40 
	mbuffsize
;

41 
	mgaö
;

42 
	mèg
[4];

43 }
	tcom¥ess‹
, *
	tCOMPRESSOR
;

45 
Com¥ess‹
 (
COMPRESSOR
 
a
);

47 
COMPRESSOR
 
√wCom¥ess‹
 (

48 
COMPLEX
 *
öbuff
,

49 
COMPLEX
 *
outbuff
,

50 
buffsize
,

51 
gaö
,

52 *
èg


55 
dñCom¥ess‹
 (
COMPRESSOR
 
a
);

	@correctIQ.c

37 
	~<comm⁄.h
>

41 
IQ


42 
	$√wC‹ª˘IQ
 (
REAL
 
pha£
, REAL 
gaö
, REAL 
mu
)

44 
IQ
 
iq
 = (IQË
	`ß„Æloc
 (1,  (
iq°©e
), "IQ state");

45 
iq
->
pha£
 =Öhase;

46 
iq
->
gaö
 = gain;

47 
iq
->
mu
 = mu;

48 
iq
->
Àakage
 = 0.000000f;

49 
iq
->
MASK
=15;

50 
iq
->
ödex
=0;

51 
iq
->
w
 = (
COMPLEX
 *)
	`ß„Æloc
(16,(COMPLEX),"correctIQ w");

52 
iq
->
y
 = (
COMPLEX
 *)
	`ß„Æloc
(16,(COMPLEX),"correctIQ y");

53 
iq
->
dñ
 = (
COMPLEX
 *)
	`ß„Æloc
(16,(COMPLEX),"correctIQ del");

54 
	`mem£t
((*)
iq
->
w
,0,16*(
COMPLEX
));

55 
iq
->
wbú_tu√d
 = 
TRUE
;

56 
iq
->
wbú_°©e
 = 
Fa°Ad≠t
;

57  
iq
;

58 
	}
}

61 
	$dñC‹ª˘IQ
 (
IQ
 
iq
)

63 
	`ß„‰ì
((*)
iq
->
w
);

64 
	`ß„‰ì
((*)
iq
->
y
);

65 
	`ß„‰ì
((*)
iq
->
dñ
);

66 
	`ß„‰ì
 ((*Ë
iq
);

67 
	}
}

69 
	gIQdoô
 = 1;

70 
	gRXIQ_mëhod
 = 1;

71 
	gTXIQdoô
 = 0;

74 
	$c‹ª˘IQ
 (
CXB
 
sigbuf
, 
IQ
 
iq
, 
BOOLEAN
 
isTX
, 
subch™
)

76 
i
;

77 
REAL
 
doô
;

78 i‡(!
isTX
 && (
IQdoô
 =1Ë&& (
RXIQ_mëhod
 == 0)) {

79 
i
 = 0; i < 
	`CXBhave
 (
sigbuf
); i++){

80 
	`CXBimag
 (
sigbuf
, 
i
Ë+
iq
->
pha£
 * 
	`CXBªÆ
 (sigbuf, i);

81 
	`CXBªÆ
 (
sigbuf
, 
i
Ë*
iq
->
gaö
;

86 if(!
isTX
 && (
IQdoô
 =1Ë&& (
RXIQ_mëhod
 == 1))

88 
doô
 = 
iq
->
mu
;

90 
iq
->
wbú_°©e
) {

91 
Fa°Ad≠t
:

93 
SlowAd≠t
:

95 
NoAd≠t
:

101 
i
 = 0; i < 
	`CXBhave
 (
sigbuf
); i++)

103 
iq
->
dñ
[iq->
ödex
] = 
	`CXBd©a
(
sigbuf
, 
i
);

104 
iq
->
y
[iq->
ödex
] = 
	`Cadd
(iq->
dñ
[iq->ödex], 
	`Cmul
(iq->
w
[0], 
	`C⁄jg
(iq->del[iq->index])));

105 
iq
->
y
[iq->
ödex
] = 
	`Cadd
(iq->y[iq->ödex], 
	`Cmul
(iq->
w
[1], 
	`C⁄jg
(iq->y[iq->index])));

106 
iq
->
w
[1] = 
	`Csub
(iq->w[1], 
	`Cs˛
(
	`Cmul
(iq->
y
[iq->
ödex
], iq->y[iq->ödex]), 
doô
));

108 
	`CXBd©a
(
sigbuf
, 
i
Ë
iq
->
y
[iq->
ödex
];

109 
iq
->
ödex
 = (iq->ödex + iq->
MASK
) & iq->MASK;

113 i‡(
isTX
 && (
TXIQdoô
 == 1))

115 
i
 = 0; i < 
	`CXBhave
 (
sigbuf
); i++)

117 
	`CXBimag
 (
sigbuf
, 
i
Ë+
iq
->
pha£
 * 
	`CXBªÆ
 (sigbuf, i);

118 
	`CXBªÆ
 (
sigbuf
, 
i
Ë*
iq
->
gaö
;

122 
	}
}

	@correctIQ.h

1 #i‚de‡
_c‹ª˘IQ_h


2 
	#_c‹ª˘IQ_h


	)

4 
	~<bufvec.h
>

6 
	e_wbú_°©e


8 
	mFa°Ad≠t
,

9 
	mSlowAd≠t
,

10 
	mNoAd≠t
,

11 
	mJu°SayNo


12 } 
	tWBIR_STATE
;

14 
	s_iq°©e


16 
REAL
 
	mpha£
, 
	mgaö
,
	mmu
, 
	mÀakage
;

17 
COMPLEX
 *
	mw
;

18 
COMPLEX
 *
	mdñ
;

19 
COMPLEX
 *
	my
;

20 
COMPLEX
 
	mdc
;

21 
	mMASK
;

22 
	mödex
;

23 
WBIR_STATE
 
	mwbú_°©e
;

24 
BOOLEAN
 
	mwbú_tu√d
;

25 } *
	tIQ
, 
	tiq°©e
;

27 
IQ
 
√wC‹ª˘IQ
 (
REAL
 
pha£
, REAL 
gaö
, REAL 
mu
);

28 
dñC‹ª˘IQ
 (
IQ
 
iq
);

29 
c‹ª˘IQ
 (
CXB
 
sigbuf
, 
IQ
 
iq
, 
BOOLEAN
 
isTX
, 
subch™
);

30 
	#IQFIRÀngth
 1

	)

	@cwtones.c

34 
	~<cwt⁄es.h
>

42 
BOOLEAN


43 
	$CWT⁄e
 (
CWT⁄eGí
 
cwt
)

45 
i
, 
n
 = 
cwt
->
size
;

47 
	`Com∂exOSC
 (
cwt
->
osc
.
gí
);

49 
i
 = 0; i < 
n
; i++)

52 i‡(
cwt
->
°age
 =
CWT⁄e_RISE
)

55 i‡(
cwt
->
ri£
.
have
++ < cwt->ri£.
w™t
)

57 
cwt
->
cuº
 +cwt->
ri£
.
ö¸
;

58 
cwt
->
mul
 = cwt->
s˛
 * (
REAL
Ë
	`CWSIN
 (cwt->
cuº
 * 
M_PI
 / 2.0);

63 
cwt
->
cuº
 = 1.0;

64 
cwt
->
mul
 = cwt->
s˛
;

65 
cwt
->
°age
 = 
CWT⁄e_STDY
;

70 i‡(
cwt
->
°age
 =
CWT⁄e_FALL
)

73 i‡(
cwt
->
ÁŒ
.
have
++ < cwt->ÁŒ.
w™t
)

75 
cwt
->
cuº
 -cwt->
ÁŒ
.
ö¸
;

76 
cwt
->
mul
 = cwt->
s˛
 * (
REAL
Ë
	`CWSIN
 (cwt->
cuº
 * 
M_PI
 / 2.0);

81 
cwt
->
cuº
 = 0.0;

82 
cwt
->
mul
 = 0.0;

83 
cwt
->
°age
 = 
CWT⁄e_HOLD
;

89 
	`CXBd©a
 (
cwt
->
buf
, 
i
Ë
	`Cs˛
 (CXBd©®(cwt->buf, i), cwt->
mul
);

91 
	`CXBhave
(
cwt
->
buf
Ë
n
;

95  
cwt
->
°age
 !
CWT⁄e_HOLD
;

96 
	}
}

102 
	$CWT⁄eOn
 (
CWT⁄eGí
 
cwt
)

105 
cwt
->
s˛
 = (
REAL
Ë
	`pow
 (10.0, cwt->
gaö
 / 20.0);

106 
cwt
->
cuº
 = cwt->
mul
 = 0.0;

109 
cwt
->
ri£
.
w™t
 = (Ë(0.5 + cwt->
§
 * (cwt->ri£.
dur
 / 1e3));

110 
cwt
->
ri£
.
have
 = 0;

111 i‡(
cwt
->
ri£
.
w™t
 <= 1)

112 
cwt
->
ri£
.
ö¸
 = 1.0;

114 
cwt
->
ri£
.
ö¸
 = 1.0‡/ (cwt->ri£.
w™t
 - 1);

116 
cwt
->
ÁŒ
.
w™t
 = (Ë(0.5 + cwt->
§
 * (cwt->ÁŒ.
dur
 / 1e3));

117 
cwt
->
ÁŒ
.
have
 = 0;

118 i‡(
cwt
->
ÁŒ
.
w™t
 <= 1)

119 
cwt
->
ÁŒ
.
ö¸
 = 1.0;

121 
cwt
->
ÁŒ
.
ö¸
 = 1.0‡/ (cwt->ÁŒ.
w™t
 - 1);

123 
cwt
->
°age
 = 
CWT⁄e_RISE
;

124 
	}
}

130 
	$CWT⁄eOff
 (
CWT⁄eGí
 
cwt
)

132 
cwt
->
°age
 = 
CWT⁄e_FALL
;

133 
	}
}

138 
	$£tCWT⁄eGíVÆs
 (
CWT⁄eGí
 
cwt
, 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
)

140 
cwt
->
gaö
 = gain;

141 
cwt
->
osc
.
‰eq
 = freq;

142 
cwt
->
ri£
.
dur
 =Ñise;

143 
cwt
->
ÁŒ
.
dur
 = fall;

144 
	}
}

146 
CWT⁄eGí


147 
	$√wCWT⁄eGí
 (

148 
REAL
 
gaö
,

149 
REAL
 
‰eq
,

150 
REAL
 
ri£
,

151 
REAL
 
ÁŒ
,

152 
size
,

153 
REAL
 
ßm∂î©e
)

155 
CWT⁄eGí
 
cwt
 = (CWT⁄eGíË
	`ß„Æloc
 (1,  (
CWT⁄eGíDesc
),

158 
	`£tCWT⁄eGíVÆs
 (
cwt
, 
gaö
, 
‰eq
, 
ri£
, 
ÁŒ
);

159 
cwt
->
size
 = size;

160 
cwt
->
§
 = 
ßm∂î©e
;

162 
cwt
->
osc
.
gí
 = 
	`√wOSC
 (cwt->
size
,

163 
Com∂exT⁄e
,

164 (Ë
cwt
->
osc
.
‰eq
, 0.0, cwt->
§
, "CWTone osc");

167 
cwt
->
buf
 = 
	`√wCXB
 (cwt->
size
, 
	`OSCCba£
 (cwt->
osc
.
gí
), "CWToneGen buf");

169  
cwt
;

170 
	}
}

173 
	$dñCWT⁄eGí
 (
CWT⁄eGí
 
cwt
)

175 i‡(
cwt
)

177 
	`dñCXB
 (
cwt
->
buf
);

178 
	`dñOSC
 (
cwt
->
osc
.
gí
);

179 
	`ß„‰ì
 ((*Ë
cwt
);

181 
	}
}

	@cwtones.h

34 #i‚de‡
_cwt⁄e_h


35 
	#_cwt⁄e_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<cx›s.h
>

42 
	~<oscûœt‹.h
>

43 
	~<m©h.h
>

45 
	#CWT⁄e_IDLE
 (0)

	)

46 
	#CWT⁄e_WAIT
 (1)

	)

47 
	#CWT⁄e_RISE
 (2)

	)

48 
	#CWT⁄e_STDY
 (3)

	)

49 
	#CWT⁄e_FALL
 (4)

	)

50 
	#CWT⁄e_HOLD
 (5)

	)

51 
	#CWSIN
 
sö


	)

52 
	s_cw_t⁄e_gí


54 
REAL
 
	mcuº
, 
	mgaö
, 
	mmul
, 
	ms˛
, 
	m§
;

57 
REAL
 
	m‰eq
;

58 
OSC
 
	mgí
;

59 } 
	mosc
;

62 
REAL
 
	mdur
, 
	mö¸
;

63 
	mw™t
, 
	mhave
;

64 } 
	mri£
, 
	mÁŒ
;

65 
	msize
, 
	m°age
;

66 
CXB
 
	mbuf
;

67 } 
	tCWT⁄eGíDesc
, *
	tCWT⁄eGí
;

69 
CWT⁄eGí
 
√wCWT⁄eGí
 (
REAL
 
gaö
,

70 
REAL
 
‰eq
,

71 
REAL
 
ri£
,

72 
REAL
 
ÁŒ
,

73 
size
,

74 
REAL
 
ßm∂î©e
);

75 
dñCWT⁄eGí
 (
CWT⁄eGí
 
gí
);

76 
£tCWT⁄eGíVÆs
 (
CWT⁄eGí
 
gí
,

77 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
);

78 
CWT⁄eOn
 (
CWT⁄eGí
 
gí
);

79 
CWT⁄eOff
 (
CWT⁄eGí
 
gí
);

80 
BOOLEAN
 
CWT⁄e
 (
CWT⁄eGí
 
gí
);

	@cxops.c

33 
	~<cx›s.h
>

37 
COMPLEX
 
	gcxzîo
 = { 0.0, 0.0 };

38 
COMPLEX
 
	gcx⁄e
 = { 1.0, 0.0 };

39 
COMPLEX
 
	gcxJ
 = { 0.0, 1.0 };

40 
COMPLEX
 
	gcxmöus⁄e
 = { -1.0, 0.0 };

41 
COMPLEX
 
	gcxmöusJ
 = { 0.0, -1.0 };

43 #ifde‡
DONT_INCLUDE


44 
__f‹˚ölöe
 
	$vecSq
(
s£vec
 *
a
, s£ve¯*
b
, 
l
)

46 
i
;

47 
s£vec
 *
ös_a
,*
ös_b
;

48 
i
=0;i<
l
;i++)

50 
ös_a
 = 
a
+
i
;

51 
ös_b
 = 
b
+
i
;

52 
_asm


54 
mov
 
ebx
, [
ös_a
]

55 
movups
 
xmm0
, [
ebx
]

56 
muÕs
 
xmm0
,xmm0

57 
mov
 
ebx
, [
ös_b
]

58 
movups
 [
ebx
], 
xmm1


61 
	}
}

	@cxops.h

33 #i‚de‡
_cx›s_h


35 
	#_cx›s_h


	)

37 
	~<com∂ex.h
>

38 
	~<d©©y≥s.h
>

39 
	~<Á°rig.h
>

41 
COMPLEX
 
cxzîo
;

42 
COMPLEX
 
cx⁄e
;

43 
COMPLEX
 
cxJ
;

44 
COMPLEX
 
cxmöus⁄e
;

45 
COMPLEX
 
cxmöusJ
;

50 
INLINE
 
COMPLEX


51 
	$Cs˛
 (
COMPLEX
 
x
, 
REAL
 
a
)

53 
COMPLEX
 
z
;

54 
	`c_ª
 (
z
Ëc_ª (
x
Ë* 
a
;

55 
	`c_im
 (
z
Ëc_im (
x
Ë* 
a
;

56  
z
;

57 
	}
}

59 
INLINE
 
COMPLEX


60 
	$Cadd
 (
COMPLEX
 
x
, COMPLEX 
y
)

62 
COMPLEX
 
z
;

63 
	`c_ª
 (
z
Ëc_ª (
x
Ë+ c_ª (
y
);

64 
	`c_im
 (
z
Ëc_im (
x
Ë+ c_im (
y
);

65  
z
;

66 
	}
}

68 
INLINE
 
COMPLEX


69 
	$Csub
 (
COMPLEX
 
x
, COMPLEX 
y
)

71 
COMPLEX
 
z
;

72 
	`c_ª
 (
z
Ëc_ª (
x
Ë- c_ª (
y
);

73 
	`c_im
 (
z
Ëc_im (
x
Ë- c_im (
y
);

74  
z
;

75 
	}
}

77 
INLINE
 
COMPLEX


78 
	$Cmul
 (
COMPLEX
 
x
, COMPLEX 
y
)

80 
COMPLEX
 
z
;

81 
	`c_ª
 (
z
Ëc_ª (
x
Ë* c_ª (
y
Ë- 
	`c_im
 (x) * c_im (y);

82 
	`c_im
 (
z
Ëc_im (
x
Ë* 
	`c_ª
 (
y
) + c_re (x) * c_im (y);

83  
z
;

84 
	}
}

86 
INLINE
 
COMPLEX


87 
	$Cdiv
 (
COMPLEX
 
x
, COMPLEX 
y
)

89 
REAL
 
d
 = 
	`sqr
 (
	`c_ª
 (
y
)Ë+ sq∏(
	`c_im
 (y));

90 
COMPLEX
 
z
;

91 
	`c_ª
 (
z
Ë(c_ª (
x
Ë* c_ª (
y
Ë+ 
	`c_im
 (xË* c_im (y)Ë/ 
d
;

92 
	`c_im
 (
z
Ë(
	`c_ª
 (
y
Ë* c_im (
x
Ë- c_im (yË* c_ª (x)Ë/ 
d
;

93  
z
;

94 
	}
}

96 
INLINE
 
REAL


97 
	$C≠pmag
(
COMPLEX
 
z
)

99 
REAL
 
tm¥
 = (REAL)
	`Ábs
(
z
.
ª
);

100 
REAL
 
tmpi
 = (REAL)
	`Ábs
(
z
.
im
);

101 
REAL
 
tmp
 = (
tm¥
 < 
tmpi
 ? 0.4f*tmpr + 0.7f*tmpi : 0.4f*tmpi + 0.7f*tmpr);

102  
tmp
;

103 
	}
}

105 
INLINE
 
REAL


106 
	$Cmag
 (
COMPLEX
 
z
)

108  (
REAL
Ë
	`sqπ
 (
	`sqr
 (
z
.
ª
Ë+ sq∏(z.
im
));

110 
	}
}

112 
INLINE
 
REAL


113 
	$Cabs
 (
COMPLEX
 
z
)

115  (
REAL
Ë
	`sqπ
 (
	`sqr
 (
z
.
ª
Ë+ sq∏(z.
im
));

116 
	}
}

118 
INLINE
 
REAL


119 
	$Csqrmag
 (
COMPLEX
 
z
)

121  (
REAL
Ë(
	`sqr
 (
z
.
ª
Ë+ sq∏(z.
im
));

122 
	}
}

124 
INLINE
 
COMPLEX


125 
	$Cm∂x
 (
REAL
 
x
, 
IMAG
 
y
)

127 
COMPLEX
 
z
;

128 
z
.
ª
 = 
x
, z.
im
 = 
y
;

129  
z
;

130 
	}
}

132 
INLINE
 
COMPLEX


133 
	$C⁄jg
 (
COMPLEX
 
z
)

135  
	`Cm∂x
 (
z
.
ª
, -z.
im
);

136 
	}
}

138 
INLINE
 
COMPLEX


139 
	$Cexp
 (
COMPLEX
 
z
)

141 
REAL
 
r
 = (REALË
	`exp
 (
z
.
ª
);

142  
	`Cm∂x
 ((
REAL
Ë(
r
 * 
	`cos
 (
z
.
im
)), (
IMAG
Ë‘ * 
	`sö
 (z.im)));

143 
	}
}

145 
INLINE
 
COMPLEX


146 
	$Cp2r
 (
COMPLEX
 
z
)

148  
	`Cm∂x
 ((
REAL
Ë(
z
.
ª
 * 
	`cos
 (z.
im
)), (
IMAG
Ë(z.ª * 
	`sö
 (z.im)));

149 
	}
}

151 
INLINE
 
COMPLEX


152 
	$Cr2p
 (
COMPLEX
 
z
)

154  
	`Cm∂x
 (

155 (
REAL
Ë(
	`sqπ
 (
	`sqr
 (
z
.
ª
Ë+ sq∏(z.
im
))),

157 (
REAL
Ë
	`©™2
 (
z
.
im
, z.
ª
));

158 
	}
}

159 
	sSSEVEC


161 
	ma
,
	mb
,
	mc
,
	md
;

162 } 
	ts£vec
;

	@datatypes.h

34 #i‚de‡
_d©©y≥s_h


36 
	#_d©©y≥s_h


	)

38 
	~<‰omsys.h
>

41 
	tBOOLEAN
;

42 
	tREAL
;

43 
	tIMAG
;

44 
	tSAMPLE_16t
;

45 
	tHANDLE
;

48 
	~<com∂ex.h
>

50 #i‚de‡
PRIVATE


51 
	#PRIVATE
 

	)

54 #i‚de‡
INLINE


56 
	#INLINE


	)

59 
	~<b™Æ.h
>

	@dcblock.c

34 
	~<dcblock.h
>

39 
PRIVATE
 
REAL


40 
buâîw‹th_hùass_100_2
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
),

41 
buâîw‹th_hùass_100_4
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
),

42 
buâîw‹th_hùass_100_6
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
),

43 
buâîw‹th_hùass_100_8
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
);

46 
	$DCBlock
 (
DCBlockî
 
dcb
)

48 
i
;

49 
REAL
 
x
, 
y
;

51 
dcb
->
Àv
)

53 
DCB_LOW
:

54 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

56 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

57 
y
 = 
	`buâîw‹th_hùass_100_2
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

58 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

62 
DCB_MED
:

63 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

65 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

66 
y
 = 
	`buâîw‹th_hùass_100_4
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

67 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

71 
DCB_HIGH
:

72 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

74 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

75 
y
 = 
	`buâîw‹th_hùass_100_6
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

76 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

80 
DCB_SUPER
:

81 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

83 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

84 
y
 = 
	`buâîw‹th_hùass_100_8
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

85 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

88 
DCB_SINGLE_POLE
:

89 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

91 
COMPLEX
 
x
=
	`CXBd©a
(
dcb
->
buf
,
i
);

92 
dcb
->
sigvÆ
 = 
	`Cadd
(
	`Cs˛
(
x
,.00005f), Cscl(dcb->sigval,0.99995f));

93 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Csub
(
x
,dcb->
sigvÆ
);

99 
	}
}

102 
	$ª£tDCBlockî
 (
DCBlockî
 
dcb
, 
Àv
)

104 
	`mem£t
 ((*Ë
dcb
->
ﬁd
.
öp
, 0, 
BLKMEM
 *  (
REAL
));

105 
	`mem£t
 ((*Ë
dcb
->
ﬁd
.
out
, 0, 
BLKMEM
 *  (
REAL
));

106 
dcb
->
Àv
 =Üev;

107 
	}
}

109 
DCBlockî


110 
	$√wDCBlockî
 (
Àv
, 
CXB
 
buf
)

112 
DCBlockî
 
dcb
 =

113 (
DCBlockî
Ë
	`ß„Æloc
 (1,  (
DCBlockîInfo
), "DCBlocker");

114 
dcb
->
buf
 = 
	`√wCXB
 (
	`CXBsize
 (buf), 
	`CXBba£
 (buf), "DCBlocker");

115 
dcb
->
Àv
 =Üev;

116 
dcb
->
sigvÆ
 = 
cxzîo
;

117  
dcb
;

118 
	}
}

121 
	$dñDCBlockî
 (
DCBlockî
 
dcb
)

123 i‡(
dcb
)

125 
	`dñCXB
 (
dcb
->
buf
);

126 
	`ß„‰ì
 ((*Ë
dcb
);

128 
	}
}

132 
PRIVATE
 
REAL


133 
	$buâîw‹th_hùass_100_2
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

135 
i
;

137 
i
 = 1; i < 2; i++)

138 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

140 
xv
[2] = (
REAL
Ë(
xö
 / 1.009297482);

142 
yv
[2] = (
REAL
Ë((
xv
[0] + xv[2])

143 + -2.0 * 
xv
[1]

144 + -0.9816611902 * 
yv
[0]

145 + 1.9814914708 * 
yv
[1]);

147  
yv
[2];

148 
	}
}

150 
PRIVATE
 
REAL


151 
	$buâîw‹th_hùass_100_4
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

153 
i
;

155 
i
 = 1; i < 4; i++)

156 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

158 
xv
[4] = (
REAL
Ë(
xö
 / 1.012);

160 
yv
[4] = (
REAL
Ë((
xv
[0] + xv[4])

161 + -4.0 * (
xv
[1] + xv[3])

162 + 6.0 * 
xv
[2]

163 + -0.976340271 * 
yv
[0]

164 + 3.928738552 * 
yv
[1]

165 + -5.928454312 * 
yv
[2]

166 + 3.976056024 * 
yv
[3]);

168  
yv
[4];

169 
	}
}

171 
PRIVATE
 
REAL


172 
	$buâîw‹th_hùass_100_6
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

174 
i
;

176 
i
 = 1; i < 6; i++)

177 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

179 
xv
[6] = (
REAL
Ë(
xö
 / 1.025606415);

181 
yv
[6] = (
REAL
Ë((
xv
[0] + xv[6])

182 + -6.0 * (
xv
[1] + xv[5])

183 + 15.0 * (
xv
[2] + xv[4])

184 + -20.0 * 
xv
[3]

185 + -0.9506891622 * 
yv
[0]

186 + 5.7522090378 * 
yv
[1]

187 + -14.5019247580 * 
yv
[2]

188 + 19.4994114580 * 
yv
[3]

189 + -14.7484389800 * 
yv
[4]

190 + 5.9494324049 * 
yv
[5]);

192  
yv
[6];

193 
	}
}

195 
PRIVATE
 
REAL


196 
	$buâîw‹th_hùass_100_8
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

198 
i
;

200 
i
 = 1; i < 8; i++)

201 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

203 
xv
[8] = (
REAL
Ë(
xö
 / 1.034112352);

205 
yv
[8] = (
REAL
Ë((
xv
[0] + xv[8])

206 + -8.0 * (
xv
[1] + xv[7])

207 + 28.0 * (
xv
[2] + xv[6])

208 + -56.0 * (
xv
[3] + xv[5])

209 + 70.0 * 
xv
[4]

210 + -0.9351139781 * 
yv
[0]

211 + 7.5436450525 * 
yv
[1]

212 + -26.6244301320 * 
yv
[2]

213 + 53.6964633920 * 
yv
[3]

214 + -67.6854640540 * 
yv
[4]

215 + 54.6046308830 * 
yv
[5]

216 + -27.5326449810 * 
yv
[6]

217 + 7.9329138172 * 
yv
[7]);

219  
yv
[8];

220 
	}
}

	@dcblock.h

34 #i‚de‡
_dcblock_h


35 
	#_dcblock_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

45 
	#BLKMEM
 (9)

	)

46 
	#DCB_LOW
 (0)

	)

47 
	#DCB_MED
 (1)

	)

48 
	#DCB_HIGH
 (2)

	)

49 
	#DCB_SUPER
 (3)

	)

50 
	#DCB_SINGLE_POLE
 (4)

	)

52 
	s_dcblockî


56 
REAL
 
	möp
[
BLKMEM
], 
	mout
[BLKMEM];

57 } 
	mﬁd
;

58 
	mÀv
;

59 
COMPLEX
 
	msigvÆ
;

60 
CXB
 
	mbuf
;

61 
REAL
 
	mgaö
;

62 
BOOLEAN
 
	mÊag
;

63 } 
	tDCBlockîInfo
, *
	tDCBlockî
;

65 
DCBlock
 (
DCBlockî
 
dcb
);

66 
ª£tDCBlockî
 (
DCBlockî
 
dcb
, 
Àv
);

67 
DCBlockî
 
√wDCBlockî
 (
Àv
, 
CXB
 
buf
);

68 
dñDCBlockî
 (
DCBlockî
 
dcb
);

	@defs.h

34 #i‚de‡
_defs_h


35 
	#_defs_h


	)

37 
	#RINGMULT
 (4)

	)

38 
	#METERMULT
 (20)

	)

39 
	#SPECMULT
 (4)

	)

40 
	#DEFRATE
 (48000.0)

	)

41 
	#DEFSIZE
 (4096)

	)

42 
	#DEFMODE
 (
USB
)

	)

43 
	#DEFSPEC
 (4096)

	)

44 
	#DEFCOMP
 (512)

	)

46 
	#MAXRX
 (2)

	)

48 #i‚de‡
MAXPATHLEN


49 
	#MAXPATHLEN
 (2048)

	)

52 
	e_sdrmode


54 
	mLSB
,

55 
	mUSB
,

56 
	mDSB
,

57 
	mCWL
,

58 
	mCWU
,

59 
	mFM
,

60 
	mAM
,

61 
	mDIGU
,

62 
	mSPEC
,

63 
	mDIGL
,

64 
	mSAM
,

65 
	mDRM


66 } 
	tSDRMODE
;

68 
	e_swch°©e
 {

69 
	mSWCH_FALL
,

70 
	mSWCH_STDY
,

71 
	mSWCH_RISE


72 } 
	tSWCHSTATE
;

74 
	e_åxmode


75 { 
	mRX
, 
	mTX
 } 
	tTRXMODE
;

	@diversity.c

35 
	~<divîsôy.h
>

36 
	~<sdªxp‹t.h
>

39 
	g¨rivÆ_osc
=0;

40 
	g¨rivÆ_sum
=0;

41 
	g¨rivÆ_out
=0;

42 
	g¨rivÆ_åx
=0;

44 
	$b¨rõr_osc
()

46 
	`±hªad_muãx_lock
(&
divîsôy
.
divîsôy_osc_muãx
);

47 
¨rivÆ_osc
++;

48 i‡(
¨rivÆ_osc
 < 2) {

49 
	`±hªad_c⁄d_waô
(&
divîsôy
.
dv_osc_c⁄d
,&divîsôy.
divîsôy_osc_muãx
);

51 
¨rivÆ_osc
 = 0;

52 
	`±hªad_c⁄d_brﬂdˇ°
(&
divîsôy
.
dv_osc_c⁄d
);

54 
	`±hªad_muãx_u∆ock
(&
divîsôy
.
divîsôy_osc_muãx
);

55 
	}
}

57 
	$b¨rõr_sum
()

59 
	`±hªad_muãx_lock
(&
divîsôy
.
divîsôy_sum_muãx
);

60 
¨rivÆ_sum
++;

61 i‡(
¨rivÆ_sum
 < 2) {

62 
	`±hªad_c⁄d_waô
(&
divîsôy
.
dv_sum_c⁄d
,&divîsôy.
divîsôy_sum_muãx
);

64 
¨rivÆ_sum
 = 0;

65 
	`±hªad_c⁄d_brﬂdˇ°
(&
divîsôy
.
dv_sum_c⁄d
);

67 
	`±hªad_muãx_u∆ock
(&
divîsôy
.
divîsôy_sum_muãx
);

68 
	}
}

71 
	$b¨rõr_out
()

73 
	`±hªad_muãx_lock
(&
divîsôy
.
divîsôy_out_muãx
);

74 
¨rivÆ_out
++;

75 i‡(
¨rivÆ_out
 < 2) {

76 
	`±hªad_c⁄d_waô
(&
divîsôy
.
dv_out_c⁄d
,&divîsôy.
divîsôy_out_muãx
);

78 
¨rivÆ_out
 = 0;

79 
	`±hªad_c⁄d_brﬂdˇ°
(&
divîsôy
.
dv_out_c⁄d
);

81 
	`±hªad_muãx_u∆ock
(&
divîsôy
.
divîsôy_out_muãx
);

82 
	}
}

84 
	$b¨rõr_TRX
()

86 
	`±hªad_muãx_lock
(&
divîsôy
.
divîsôy_åx_muãx
);

87 
¨rivÆ_åx
++;

88 i‡(
¨rivÆ_åx
 < 2) {

89 
	`±hªad_c⁄d_waô
(&
divîsôy
.
dv_åx_c⁄d
,&divîsôy.
divîsôy_åx_muãx
);

91 
¨rivÆ_åx
 = 0;

92 
	`±hªad_c⁄d_brﬂdˇ°
(&
divîsôy
.
dv_åx_c⁄d
);

94 
	`±hªad_muãx_u∆ock
(&
divîsôy
.
divîsôy_åx_muãx
);

95 
	}
}

	@diversity.h

35 #i‚de‡
_divîsôy_h


36 
	#_divîsôy_h


	)

37 
	~<d©©y≥s.h
>

38 
	~<±hªad.h
>

40 
	s_divîsôy_block


42 
BOOLEAN
 
	mÊag
;

43 
COMPLEX
 
	msˇœr
;

44 
REAL
 
	mgaö
;

45 
±hªad_muãx_t
 
	mdivîsôy_osc_muãx
,
	mdivîsôy_sum_muãx
, 
	mdivîsôy_out_muãx
, 
	mdivîsôy_åx_muãx
;

46 
±hªad_c⁄d_t
 
	mdv_osc_c⁄d
,
	mdv_sum_c⁄d
,
	mdv_out_c⁄d
, 
	mdv_åx_c⁄d
;

47 } 
	tDivîsôyC⁄åﬁ
;

51 
b¨rõr_osc
();

52 
b¨rõr_sum
();

53 
b¨rõr_out
();

	@dttspagc.c

35 
	~<comm⁄.h
>

38 
DTTSPAGC


39 
	$√wDâSPAgc
 (
AGCMODE
 
mode
,

40 
COMPLEX
 *
Vec
,

41 
BufSize
,

42 
REAL
 
èrgë
,

43 
REAL
 
©èck
,

44 
REAL
 
deˇy
,

45 
REAL
 
¶›e
,

46 
REAL
 
h™gtime
,

47 
REAL
 
ßm¥©e
,

48 
REAL
 
MaxGaö
,

49 
REAL
 
MöGaö
,

50 
REAL
 
CurGaö
,

51 *
èg
)

53 
DTTSPAGC
 
a
;

55 
a
 = (
DTTSPAGC
Ë
	`ß„Æloc
 (1,  (
dâ•agc
), 
èg
);

56 
a
->
mode
 = mode;

62 
a
->
©èck
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (©èck * 
ßm¥©e
)));

64 
a
->
⁄e_m_©èck
 = (
REAL
Ë(1.0 -á->
©èck
);

67 
a
->
deˇy
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (deˇy * 
ßm¥©e
)));

69 
a
->
⁄e_m_deˇy
 = (
REAL
Ë(1.0 -á->
deˇy
);

77 
a
->
Á°©èck
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (0.2 * 
ßm¥©e
)));

79 
a
->
⁄e_m_Á°©èck
 = (
REAL
Ë(1.0 -á->
Á°©èck
);

82 
a
->
Á°deˇy
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (3.0 * 
ßm¥©e
)));

84 
a
->
⁄e_m_Á°deˇy
 = (
REAL
Ë(1.0 -á->
Á°deˇy
);

87 
	`°r˝y
 (
a
->
èg
,Åag);

90 
a
->
mask
 = 2 * 
BufSize
 - 1;

94 
a
->
h™gödex
 =á->
¶owödx
 = 0;

96 
a
->
h™gtime
 = hangtime * 0.001f;

101 
a
->
out_ödx
 = (Ë(
ßm¥©e
 * 
©èck
 * 0.003f);

104 
a
->
Á°ödx
 = ()(0.0027f*
ßm¥©e
);

105 
a
->
gaö
.
fix
 = 10.0;

109 
a
->
¶›e
 = slope;

112 
a
->
gaö
.
t›
 = 
MaxGaö
;

114 
a
->
h™gthªsh
 =á->
gaö
.
bŸtom
 = 
MöGaö
;

116 
a
->
gaö
.
Á°now
 =á->gaö.
ﬁd
 =á->gaö.
now
 = 
CurGaö
;

119 
a
->
gaö
.
èrgë
 =Åarget;

123 
a
->
buff
 = 
	`√wCXB
 (
BufSize
, 
Vec
, "agc in buffer");

125 
a
->
cúc
 = 
	`√wvec_COMPLEX
 (2 * 
BufSize
, "circularágc buffer");

128 
a
->
Á°h™g
 = 0;

131 
a
->
Á°h™gtime
 = 0.1f*a->
h™gtime
;

133  
a
;

134 
	}
}

137 
	$DâSPAgc_Êushbuf
(
DTTSPAGC
 
a
)

139 
	`mem£t
((*)
a
->
cúc
,0,(
COMPLEX
)*◊->
mask
+1));

140 
	}
}

143 
	$DâSPAgc
 (
DTTSPAGC
 
a
, 
tick
)

145 
i
;

146 
h™gtime
 = (Ë(
uni
[0].
ßm∂î©e
 * 
a
->hangtime);

147 
Á°h™gtime
 = (Ë(
uni
[0].
ßm∂î©e
 * 
a
->fasthangtime);

149 
REAL
 
h™gthªsh
;

152 
h™gthªsh
 =

153 
a
->
gaö
.
t›
 *á->
h™gthªsh
 +á->gaö.
bŸtom
 * (
REAL
) (1.0 -

154 
a
->
h™gthªsh
);

158 i‡(
a
->
mode
 == 0)

160 
i
 = 0; i < 
	`CXBsize
 (
a
->
buff
); i++)

161 
	`CXBd©a
 (
a
->
buff
, 
i
Ë
	`Cs˛
 (CXBd©®◊->buff, i),á->
gaö
.
fix
);

165 
i
 = 0; i < 
	`CXBsize
 (
a
->
buff
); i++)

167 
REAL
 
tmp
;

168 
a
->
cúc
[a->
¶owödx
] = 
	`CXBd©a
 (a->
buff
, 
i
);

171 
tmp
 = 
	`Cmag
 (
a
->
cúc
[a->
¶owödx
]);

172 i‡(
tmp
 > 0.0f)

173 
tmp
 = 
a
->
gaö
.
èrgë
 /Åmp;

177 
tmp
 = 
a
->
gaö
.
now
;

178 i‡(
tmp
 < 
h™gthªsh
)

179 
a
->
h™gödex
 = 
h™gtime
;

181 i‡(
tmp
 >
a
->
gaö
.
now
)

185 i‡(
a
->
h™gödex
++ > 
h™gtime
)

187 
a
->
gaö
.
now
 =

188 
a
->
⁄e_m_deˇy
 *á->
gaö
.
now
 +

189 
a
->
deˇy
 * 
	`mö
 (a->
gaö
.
t›
, 
tmp
);

194 
a
->
h™gödex
 = 0;

196 
a
->
gaö
.
now
 =

197 
a
->
⁄e_m_©èck
 *á->
gaö
.
now
 +á->
©èck
 * 
	`max
 (
tmp
,

198 
a
->
gaö
.
bŸtom
);

203 
tmp
 = 
	`Cmag
 (
a
->
cúc
[a->
Á°ödx
]);

204 i‡(
tmp
 > 0.0f)

205 
tmp
 = 
a
->
gaö
.
èrgë
 /Åmp;

209 
tmp
 = 
a
->
gaö
.
Á°now
;

210 i‡(
tmp
 > 
a
->
gaö
.
Á°now
)

213 i‡(
a
->
Á°h™g
++ > 
Á°h™gtime
)

215 
a
->
gaö
.
Á°now
 =

216 
a
->
⁄e_m_Á°deˇy
 *á->
gaö
.
Á°now
 +

217 
a
->
Á°deˇy
 * 
	`mö
 (a->
gaö
.
t›
, 
tmp
);

222 
a
->
Á°h™g
 = 0;

223 
a
->
gaö
.
Á°now
 =

224 
a
->
⁄e_m_Á°©èck
 *á->
gaö
.
Á°now
 +

225 
a
->
Á°©èck
 * 
	`max
 (
tmp
,á->
gaö
.
bŸtom
);

233 
	`CXBd©a
 (
a
->
buff
, 
i
) =

234 
	`Cs˛
 (
a
->
cúc
[a->
out_ödx
],

235 
	`mö
 (
a
->
gaö
.
Á°now
, (a->
¶›e
 *á->gaö.
now
)));

238 
a
->
¶owödx
 = (a->¶owödx +á->
mask
) &á->mask;

239 
a
->
out_ödx
 = (a->out_ödx +á->
mask
) &á->mask;

240 
a
->
Á°ödx
 = (a->Á°ödx +á->
mask
) &á->mask;

242 
	}
}

245 
	$dñDâSPAgc
 (
DTTSPAGC
 
a
)

247 
	`dñCXB
 (
a
->
buff
);

248 
	`dñvec_COMPLEX
 (
a
->
cúc
);

249 i‡(
a
)

250 
	`ß„‰ì
 ((*Ë
a
);

251 
	}
}

	@dttspagc.h

33 #i‚de‡
_dâ•agc_h


34 
	#_dâ•agc_h


	)

35 
	e_agcmode


36 { 
	magcOFF
, 
	magcLONG
, 
	magcSLOW
, 
	magcMED
, 
	magcFAST
 } 
	tAGCMODE
;

37 
	s_dâ•agc


39 
	mmode
;

40 
	s_gaö


42 
REAL
 
	mt›
, 
	mnow
, 
	mÁ°now
, 
	mbŸtom
, 
	mﬁd
, 
	mèrgë
, 
	møw
, 
	mfix
;

43 } 
	mgaö
, 
	mÁ°gaö
;

44 
REAL
 
	m©èck
;

45 
REAL
 
	m⁄e_m_©èck
;

46 
REAL
 
	mdeˇy
;

47 
REAL
 
	m⁄e_m_deˇy
;

48 
REAL
 
	m¶›e
;

49 
REAL
 
	mÁ°©èck
;

50 
REAL
 
	m⁄e_m_Á°©èck
;

51 
REAL
 
	mÁ°deˇy
;

52 
REAL
 
	m⁄e_m_Á°deˇy
;

53 
REAL
 
	mh™gtime
;

54 
REAL
 
	mh™gthªsh
;

55 
REAL
 
	mÁ°h™gtime
;

56 
COMPLEX
 *
	mcúc
;

57 
REAL
 *
	mmagvec
;

58 
CXB
 
	mbuff
;

59 
	mmask
;

60 
	m¶owödx
;

61 
	mout_ödx
;

62 
	mh™gödex
;

63 
	mÁ°ödx
;

64 
	mÁ°h™g
;

65 
	mèg
[4];

66 } 
	tdâ•agc
, *
	tDTTSPAGC
;

68 
DâSPAgc
 (
DTTSPAGC
 
a
, 
tick
);

69 
DTTSPAGC
 
√wDâSPAgc
 (
AGCMODE
 
mode
, 
COMPLEX
 * 
Vec
, 
BufSize
,

70 
REAL
 
Limô
, REAL 
©èck
, REAL 
deˇy
,

71 
REAL
 
¶›e
, REAL 
h™gtime
, REAL 
ßm¥©e
,

72 
REAL
 
MaxGaö
, REAL 
MöGaö
, REAL 
Curgaö
,

73 *
èg
);

74 
dñDâSPAgc
 (
DTTSPAGC
 
a
);

75 
DâSPAgc_Êushbuf
(
DTTSPAGC
 
a
);

76 
	#FASTLEAD
 200

	)

	@fastrig.c

35 
	~<Á°rig.h
>

37 
REAL


38 
	$pha£mod
 (
REAL
 
™gÀ
)

40 
™gÀ
 >
TWOPI
)

41 
™gÀ
 -(
REAL
Ë
TWOPI
;

42 
™gÀ
 < 0.0)

43 
™gÀ
 +(
REAL
Ë
TWOPI
;

44  
™gÀ
;

45 
	}
}

53 
REAL
 
	gTABLE_FACTOR
;

54 
REAL
 *
	gsöT
, *
	gcosT
;

59 
	#TAN_MAP_RES
 0.003921569

	)

60 
	#RAD_PER_DEG
 0.017453293

	)

61 
	#TAN_MAP_SIZE
 256

	)

64 
REAL
 
	gÁ°_©™_èbÀ
[257] = {

65 (
REAL
)0.000000e+00,(REAL) 3.921549e-03,(REAL) 7.842976e-03,(REAL) 1.176416e-02,

66 (
REAL
)1.568499e-02,(REAL) 1.960533e-02,(REAL) 2.352507e-02,(REAL) 2.744409e-02,

67 (
REAL
)3.136226e-02,(REAL) 3.527947e-02,(REAL) 3.919560e-02,(REAL) 4.311053e-02,

68 (
REAL
)4.702413e-02,(REAL) 5.093629e-02,(REAL) 5.484690e-02,(REAL) 5.875582e-02,

69 (
REAL
)6.266295e-02,(REAL) 6.656816e-02,(REAL) 7.047134e-02,(REAL) 7.437238e-02,

70 (
REAL
)7.827114e-02,(REAL) 8.216752e-02,(REAL) 8.606141e-02,(REAL) 8.995267e-02,

71 (
REAL
)9.384121e-02,(REAL) 9.772691e-02,(REAL) 1.016096e-01,(REAL) 1.054893e-01,

72 (
REAL
)1.093658e-01,(REAL) 1.132390e-01,(REAL) 1.171087e-01,(REAL) 1.209750e-01,

73 (
REAL
)1.248376e-01,(REAL) 1.286965e-01,(REAL) 1.325515e-01,(REAL) 1.364026e-01,

74 (
REAL
)1.402496e-01,(REAL) 1.440924e-01,(REAL) 1.479310e-01,(REAL) 1.517652e-01,

75 (
REAL
)1.555948e-01,(REAL) 1.594199e-01,(REAL) 1.632403e-01,(REAL) 1.670559e-01,

76 (
REAL
)1.708665e-01,(REAL) 1.746722e-01,(REAL) 1.784728e-01,(REAL) 1.822681e-01,

77 (
REAL
)1.860582e-01,(REAL) 1.898428e-01,(REAL) 1.936220e-01,(REAL) 1.973956e-01,

78 (
REAL
)2.011634e-01,(REAL) 2.049255e-01,(REAL) 2.086818e-01,(REAL) 2.124320e-01,

79 (
REAL
)2.161762e-01,(REAL) 2.199143e-01,(REAL) 2.236461e-01,(REAL) 2.273716e-01,

80 (
REAL
)2.310907e-01,(REAL) 2.348033e-01,(REAL) 2.385093e-01,(REAL) 2.422086e-01,

81 (
REAL
)2.459012e-01,(REAL) 2.495869e-01,(REAL) 2.532658e-01,(REAL) 2.569376e-01,

82 (
REAL
)2.606024e-01,(REAL) 2.642600e-01,(REAL) 2.679104e-01,(REAL) 2.715535e-01,

83 (
REAL
)2.751892e-01,(REAL) 2.788175e-01,(REAL) 2.824383e-01,(REAL) 2.860514e-01,

84 (
REAL
)2.896569e-01,(REAL) 2.932547e-01,(REAL) 2.968447e-01,(REAL) 3.004268e-01,

85 (
REAL
)3.040009e-01,(REAL) 3.075671e-01,(REAL) 3.111252e-01,(REAL) 3.146752e-01,

86 (
REAL
)3.182170e-01,(REAL) 3.217506e-01,(REAL) 3.252758e-01,(REAL) 3.287927e-01,

87 (
REAL
)3.323012e-01,(REAL) 3.358012e-01,(REAL) 3.392926e-01,(REAL) 3.427755e-01,

88 (
REAL
)3.462497e-01,(REAL) 3.497153e-01,(REAL) 3.531721e-01,(REAL) 3.566201e-01,

89 (
REAL
)3.600593e-01,(REAL) 3.634896e-01,(REAL) 3.669110e-01,(REAL) 3.703234e-01,

90 (
REAL
)3.737268e-01,(REAL) 3.771211e-01,(REAL) 3.805064e-01,(REAL) 3.838825e-01,

91 (
REAL
)3.872494e-01,(REAL) 3.906070e-01,(REAL) 3.939555e-01,(REAL) 3.972946e-01,

92 (
REAL
)4.006244e-01,(REAL) 4.039448e-01,(REAL) 4.072558e-01,(REAL) 4.105574e-01,

93 (
REAL
)4.138496e-01,(REAL) 4.171322e-01,(REAL) 4.204054e-01,(REAL) 4.236689e-01,

94 (
REAL
)4.269229e-01,(REAL) 4.301673e-01,(REAL) 4.334021e-01,(REAL) 4.366272e-01,

95 (
REAL
)4.398426e-01,(REAL) 4.430483e-01,(REAL) 4.462443e-01,(REAL) 4.494306e-01,

96 (
REAL
)4.526070e-01,(REAL) 4.557738e-01,(REAL) 4.589307e-01,(REAL) 4.620778e-01,

97 (
REAL
)4.652150e-01,(REAL) 4.683424e-01,(REAL) 4.714600e-01,(REAL) 4.745676e-01,

98 (
REAL
)4.776654e-01,(REAL) 4.807532e-01,(REAL) 4.838312e-01,(REAL) 4.868992e-01,

99 (
REAL
)4.899573e-01,(REAL) 4.930055e-01,(REAL) 4.960437e-01,(REAL) 4.990719e-01,

100 (
REAL
)5.020902e-01,(REAL) 5.050985e-01,(REAL) 5.080968e-01,(REAL) 5.110852e-01,

101 (
REAL
)5.140636e-01,(REAL) 5.170320e-01,(REAL) 5.199904e-01,(REAL) 5.229388e-01,

102 (
REAL
)5.258772e-01,(REAL) 5.288056e-01,(REAL) 5.317241e-01,(REAL) 5.346325e-01,

103 (
REAL
)5.375310e-01,(REAL) 5.404195e-01,(REAL) 5.432980e-01,(REAL) 5.461666e-01,

104 (
REAL
)5.490251e-01,(REAL) 5.518738e-01,(REAL) 5.547124e-01,(REAL) 5.575411e-01,

105 (
REAL
)5.603599e-01,(REAL) 5.631687e-01,(REAL) 5.659676e-01,(REAL) 5.687566e-01,

106 (
REAL
)5.715357e-01,(REAL) 5.743048e-01,(REAL) 5.770641e-01,(REAL) 5.798135e-01,

107 (
REAL
)5.825531e-01,(REAL) 5.852828e-01,(REAL) 5.880026e-01,(REAL) 5.907126e-01,

108 (
REAL
)5.934128e-01,(REAL) 5.961032e-01,(REAL) 5.987839e-01,(REAL) 6.014547e-01,

109 (
REAL
)6.041158e-01,(REAL) 6.067672e-01,(REAL) 6.094088e-01,(REAL) 6.120407e-01,

110 (
REAL
)6.146630e-01,(REAL) 6.172755e-01,(REAL) 6.198784e-01,(REAL) 6.224717e-01,

111 (
REAL
)6.250554e-01,(REAL) 6.276294e-01,(REAL) 6.301939e-01,(REAL) 6.327488e-01,

112 (
REAL
)6.352942e-01,(REAL) 6.378301e-01,(REAL) 6.403565e-01,(REAL) 6.428734e-01,

113 (
REAL
)6.453808e-01,(REAL) 6.478788e-01,(REAL) 6.503674e-01,(REAL) 6.528466e-01,

114 (
REAL
)6.553165e-01,(REAL) 6.577770e-01,(REAL) 6.602282e-01,(REAL) 6.626701e-01,

115 (
REAL
)6.651027e-01,(REAL) 6.675261e-01,(REAL) 6.699402e-01,(REAL) 6.723452e-01,

116 (
REAL
)6.747409e-01,(REAL) 6.771276e-01,(REAL) 6.795051e-01,(REAL) 6.818735e-01,

117 (
REAL
)6.842328e-01,(REAL) 6.865831e-01,(REAL) 6.889244e-01,(REAL) 6.912567e-01,

118 (
REAL
)6.935800e-01,(REAL) 6.958943e-01,(REAL) 6.981998e-01,(REAL) 7.004964e-01,

119 (
REAL
)7.027841e-01,(REAL) 7.050630e-01,(REAL) 7.073330e-01,(REAL) 7.095943e-01,

120 (
REAL
)7.118469e-01,(REAL) 7.140907e-01,(REAL) 7.163258e-01,(REAL) 7.185523e-01,

121 (
REAL
)7.207701e-01,(REAL) 7.229794e-01,(REAL) 7.251800e-01,(REAL) 7.273721e-01,

122 (
REAL
)7.295557e-01,(REAL) 7.317307e-01,(REAL) 7.338974e-01,(REAL) 7.360555e-01,

123 (
REAL
)7.382053e-01,(REAL) 7.403467e-01,(REAL) 7.424797e-01,(REAL) 7.446045e-01,

124 (
REAL
)7.467209e-01,(REAL) 7.488291e-01,(REAL) 7.509291e-01,(REAL) 7.530208e-01,

125 (
REAL
)7.551044e-01,(REAL) 7.571798e-01,(REAL) 7.592472e-01,(REAL) 7.613064e-01,

126 (
REAL
)7.633576e-01,(REAL) 7.654008e-01,(REAL) 7.674360e-01,(REAL) 7.694633e-01,

127 (
REAL
)7.714826e-01,(REAL) 7.734940e-01,(REAL) 7.754975e-01,(REAL) 7.774932e-01,

128 (
REAL
)7.794811e-01,(REAL) 7.814612e-01,(REAL) 7.834335e-01,(REAL) 7.853983e-01,

129 (
REAL
) 7.853983e-01

133 
	$InôSPEEDTRIG
 ()

135 
i
, 
SIZE
;

136 
TABLE_FACTOR
 = (
REAL
)(
ONE_OVER_TWOPI
 * 
SIN_TABLE_SIZE
);

137 
SIZE
 =  (
REAL
Ë* (
SIN_TABLE_SIZE
 + 1);

138 
söT
 = (
REAL
 *Ë
	`ß„Æloc
 (
SIZE
 + (SIZE >> 2) + 1,1,"InitSpeedTrig");

140 
i
 = 0; i < 
SIN_TABLE_SIZE
 + (SIN_TABLE_SIZE >> 2) + 1; i++)

142 
söT
[
i
] = (
REAL
Ë
	`sö
 ((REALËò* 
TWOPI
 / (REALË
SIN_TABLE_SIZE
);

145 
cosT
 = 
söT
 + (
SIN_TABLE_SIZE
 >> 2);

146 
	}
}

148 
REAL


149 
	$Á°_sö
 (
REAL
 
x
)

151 #i‡(
TRIG_SPEED
==2)

152 
x
 = (x * 
TABLE_FACTOR
) + 0.5;

153  
söT
[((Ë
x
Ë& (
SIN_TABLE_SIZE_M1
)];

155 
i
, 
ù1
;

156 
REAL
 
‰ac
;

157 
x
 = (x * 
TABLE_FACTOR
);

158 
i
 = (Ë(
‰ac
 = (
REAL
)
	`Êo‹
 (
x
));

159 
ù1
 = 
i
 + 1;

160 
‰ac
 = 
x
 - frac;

161  (
REAL
)((1.0 - 
‰ac
Ë* 
söT
[
i
] + fø¯* söT[
ù1
]);

163 
	}
}

165 
REAL


166 
	$Á°_cos
 (
REAL
 
x
)

168 #i‡(
TRIG_SPEED
==2)

169 
x
 = (x * 
TABLE_FACTOR
) + 0.5;

170  
cosT
[((Ë
x
Ë& (
SIN_TABLE_SIZE
 - 1)];

172 
i
, 
ù1
;

173 
REAL
 
‰ac
;

174 
x
 = (x * 
TABLE_FACTOR
);

175 
i
 = (Ë(
‰ac
 = (
REAL
)
	`Êo‹
 (
x
));

176 
ù1
 = 
i
 + 1;

177 
‰ac
 = 
x
 - frac;

178  (
REAL
)((1.0 - 
‰ac
Ë* 
cosT
[
i
] + fø¯* cosT[
ù1
]);

180 
	}
}

200 
REAL


201 
	$Á°_©™2
 (
REAL
 
y
, REAL 
x
)

203 
REAL
 
x_abs
, 
y_abs
, 
z
;

204 
REAL
 
Æpha
, 
™gÀ
, 
ba£_™gÀ
;

205 
ödex
;

208 i‡((
y
 =0.0Ë&& (
x
 == 0.0))

209 
™gÀ
 = 0.0;

213 
y_abs
 = (
REAL
)
	`Ábs
 (
y
);

214 
x_abs
 = (
REAL
)
	`Ábs
 (
x
);

216 i‡(
y_abs
 < 
x_abs
)

217 
z
 = 
y_abs
 / 
x_abs
;

219 
z
 = 
x_abs
 / 
y_abs
;

222 i‡(
z
 < 
TAN_MAP_RES
)

223 
ba£_™gÀ
 = 
z
;

227 
Æpha
 = 
z
 * (
REAL
Ë(
TAN_MAP_SIZE
 - .5);

228 
ödex
 = (Ë
Æpha
;

229 
Æpha
 -(
REAL
Ë
ödex
;

232 
ba£_™gÀ
 = 
Á°_©™_èbÀ
[
ödex
];

233 
ba£_™gÀ
 +=

234 (
Á°_©™_èbÀ
[
ödex
 + 1] - fa°_©™_èbÀ[ödex]Ë* 
Æpha
;

237 i‡(
x_abs
 > 
y_abs
)

239 i‡(
x
 >= 0.0)

241 i‡(
y
 >= 0.0)

242 
™gÀ
 = 
ba£_™gÀ
;

244 
™gÀ
 = -
ba£_™gÀ
;

248 
™gÀ
 = (
REAL
)3.14159265358979323846;

249 i‡(
y
 >= 0.0)

250 
™gÀ
 -
ba£_™gÀ
;

252 
™gÀ
 = 
ba£_™gÀ
 -ángle;

257 i‡(
y
 >= 0.0)

259 
™gÀ
 = (
REAL
)1.57079632679489661923;

260 i‡(
x
 >= 0.0)

261 
™gÀ
 -
ba£_™gÀ
;

263 
™gÀ
 +
ba£_™gÀ
;

267 
™gÀ
 = (
REAL
)-1.57079632679489661923;

268 i‡(
x
 >= 0.0)

269 
™gÀ
 +
ba£_™gÀ
;

271 
™gÀ
 -
ba£_™gÀ
;

275 #ifde‡
ZERO_TO_TWOPI


276 i‡(
™gÀ
 < 0)

277  (
™gÀ
 + 
TWOPI
);

279  (
™gÀ
);

281  (
™gÀ
);

283 
	}
}

	@fastrig.h

33 #i‚de‡
_Á°rig_h


34 
	#_Á°rig_h


	)

36 
	~<‰omsys.h
>

37 
	~<b™Æ.h
>

38 
	~<•lôfõlds.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<m©h.h
>

43 #ifde‡
nŸdef


44 
	~<cx›s.h
>

47 
	#SIN_TABLE_SIZE
 4096

	)

48 
	#SIN_TABLE_SIZE_M1
 4095

	)

60 #i‚de‡
TRIG_SPEED


61 
	#TRIG_SPEED
 0

	)

64 #i‡(
TRIG_SPEED
 == 2)

65 
	#SIN
(
x
Ë
	`Á°_sö
(x)

	)

66 
	#COS
(
x
Ë
	`Á°_cos
(x)

	)

67 
	#ATAN2
(
x
,
y
Ë
	`Á°_©™2
((x),(y))

	)

69 #ñi‡(
TRIG_SPEED
 == 1)

71 
	#SIN
(
x
Ë
	`Á°_sö
(x)

	)

72 
	#COS
(
x
Ë
	`Á°_cos
(x)

	)

73 
	#ATAN2
(
x
,
y
Ë
	`Á°_©™2
((x),(y))

	)

75 #ñi‡(
TRIG_SPEED
 == 0)

77 
	#SIN
(
x
Ë(
REAL
)
	`sö
((REAL)x)

	)

78 
	#COS
(
x
Ë(
REAL
)
	`cos
((REAL)x)

	)

79 
	#ATAN2
(
x
,
y
Ë(
REAL
)
	`©™2
((REAL)(x),(REAL)(y))

	)

83 #i‚de‡
PI


84 
	#PI
 
M_PI


	)

87 #i‚de‡
TWOPI


88 
	#TWOPI
 (2.0 * 
PI
)

	)

91 #i‚de‡
ONE_OVER_TWOPI


92 
	#ONE_OVER_TWOPI
 (0.159154943091895)

	)

96 
InôSPEEDTRIG
 ();

97 
REAL
 
Á°_sö
 (REAL);

98 
REAL
 
Á°_cos
 (REAL);

99 
REAL
 
Á°_©™2
 (REAL, REAL);

	@fftw.h

24 #i‚de‡
FFTW_H


25 
	#FFTW_H


	)

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

30 #ifde‡
__˝lu•lus


43 #ifde‡
FFTW_ENABLE_FLOAT


44 
	tf·w_ªÆ
;

46 
	tf·w_ªÆ
;

54 
f·w_ªÆ
 
	gª
, 
	gim
;

55 } 
	tf·w_com∂ex
;

57 #i‚de‡
c_ª


58 
	#c_ª
(
c
Ë((c).
ª
)

	)

60 #i‚de‡
c_im


61 
	#c_im
(
c
Ë((c).
im
)

	)

66 
	gFFTW_FORWARD
 = -1, 
	gFFTW_BACKWARD
 = 1

67 } 
	tf·w_dúe˘i⁄
;

70 
f·w_com∂ex
 
	tFFTW_COMPLEX
;

71 
f·w_ªÆ
 
	tFFTW_REAL
;

73 #i‚de‡
FFTW_1_0_COMPATIBILITY


74 
	#FFTW_1_0_COMPATIBILITY
 0

	)

77 #i‡
FFTW_1_0_COMPATIBILITY


79 
	#REAL
 
f·w_ªÆ


	)

80 
	#COMPLEX
 
f·w_com∂ex


	)

89 
	gFFTW_SUCCESS
 = 0, 
	gFFTW_FAILURE
 = -1

90 } 
	tf·w_°©us
;

95 (
	gf·w_nŸw_codñë
)

96 (c⁄° 
	tf·w_com∂ex
 *, fftw_complex *, , );

97 (
	gf·w_twiddÀ_codñë
)

98 (
	tf·w_com∂ex
 *, const fftw_complex *, , , );

99 (
	gf·w_gíîic_codñë
)

100 (
	tf·w_com∂ex
 *, const fftw_complex *, , , , );

101 (
	gf·w_ªÆ2hc_codñë
)

102 (c⁄° 
	tf·w_ªÆ
 *, fftw_real *, fftw_real *, , , );

103 (
	gf·w_hc2ªÆ_codñë
)

104 (c⁄° 
	tf·w_ªÆ
 *, const fftw_real *, fftw_real *, , , );

105 (
	gf·w_hc2hc_codñë
)

106 (
	tf·w_ªÆ
 *, c⁄° 
	tf·w_com∂ex
 *, , , );

107 (
	gf·w_rgíîic_codñë
)

108 (
	tf·w_ªÆ
 *, c⁄° 
	tf·w_com∂ex
 *, , , , );

117 
	ef·w_node_ty≥


119 
	gFFTW_NOTW
, 
	gFFTW_TWIDDLE
, 
	gFFTW_GENERIC
, 
	gFFTW_RADER
,

120 
	gFFTW_REAL2HC
, 
	gFFTW_HC2REAL
, 
	gFFTW_HC2HC
, 
	gFFTW_RGENERIC


126 c⁄° *
	g«me
;

127 (*
	gcodñë
) ();

128 
	gsize
;

129 
f·w_dúe˘i⁄
 
	gdú
;

130 
f·w_node_ty≥
 
	gty≥
;

131 
	gsig«tuª
;

132 
	g¡widdÀ
;

133 c⁄° *
	gtwiddÀ_‹dî
;

138 } 
	tf·w_codñë_desc
;

142 #ifde‡
HAVE_WIN32


143 #i‡
deföed
(
BUILD_FFTW_DLL
)

144 
	#DL_IMPORT
(
ty≥
Ë
	`__de˛•ec
(
dŒexp‹t
Ë
	)
type

145 #ñi‡
deföed
(
USE_FFTW_DLL
)

146 
	#DL_IMPORT
(
ty≥
Ë
	`__de˛•ec
(
dŒimp‹t
Ë
	)
type

148 
	#DL_IMPORT
(
ty≥
Ë
	)
type

151 
	#DL_IMPORT
(
ty≥
Ë
	)
type

154 
DL_IMPORT
 (c⁄° *Ë
f·w_vîsi⁄
;

169 
	sf·w_twiddÀ_°ru˘


171 
	gn
;

172 c⁄° 
f·w_codñë_desc
 *
	gcdesc
;

173 
f·w_com∂ex
 *
	gtw¨øy
;

174 
f·w_twiddÀ_°ru˘
 *
	g√xt
;

175 
	gªf˙t
;

176 } 
	tf·w_twiddÀ
;

178 
	sf·w_ødî_d©a_°ru˘


180 
f·w_∂™_°ru˘
 *
	g∂™
;

181 
f·w_com∂ex
 *
	gomega
;

182 
	gg
, 
	ggöv
;

183 
	gp
, 
	gÊags
, 
	gªfcou¡
;

184 
f·w_ødî_d©a_°ru˘
 *
	g√xt
;

185 
f·w_codñë_desc
 *
	gcdesc
;

186 } 
	tf·w_ødî_d©a
;

188 (
	gf·w_ødî_codñë
)

189 (
	tf·w_com∂ex
 *, c⁄° f·w_com∂ex *, , , , 
	tf·w_ødî_d©a
 *);

192 
	sf·w_∂™_node_°ru˘


194 
f·w_node_ty≥
 
	gty≥
;

201 
	gsize
;

202 
f·w_nŸw_codñë
 *
	gcodñë
;

203 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

204 } 
	gnŸw
;

209 
	gsize
;

210 
f·w_twiddÀ_codñë
 *
	gcodñë
;

211 
f·w_twiddÀ
 *
	gtw
;

212 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

213 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

214 } 
	gtwiddÀ
;

219 
	gsize
;

220 
f·w_gíîic_codñë
 *
	gcodñë
;

221 
f·w_twiddÀ
 *
	gtw
;

222 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

223 } 
	ggíîic
;

228 
	gsize
;

229 
f·w_ødî_codñë
 *
	gcodñë
;

230 
f·w_ødî_d©a
 *
	gødî_d©a
;

231 
f·w_twiddÀ
 *
	gtw
;

232 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

233 } 
	gødî
;

238 
	gsize
;

239 
f·w_ªÆ2hc_codñë
 *
	gcodñë
;

240 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

241 } 
	gªÆ2hc
;

246 
	gsize
;

247 
f·w_hc2ªÆ_codñë
 *
	gcodñë
;

248 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

249 } 
	ghc2ªÆ
;

254 
	gsize
;

255 
f·w_dúe˘i⁄
 
	gdú
;

256 
f·w_hc2hc_codñë
 *
	gcodñë
;

257 
f·w_twiddÀ
 *
	gtw
;

258 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

259 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

260 } 
	ghc2hc
;

265 
	gsize
;

266 
f·w_dúe˘i⁄
 
	gdú
;

267 
f·w_rgíîic_codñë
 *
	gcodñë
;

268 
f·w_twiddÀ
 *
	gtw
;

269 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

270 } 
	grgíîic
;

271 } 
	gnodeu
;

273 
	gªf˙t
;

274 } 
	tf·w_∂™_node
;

278 
	gFFTW_NORMAL_RECURSE
 = 0,

279 
	gFFTW_VECTOR_RECURSE
 = 1

280 } 
	tf·w_ªcur£_köd
;

282 
	sf·w_∂™_°ru˘


284 
	gn
;

285 
	gªf˙t
;

286 
f·w_dúe˘i⁄
 
	gdú
;

287 
	gÊags
;

288 
	gwisdom_sig«tuª
;

289 
f·w_node_ty≥
 
	gwisdom_ty≥
;

290 
f·w_∂™_°ru˘
 *
	g√xt
;

291 
f·w_∂™_node
 *
	groŸ
;

292 
	gco°
;

293 
f·w_ªcur£_köd
 
	gªcur£_köd
;

294 
	gve˘‹_size
;

297 
f·w_∂™_°ru˘
 *
	tf·w_∂™
;

300 
	#FFTW_ESTIMATE
 (0)

	)

301 
	#FFTW_MEASURE
 (1)

	)

303 
	#FFTW_OUT_OF_PLACE
 (0)

	)

304 
	#FFTW_IN_PLACE
 (8)

	)

305 
	#FFTW_USE_WISDOM
 (16)

	)

307 
	#FFTW_THREADSAFE
 (128Ë

	)

311 
	#FFTWND_FORCE_BUFFERED
 (256Ë

	)

314 
	#FFTW_NO_VECTOR_RECURSE
 (512Ë

	)

317 
f·w_∂™
 
f·w_¸óã_∂™_•ecific
 (
n
, 
f·w_dúe˘i⁄
 
dú
,

318 
Êags
,

319 
f·w_com∂ex
 * 
ö
,

320 
i°ride
,

321 
f·w_com∂ex
 * 
out
,

322 
o°ride
);

323 
	#FFTW_HAS_PLAN_SPECIFIC


	)

324 
f·w_∂™
 
f·w_¸óã_∂™
 (
n
, 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

325 
f·w_¥öt_∂™
 (
f·w_∂™
 
∂™
);

326 
f·w_de°roy_∂™
 (
f·w_∂™
 
∂™
);

327 
f·w
 (
f·w_∂™
 
∂™
, 
howm™y
, 
f·w_com∂ex
 * 
ö
,

328 
i°ride
, 
idi°
, 
f·w_com∂ex
 * 
out
,

329 
o°ride
, 
odi°
);

330 
f·w_⁄e
 (
f·w_∂™
 
∂™
, 
f·w_com∂ex
 * 
ö
,

331 
f·w_com∂ex
 * 
out
);

332 
f·w_dõ
 (c⁄° *
s
);

333 *
f·w_mÆloc
 (
size_t
 
n
);

334 
f·w_‰ì
 (*
p
);

335 
f·w_check_mem‹y_Àaks
 ();

336 
f·w_¥öt_max_mem‹y_ußge
 ();

338 *(*
	tf·w_mÆloc_ty≥_fun˘i⁄
Ë(
	tsize_t
 
	tn
);

339 (*
	gf·w_‰ì_ty≥_fun˘i⁄
Ë(*
	tp
);

340 (*
	gf·w_dõ_ty≥_fun˘i⁄
Ë(c⁄° *
	tîrSåög
);

341 
DL_IMPORT
 (
f·w_mÆloc_ty≥_fun˘i⁄
Ë
f·w_mÆloc_hook
;

342 
DL_IMPORT
 (
f·w_‰ì_ty≥_fun˘i⁄
Ë
f·w_‰ì_hook
;

343 
DL_IMPORT
 (
f·w_dõ_ty≥_fun˘i⁄
Ë
f·w_dõ_hook
;

345 
size_t
 
f·w_sizeof_f·w_ªÆ
 ();

352 
	#FFTW_HAS_WISDOM


	)

353 
f·w_f‹gë_wisdom
 ();

354 
f·w_exp‹t_wisdom
 ((*
emôãr
Ë(
c
, *),

355 *
d©a
);

356 
f·w_°©us
 
f·w_imp‹t_wisdom
 ((*
g
Ë(*), *
d©a
);

357 
f·w_exp‹t_wisdom_to_fûe
 (
FILE
 * 
ouçut_fûe
);

358 
f·w_°©us
 
f·w_imp‹t_wisdom_‰om_fûe
 (
FILE
 * 
öput_fûe
);

359 *
f·w_exp‹t_wisdom_to_°rög
 ();

360 
f·w_°©us
 
f·w_imp‹t_wisdom_‰om_°rög
 (const 

361 *
öput_°rög
);

367 
	#FFTW_HAS_FPRINT_PLAN


	)

368 
f·w_Âröt_∂™
 (
FILE
 * 
f
, 
f·w_∂™
 
∂™
);

375 
	gis_ö_∂a˚
;

377 
	gønk
;

381 *
	gn
;

385 
f·w_dúe˘i⁄
 
	gdú
;

387 *
	gn_bef‹e
;

390 *
	gn_a·î
;

392 
f·w_∂™
 *
	g∂™s
;

394 
	gnbuf„rs
, 
	gnw‹k
;

395 
f·w_com∂ex
 *
	gw‹k
;

400 } 
	tf·wnd_d©a
;

402 
f·wnd_d©a
 *
	tf·wnd_∂™
;

405 
f·wnd_∂™
 
f·w2d_¸óã_∂™
 (
nx
, 
ny
,

406 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

407 
f·wnd_∂™
 
f·w3d_¸óã_∂™
 (
nx
, 
ny
, 
nz
,

408 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

409 
f·wnd_∂™
 
f·wnd_¸óã_∂™
 (
ønk
, c⁄° *
n
,

410 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

412 
f·wnd_∂™
 
f·w2d_¸óã_∂™_•ecific
 (
nx
, 
ny
,

413 
f·w_dúe˘i⁄
 
dú
,

414 
Êags
,

415 
f·w_com∂ex
 * 
ö
,

416 
i°ride
,

417 
f·w_com∂ex
 * 
out
,

418 
o°ride
);

419 
f·wnd_∂™
 
f·w3d_¸óã_∂™_•ecific
 (
nx
, 
ny
, 
nz
,

420 
f·w_dúe˘i⁄
 
dú
,

421 
Êags
,

422 
f·w_com∂ex
 * 
ö
,

423 
i°ride
,

424 
f·w_com∂ex
 * 
out
,

425 
o°ride
);

426 
f·wnd_∂™
 
f·wnd_¸óã_∂™_•ecific
 (
ønk
, c⁄° *
n
,

427 
f·w_dúe˘i⁄
 
dú
,

428 
Êags
,

429 
f·w_com∂ex
 * 
ö
,

430 
i°ride
,

431 
f·w_com∂ex
 * 
out
,

432 
o°ride
);

435 
f·wnd_de°roy_∂™
 (
f·wnd_∂™
 
∂™
);

438 
f·wnd_Âröt_∂™
 (
FILE
 * 
f
, 
f·wnd_∂™
 
p
);

439 
f·wnd_¥öt_∂™
 (
f·wnd_∂™
 
p
);

440 
	#FFTWND_HAS_PRINT_PLAN


	)

443 
f·wnd
 (
f·wnd_∂™
 
∂™
, 
howm™y
,

444 
f·w_com∂ex
 * 
ö
, 
i°ride
, 
idi°
,

445 
f·w_com∂ex
 * 
out
, 
o°ride
, 
odi°
);

446 
f·wnd_⁄e
 (
f·wnd_∂™
 
p
, 
f·w_com∂ex
 * 
ö
,

447 
f·w_com∂ex
 * 
out
);

449 #ifde‡
__˝lu•lus


	@fftw3.h

47 #i‚de‡
FFTW3_H


48 
	#FFTW3_H


	)

50 
	~<°dio.h
>

52 #ifde‡
__˝lu•lus


59 #i‡!
deföed
(
FFTW_NO_Com∂ex
Ë&& deföed(
_Com∂ex_I
Ë&& deföed(
com∂ex
Ë&& deföed(
I
)

60 
	#FFTW_DEFINE_COMPLEX
(
R
, 
C
ËR 
	t_Com∂ex
 
	tC


	)

62 
	tFFTW_DEFINE_COMPLEX
(
	tR
, 
	tC
Ë
R
 C[2]

	)

65 
	#FFTW_CONCAT
(
¥efix
, 
«me
Ë¥efix ## 
	)
name

66 
	#FFTW_MANGLE_DOUBLE
(
«me
Ë
	`FFTW_CONCAT
(
f·w_
,Çame)

	)

67 
	#FFTW_MANGLE_FLOAT
(
«me
Ë
	`FFTW_CONCAT
(
f·wf_
,Çame)

	)

68 
	#FFTW_MANGLE_LONG_DOUBLE
(
«me
Ë
	`FFTW_CONCAT
(
f·wl_
,Çame)

	)

69 
	#FFTW_DLL


	)

77 #i‡
deföed
(
FFTW_DLL
Ë&& (deföed(
_WIN32
Ë|| deföed(
__WIN32__
))

79 #i‡
deföed
(
COMPILING_FFTW
)

80 
	#FFTW_EXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

82 
	#FFTW_EXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

85 
	#FFTW_EXTERN
 

	)

88 
	ef·w_r2r_köd_do_nŸ_u£_me
 {

89 
FFTW_R2HC
=0, 
FFTW_HC2R
=1, 
FFTW_DHT
=2,

90 
FFTW_REDFT00
=3, 
FFTW_REDFT01
=4, 
FFTW_REDFT10
=5, 
FFTW_REDFT11
=6,

91 
FFTW_RODFT00
=7, 
FFTW_RODFT01
=8, 
FFTW_RODFT10
=9, 
FFTW_RODFT11
=10

94 
	sf·w_iodim_do_nŸ_u£_me
 {

95 
	gn
;

96 
	gis
;

97 
	gos
;

100 
	~<°ddef.h
>

101 
	sf·w_iodim64_do_nŸ_u£_me
 {

102 
±rdiff_t
 
	gn
;

103 
±rdiff_t
 
	gis
;

104 
±rdiff_t
 
	gos
;

116 
	#FFTW_DEFINE_API
(
X
, 
R
, 
C
) \

118 
	`FFTW_DEFINE_COMPLEX
(
R
, 
C
); \

120 
	`X
(
	t∂™_s
Ë*
	tX
(
	t∂™
); \

122 
f·w_iodim_do_nŸ_u£_me
 
	tX
(
	tiodim
); \

123 
f·w_iodim64_do_nŸ_u£_me
 
	tX
(
	tiodim64
); \

125 
f·w_r2r_köd_do_nŸ_u£_me
 
	tX
(
	tr2r_köd
); \

127 
FFTW_EXTERN
 
	`X
(
execuã
)(c⁄° X(
∂™
Ë
p
); \

129 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·
)(
ønk
, c⁄° *
n
, \

130 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

132 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_1d
)(
n
, 
C
 *
ö
, C *
out
, 
sign
, \

133 
Êags
); \

134 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_2d
)(
n0
, 
n1
, \

135 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

136 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_3d
)(
n0
, 
n1
, 
n2
, \

137 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

139 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·
)(
ønk
, c⁄° *
n
, \

140 
howm™y
, \

141 
C
 *
ö
, c⁄° *
öembed
, \

142 
i°ride
, 
idi°
, \

143 
C
 *
out
, c⁄° *
⁄embed
, \

144 
o°ride
, 
odi°
, \

145 
sign
, 
Êags
); \

147 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

148 
howm™y_ønk
, \

149 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

150 
C
 *
ö
, C *
out
, \

151 
sign
, 
Êags
); \

152 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

153 
howm™y_ønk
, \

154 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

155 
R
 *
ri
, R *
ii
, R *
ro
, R *
io
, \

156 
Êags
); \

158 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·
)(
ønk
, \

159 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

160 
howm™y_ønk
, \

161 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

162 
C
 *
ö
, C *
out
, \

163 
sign
, 
Êags
); \

164 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·
)(
ønk
, \

165 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

166 
howm™y_ønk
, \

167 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

168 
R
 *
ri
, R *
ii
, R *
ro
, R *
io
, \

169 
Êags
); \

171 
FFTW_EXTERN
 
	`X
(
execuã_d·
)(c⁄° X(
∂™
Ë
p
, 
C
 *
ö
, C *
out
); \

172 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ri
, R *
ii
, \

173 
R
 *
ro
, R *
io
); \

175 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·_r2c
)(
ønk
, c⁄° *
n
, \

176 
howm™y
, \

177 
R
 *
ö
, c⁄° *
öembed
, \

178 
i°ride
, 
idi°
, \

179 
C
 *
out
, c⁄° *
⁄embed
, \

180 
o°ride
, 
odi°
, \

181 
Êags
); \

183 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c
)(
ønk
, c⁄° *
n
, \

184 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

186 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_1d
)(
n
,
R
 *
ö
,
C
 *
out
,
Êags
); \

187 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_2d
)(
n0
, 
n1
, \

188 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

189 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_3d
)(
n0
, 
n1
, \

190 
n2
, \

191 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

194 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·_c2r
)(
ønk
, c⁄° *
n
, \

195 
howm™y
, \

196 
C
 *
ö
, c⁄° *
öembed
, \

197 
i°ride
, 
idi°
, \

198 
R
 *
out
, c⁄° *
⁄embed
, \

199 
o°ride
, 
odi°
, \

200 
Êags
); \

202 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r
)(
ønk
, c⁄° *
n
, \

203 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

205 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_1d
)(
n
,
C
 *
ö
,
R
 *
out
,
Êags
); \

206 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_2d
)(
n0
, 
n1
, \

207 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

208 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_3d
)(
n0
, 
n1
, \

209 
n2
, \

210 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

212 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·_r2c
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

213 
howm™y_ønk
, \

214 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

215 
R
 *
ö
, 
C
 *
out
, \

216 
Êags
); \

217 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·_c2r
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

218 
howm™y_ønk
, \

219 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

220 
C
 *
ö
, 
R
 *
out
, \

221 
Êags
); \

223 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·_r2c
)( \

224 
ønk
, c⁄° 
	`X
(
iodim
Ë*
dims
, \

225 
howm™y_ønk
, \

226 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

227 
R
 *
ö
, R *
ro
, R *
io
, \

228 
Êags
); \

229 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·_c2r
)( \

230 
ønk
, c⁄° 
	`X
(
iodim
Ë*
dims
, \

231 
howm™y_ønk
, \

232 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

233 
R
 *
ri
, R *
ii
, R *
out
, \

234 
Êags
); \

236 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·_r2c
)(
ønk
, \

237 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

238 
howm™y_ønk
, \

239 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

240 
R
 *
ö
, 
C
 *
out
, \

241 
Êags
); \

242 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·_c2r
)(
ønk
, \

243 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

244 
howm™y_ønk
, \

245 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

246 
C
 *
ö
, 
R
 *
out
, \

247 
Êags
); \

249 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·_r2c
)( \

250 
ønk
, c⁄° 
	`X
(
iodim64
Ë*
dims
, \

251 
howm™y_ønk
, \

252 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

253 
R
 *
ö
, R *
ro
, R *
io
, \

254 
Êags
); \

255 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·_c2r
)( \

256 
ønk
, c⁄° 
	`X
(
iodim64
Ë*
dims
, \

257 
howm™y_ønk
, \

258 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

259 
R
 *
ri
, R *
ii
, R *
out
, \

260 
Êags
); \

262 
FFTW_EXTERN
 
	`X
(
execuã_d·_r2c
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ö
, 
C
 *
out
); \

263 
FFTW_EXTERN
 
	`X
(
execuã_d·_c2r
)(c⁄° X(
∂™
Ë
p
, 
C
 *
ö
, 
R
 *
out
); \

265 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·_r2c
)(c⁄° X(
∂™
Ë
p
, \

266 
R
 *
ö
, R *
ro
, R *
io
); \

267 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·_c2r
)(c⁄° X(
∂™
Ë
p
, \

268 
R
 *
ri
, R *
ii
, R *
out
); \

270 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_r2r
)(
ønk
, c⁄° *
n
, \

271 
howm™y
, \

272 
R
 *
ö
, c⁄° *
öembed
, \

273 
i°ride
, 
idi°
, \

274 
R
 *
out
, c⁄° *
⁄embed
, \

275 
o°ride
, 
odi°
, \

276 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

278 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r
)(
ønk
, c⁄° *
n
, 
R
 *
ö
, R *
out
, \

279 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

281 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_1d
)(
n
, 
R
 *
ö
, R *
out
, \

282 
	`X
(
r2r_köd
Ë
köd
, 
Êags
); \

283 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_2d
)(
n0
, 
n1
, 
R
 *
ö
, R *
out
, \

284 
	`X
(
r2r_köd
Ë
köd0
, X‘2r_ködË
köd1
, \

285 
Êags
); \

286 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_3d
)(
n0
, 
n1
, 
n2
, \

287 
R
 *
ö
, R *
out
, 
	`X
(
r2r_köd
Ë
köd0
, \

288 
	`X
(
r2r_köd
Ë
köd1
, X‘2r_ködË
köd2
, \

289 
Êags
); \

291 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_r2r
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

292 
howm™y_ønk
, \

293 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

294 
R
 *
ö
, R *
out
, \

295 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

297 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_r2r
)(
ønk
, c⁄° X(
iodim64
Ë*
dims
, \

298 
howm™y_ønk
, \

299 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

300 
R
 *
ö
, R *
out
, \

301 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

303 
FFTW_EXTERN
 
	`X
(
execuã_r2r
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ö
, R *
out
); \

305 
FFTW_EXTERN
 
	`X
(
de°roy_∂™
)(X(
∂™
Ë
p
); \

306 
FFTW_EXTERN
 
	`X
(
f‹gë_wisdom
)(); \

307 
FFTW_EXTERN
 
	`X
(
˛ónup
)(); \

309 
FFTW_EXTERN
 
	`X
(
£t_timñimô
)(); \

311 
FFTW_EXTERN
 
	`X
(
∂™_wôh_¡hªads
)(
¡hªads
); \

312 
FFTW_EXTERN
 
	`X
(
öô_thªads
)(); \

313 
FFTW_EXTERN
 
	`X
(
˛ónup_thªads
)(); \

315 
FFTW_EXTERN
 
	`X
(
exp‹t_wisdom_to_fûe
)(
FILE
 *
ouçut_fûe
); \

316 
FFTW_EXTERN
 *
	`X
(
exp‹t_wisdom_to_°rög
)(); \

317 
FFTW_EXTERN
 
	`X
(
exp‹t_wisdom
)((*
wrôe_ch¨
)(
c
, *), \

318 *
d©a
); \

319 
FFTW_EXTERN
 
	`X
(
imp‹t_sy°em_wisdom
)(); \

320 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom_‰om_fûe
)(
FILE
 *
öput_fûe
); \

321 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom_‰om_°rög
)(c⁄° *
öput_°rög
); \

322 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom
)((*
ªad_ch¨
)(*), *
d©a
); \

324 
FFTW_EXTERN
 
	`X
(
Âröt_∂™
)(c⁄° X(
∂™
Ë
p
, 
FILE
 *
ouçut_fûe
); \

325 
FFTW_EXTERN
 
	`X
(
¥öt_∂™
)(c⁄° X(
∂™
Ë
p
); \

327 
FFTW_EXTERN
 *
	`X
(
mÆloc
)(
size_t
 
n
); \

328 
FFTW_EXTERN
 
	`X
(
‰ì
)(*
p
); \

330 
FFTW_EXTERN
 
	`X
(
Ê›s
)(c⁄° X(
∂™
Ë
p
, \

331 *
add
, *
mul
, *
fmas
); \

332 
FFTW_EXTERN
 
	`X
(
e°im©e_co°
)(c⁄° X(
∂™
Ë
p
); \

334 
FFTW_EXTERN
 c⁄° 
	`X
(
vîsi⁄
)[]; \

335 
FFTW_EXTERN
 c⁄° 
	`X
(
cc
)[]; \

336 
FFTW_EXTERN
 c⁄° 
	`X
(
codñë_›tim
)[];

	)

341 
FFTW_DEFINE_API
(
FFTW_MANGLE_DOUBLE
, , 
f·w_com∂ex
)

342 
FFTW_DEFINE_API
(
FFTW_MANGLE_FLOAT
, , 
f·wf_com∂ex
)

343 
FFTW_DEFINE_API
(
FFTW_MANGLE_LONG_DOUBLE
, , 
f·wl_com∂ex
)

345 
	#FFTW_FORWARD
 (-1)

	)

346 
	#FFTW_BACKWARD
 (+1)

	)

348 
	#FFTW_NO_TIMELIMIT
 (-1.0)

	)

351 
	#FFTW_MEASURE
 (0U)

	)

352 
	#FFTW_DESTROY_INPUT
 (1U << 0)

	)

353 
	#FFTW_UNALIGNED
 (1U << 1)

	)

354 
	#FFTW_CONSERVE_MEMORY
 (1U << 2)

	)

355 
	#FFTW_EXHAUSTIVE
 (1U << 3Ë

	)

356 
	#FFTW_PRESERVE_INPUT
 (1U << 4Ë

	)

357 
	#FFTW_PATIENT
 (1U << 5Ë

	)

358 
	#FFTW_ESTIMATE
 (1U << 6)

	)

361 
	#FFTW_ESTIMATE_PATIENT
 (1U << 7)

	)

362 
	#FFTW_BELIEVE_PCOST
 (1U << 8)

	)

363 
	#FFTW_NO_DFT_R2HC
 (1U << 9)

	)

364 
	#FFTW_NO_NONTHREADED
 (1U << 10)

	)

365 
	#FFTW_NO_BUFFERING
 (1U << 11)

	)

366 
	#FFTW_NO_INDIRECT_OP
 (1U << 12)

	)

367 
	#FFTW_ALLOW_LARGE_GENERIC
 (1U << 13Ë

	)

368 
	#FFTW_NO_RANK_SPLITS
 (1U << 14)

	)

369 
	#FFTW_NO_VRANK_SPLITS
 (1U << 15)

	)

370 
	#FFTW_NO_VRECURSE
 (1U << 16)

	)

371 
	#FFTW_NO_SIMD
 (1U << 17)

	)

372 
	#FFTW_NO_SLOW
 (1U << 18)

	)

373 
	#FFTW_NO_FIXED_RADIX_LARGE_N
 (1U << 19)

	)

374 
	#FFTW_ALLOW_PRUNING
 (1U << 20)

	)

375 
	#FFTW_WISDOM_ONLY
 (1U << 21)

	)

377 #ifde‡
__˝lu•lus


	@fftw3_fix.h

1 #i‚de‡
_FFTW3_FIX


2 
	#_FFTW3_FIX


	)

3 
	$my_f·w_wrôe_ch¨
(
c
, *
f
Ë{ 
	`Âutc
(c, (
FILE
 *Ëf); 
	}
}

4 
	#f·w_exp‹t_wisdom_to_fûe
(
f
Ë
	`f·w_exp‹t_wisdom
(
my_f·w_wrôe_ch¨
, (*Ë(f))

	)

5 
	#f·wf_exp‹t_wisdom_to_fûe
(
f
Ë
	`f·wf_exp‹t_wisdom
(
my_f·w_wrôe_ch¨
, (*Ë(f))

	)

6 
	#f·wl_exp‹t_wisdom_to_fûe
(
f
Ë
	`f·wl_exp‹t_wisdom
(
my_f·w_wrôe_ch¨
, (*Ë(f))

	)

8 
	$my_f·w_ªad_ch¨
(*
f
Ë{  
	`fgëc
((
FILE
 *Ëf); 
	}
}

9 
	#f·w_imp‹t_wisdom_‰om_fûe
(
f
Ë
	`f·w_imp‹t_wisdom
(
my_f·w_ªad_ch¨
, (*Ë(f))

	)

10 
	#f·wf_imp‹t_wisdom_‰om_fûe
(
f
Ë
	`f·wf_imp‹t_wisdom
(
my_f·w_ªad_ch¨
, (*Ë(f))

	)

11 
	#f·wl_imp‹t_wisdom_‰om_fûe
(
f
Ë
	`f·wl_imp‹t_wisdom
(
my_f·w_ªad_ch¨
, (*Ë(f))

	)

	@filt2p2z.c

1 
	~<comm⁄.h
>

2 
	~<m©h.h
>

4 
	#asöh
(
vÆue
Ë(
REAL
)
	`log
(vÆuê+ 
	`sqπ
(vÆuê* vÆuê+ 1))

	)

6 
IIR_2P2Z


7 
	$√w_IIR_2P2Z
 (
CXB
 
buf
, 
REAL
 
Gaö
, REAL 
P¨amëî
, 
Fûãr_Sh≠e_P¨am
 
P¨amëîTy≥
, 
Fûãr_Ty≥
 
FûãrTy≥
, REAL 
Fs
, REAL 
F0
)

9 
REAL
 
w0
, 
sw
,
cw
, 
Æpha
;

10 
IIR_2P2Z
 
gí
 = (IIR_2P2Z)
	`mÆloc
((
iú_2p2z
));

11 
gí
->
sigbuf
 = 
buf
;

12 
gí
->
Gaö
 = (
REAL
)
	`sqπ
(
	`pow
(10,(Gain/20)));

14 
gí
->
doCom∂ex
 = 
FALSE
;

15 
	`mem£t
(
gí
->
B
,0,3*(
REAL
));

16 
	`mem£t
(
gí
->
A
,0,3*(
REAL
));

18 
gí
->
out1
=
cxzîo
;

19 
gí
->
out2
=
cxzîo
;

20 
gí
->
sig1
=
cxzîo
;

21 
gí
->
sig2
=
cxzîo
;

22 
gí
->
Fs
 = Fs;

23 
gí
->
F0
 = F0;

25 
w0
 = (
REAL
)(2*
M_PI
*
F0
/
Fs
);

27 
sw
 = (
REAL
)
	`sö
(
w0
);

28 
cw
 = (
REAL
)
	`cos
(
w0
);

30 i‡(
P¨amëîTy≥
 =
Q
)

32 
Æpha
 = 
sw
/(2*
P¨amëî
);

33 
gí
->
Q
 = 
P¨amëî
;

34 
gí
->
BW
 = (
REAL
)(2*
sw
*
	`asöh
(1/(2*gí->
Q
))/
	`log
(2)/
w0
);

39 
Æpha
 = (
REAL
)(
sw
*
	`söh
(
	`log
(2)/2 * 
P¨amëî
 * 
w0
/sw));

40 
gí
->
BW
 = 
P¨amëî
;

41 
gí
->
Q
 = (
REAL
)(1/(2*
	`söh
(
	`log
(2)/2 * gí->
BW
*
w0
/
sw
)));

44 
FûãrTy≥
)

46 
LPF
:

48 
gí
->
B
[0] = (1-
cw
)/2;

49 
gí
->
B
[1] = (1-
cw
);

50 
gí
->
B
[2] = (1-
cw
)/2;

51 
gí
->
A
[0] = 1+
Æpha
;

52 
gí
->
A
[1] = -2*
cw
;

53 
gí
->
A
[2] = 1 - 
Æpha
;

55 
HPF
:

57 
gí
->
B
[0] = (1+
cw
)/2;

58 
gí
->
B
[1] = -(1+
cw
);

59 
gí
->
B
[2] = (1+
cw
)/2;

60 
gí
->
A
[0] = 1+
Æpha
;

61 
gí
->
A
[1] = -2*
cw
;

62 
gí
->
A
[2] = 1 - 
Æpha
;

64 
BPF
:

66 
gí
->
B
[0] = 
Æpha
;

67 
gí
->
B
[1] = 0;

68 
gí
->
B
[2] = -
Æpha
;

69 
gí
->
A
[0] = 1+
Æpha
;

70 
gí
->
A
[1] = -2*
cw
;

71 
gí
->
A
[2] = 1 - 
Æpha
;

73 
NOTCH
:

75 
gí
->
B
[0] = 1/(1+
Æpha
);

76 
gí
->
B
[1] = -2*
cw
/(1+
Æpha
);

77 
gí
->
B
[2] = 1/(1+
Æpha
);

78 
gí
->
A
[0] = 1;

79 
gí
->
A
[1] = -2*
cw
/(1+
Æpha
);

80 
gí
->
A
[2] = (1 - 
Æpha
)/(1+alpha);

82 
APF
:

84 
gí
->
B
[0] = 1 - 
Æpha
;

85 
gí
->
B
[1] = -2*
cw
;

86 
gí
->
B
[2] = 1+
Æpha
;

87 
gí
->
A
[0] = 1+
Æpha
;

88 
gí
->
A
[1] = -2*
cw
;

89 
gí
->
A
[2] = 1 - 
Æpha
;

92  
gí
;

93 
	}
}

96 
	$dñ_IIR_2P2Z
(
IIR_2P2Z
 
gí
)

98 i‡(
gí
Ë
	`ß„‰ì
((*)gen);

99 
	}
}

101 
	$do_IIR_2P2Z
(
IIR_2P2Z
 
gí
)

103 
i
;

104 
i
=0;ò< 
	`CXBsize
(
gí
->
sigbuf
); i++)

106 
REAL
 
tmp
 = 
	`CXBªÆ
(
gí
->
sigbuf
,
i
);

107 
	`CXBªÆ
(
gí
->
sigbuf
,
i
Ë
tmp
*gí->
B
[0] + gí->
sig1
.
ª
*gí->B[1] + gí->
sig2
.re*gen->B[2]

108 - 
gí
->
out1
.
ª
*gí->
A
[1] - gí->
out2
.re*gen->A[2];

109 
gí
->
sig2
.
ª
 = gí->
sig1
.re;

110 
gí
->
sig1
.
ª
 = 
tmp
;

111 
gí
->
out2
.
ª
 = gí->
out1
.re;

112 
gí
->
out1
.
ª
 = 
	`CXBªÆ
(gí->
sigbuf
,
i
);

115 i‡(
gí
->
doCom∂ex
Ë
i
=0;ò< 
	`CXBsize
(gí->
sigbuf
); i++)

117 
REAL
 
tmp
 = 
	`CXBimag
(
gí
->
sigbuf
,
i
);

118 
	`CXBimag
(
gí
->
sigbuf
,
i
Ë
tmp
*gí->
B
[0] + gí->
sig1
.
im
*gí->B[1] + gí->
sig2
.im*gen->B[2]

119 - 
gí
->
out1
.
im
*gí->
A
[1] - gí->
out2
.im*gen->A[2];

120 
gí
->
sig2
.
im
 = gí->
sig1
.im;

121 
gí
->
sig1
.
im
 = 
tmp
;

122 
gí
->
out2
.
im
 = gí->
out1
.im;

123 
gí
->
out1
.
im
 = 
	`CXBimag
(gí->
sigbuf
,
i
);

126 
	}
}

127 
IIR_LPF_2P


128 
	$√w_IIR_LPF_2P
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
cuâoff_‰eq_Hz
, REAL 
Q
)

130 
REAL
 
w
 = (REAL)
TWOPI
*
cuâoff_‰eq_Hz
 / 
ßm∂î©e
;

132 
IIR_LPF_2P
 
Õf
 = (IIR_LPF_2P)
	`mÆloc
((
iú_Õf_2p
));

133 
Õf
->
sigbuf
 = 
buf
;

134 
Õf
->
kf
 = (
w
*w)/(1 + 
Q
*w + w*w);

135 
Õf
->
kq
 = (
Q
*
w
)/(1 + Q*w + w*w);

136 
Õf
->
out1
 = 0.0f;

137 
Õf
->
out2
 = 0.0f;

138  
Õf
;

139 
	}
}

142 
	$dñ_IIR_LPF_2P
(
IIR_LPF_2P
 
Õf
)

144 i‡(
Õf
Ë
	`ß„‰ì
((*)lpf);

145 
	}
}

146 
	$do_IIR_LPF_2P
 (
IIR_LPF_2P
 
Õf
)

149 
i
 = 0;

150 
i
 = 0; i < 
	`CXBsize
(
Õf
->
sigbuf
); i++)

152 
	`CXBªÆ
(
Õf
->
sigbuf
, 
i
ËÕf->
kf
 * CXBªÆ÷pf->sigbuf, iË+ 2*Õf->
out1
 -Üpf->
kq
*Õf->out1 - 2*Õf->kf*Õf->out1 -Üpf->
out2
 +Üpf->kq*lpf->out2 +Üpf->kf*lpf->out2;

153 
Õf
->
out2
 =Üpf->
out1
;

154 
Õf
->
out1
 = 
	`CXBªÆ
÷pf->
sigbuf
, 
i
);

156 
	}
}

159 
IIR_BPF_2P


160 
	$√w_IIR_BPF_2P
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
cuâoff_‰eq_Hz
, REAL 
Q
)

162 
REAL
 
w
 = (REAL)
TWOPI
*
cuâoff_‰eq_Hz
 / 
ßm∂î©e
;

163 
REAL
 
T
 = 1/
ßm∂î©e
;

164 
IIR_BPF_2P
 
bpf
 = (IIR_BPF_2P)
	`mÆloc
((
iú_bpf_2p
));

165 
bpf
->
sigbuf
 = 
buf
;

166 
bpf
->
kf
 = (
w
*w)/(1 + 
Q
*w + w*w);

167 
bpf
->
kq
 = (
Q
*
w
)/(1 + Q*w + w*w);

168 
bpf
->
out1
 = 0.0f;

169 
bpf
->
out2
 = 0.0f;

170 
bpf
->
sig1
 = 0.0f;

171  
bpf
;

172 
	}
}

174 
	$dñ_IIR_BPF_2P
(
IIR_BPF_2P
 
bpf
)

176 i‡(
bpf
Ë
	`ß„‰ì
((*)bpf);

177 
	}
}

178 
	$do_IIR_BPF_2P
 (
IIR_BPF_2P
 
bpf
)

180 
i
 = 0;

181 
REAL
 
sig1ãmp
;

182 
i
 = 0; i < 
	`CXBsize
(
bpf
->
sigbuf
); i++)

184 
sig1ãmp
 = 
	`CXBªÆ
(
bpf
->
sigbuf
, 
i
);

185 
	`CXBªÆ
(
bpf
->
sigbuf
, 
i
Ëbpf->
kq
*CXBªÆ(bpf->sigbuf, iË- bpf->kq*bpf->
sig1
 + 2*bpf->
out1
 - bpf->kq*bpf->out1 - 2*bpf->
kf
*bpf->out1 - bpf->
out2
 + bpf->kq*bpf->out2 + bpf->kf*bpf->out2;

186 
bpf
->
out2
 = bpf->
out1
;

187 
bpf
->
out1
 = 
	`CXBªÆ
(bpf->
sigbuf
, 
i
);

188 
bpf
->
sig1
 = 
sig1ãmp
;

190 
	}
}

192 
IIR_HPF_2P


193 
	$√w_IIR_HPF_2P
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
cuâoff_‰eq_Hz
, REAL 
Q
)

195 
REAL
 
w
 = (REAL)
TWOPI
*
cuâoff_‰eq_Hz
 / 
ßm∂î©e
;

196 
REAL
 
T
 = 1/
ßm∂î©e
;

197 
IIR_HPF_2P
 
hpf
 = (IIR_HPF_2P)
	`mÆloc
((
iú_hpf_2p
));

198 
hpf
->
sigbuf
 = 
buf
;

199 
hpf
->
kf
 = (
w
*w)/(4 + 2*
Q
*w + w*w);

200 
hpf
->
kq
 = (2*
Q
*
w
)/(4 + 2*Q*w + w*w);

201 
hpf
->
out1
 = 0.0f;

202 
hpf
->
out2
 = 0.0f;

203 
hpf
->
sig1
 = 0.0f;

204 
hpf
->
sig2
 = 0.0f;

205  
hpf
;

206 
	}
}

209 
	$dñ_IIR_HPF_2P
(
IIR_HPF_2P
 
hpf
)

211 i‡(
hpf
Ë
	`ß„‰ì
((*)hpf);

212 
	}
}

213 
	$do_IIR_HPF_2P
 (
IIR_HPF_2P
 
hpf
)

215 
i
 = 0;

216 
REAL
 
sig1ãmp
;

217 
i
 = 0; i < 
	`CXBsize
(
hpf
->
sigbuf
); i++)

219 
sig1ãmp
 = 
	`CXBªÆ
(
hpf
->
sigbuf
, 
i
);

220 
	`CXBªÆ
(
hpf
->
sigbuf
, 
i
Ë2*hpf->
out1
 - 2*hpf->
kq
*hpf->out1 - 4*hpf->
kf
*hpf->out1

221 - 
hpf
->
out2
 + 2*hpf->
kq
*hpf->out2

222 + (1 - 
hpf
->
kq
 - hpf->
kf
)*(
	`CXBªÆ
(hpf->
sigbuf
, 
i
Ë- 2*hpf->
sig1
 + hpf->
sig2
);

223 
hpf
->
out2
 = hpf->
out1
;

224 
hpf
->
out1
 = 
	`CXBªÆ
(hpf->
sigbuf
, 
i
);

225 
hpf
->
sig2
 = hpf->
sig1
;

226 
hpf
->
sig1
 = 
sig1ãmp
;

229 
	}
}

231 
IIR_1P1Z


232 
	$√w_IIR_1P1Z
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
pﬁe_‰eq_hz
, REAL 
zîo_‰eq_hz
)

234 
REAL
 
wp
 = (REALË
TWOPI
 * 
pﬁe_‰eq_hz
 / 
ßm∂î©e
;

235 
REAL
 
wz
 = (REALË
TWOPI
 * 
zîo_‰eq_hz
 / 
ßm∂î©e
;

236 
REAL
 
kp
 = 
wp
/(2+wp);

237 
REAL
 
kz
 = 
wz
/(2+
wp
);

238 
IIR_1P1Z
 
fûãr
 = (IIR_1P1Z)
	`mÆloc
((
iú_1p1z
));

239 
fûãr
->
sigbuf
 = 
buf
;

240 
fûãr
->
b0
 = 1-
kp
+
kz
;

241 
fûãr
->
b1
 = -1+
kp
+
kz
;

242 
fûãr
->
a1
 = -1+2*
kp
;

243 
fûãr
->
gaö
 = 
wp
/
wz
;

244 
fûãr
->
out1
 = 0.0f;

245 
fûãr
->
sig1
 = 0.0f;

246  
fûãr
;

247 
	}
}

250 
	$dñ_IIR_1P1Z
(
IIR_1P1Z
 
fûãr
)

252 i‡(
fûãr
Ë
	`ß„‰ì
((*)filter);

253 
	}
}

254 
	$do_IIR_1P1Z
 (
IIR_1P1Z
 
fûãr
)

256 
i
 = 0;

257 
REAL
 
sig1ãmp
;

259 
i
 = 0; i < 
	`CXBsize
(
fûãr
->
sigbuf
); i++)

261 
sig1ãmp
 = 
fûãr
->
gaö
 * 
	`CXBªÆ
(fûãr->
sigbuf
, 
i
);

263 
	`CXBªÆ
(
fûãr
->
sigbuf
, 
i
Ëfûãr->
b0
 * 
sig1ãmp


264 + 
fûãr
->
b1
 * fûãr->
sig1


265 - 
fûãr
->
a1
 * fûãr->
out1
;

266 
fûãr
->
out1
 = 
	`CXBªÆ
(fûãr->
sigbuf
, 
i
);

267 
fûãr
->
sig1
 = 
sig1ãmp
;

269 
	}
}

	@filt2p2z.h

4 #i‚de‡
fût2p2z


5 
	#fût2p2z


	)

6 
	~<bufvec.h
>

8 
	efûãr_sh≠e_∑øm
 {

9 
	mQ
,

10 
	mBW
,

11 
	mShñfSl›e


12 } 
	tFûãr_Sh≠e_P¨am
;

14 
	efûãr_ty≥
 {

15 
	mLPF
,

16 
	mHPF
,

17 
	mBPF
,

18 
	mAPF
,

19 
	mNOTCH


20 } 
	tFûãr_Ty≥
;

22 
	s_iú_Õf_2p
 {

23 
CXB
 
	msigbuf
;

24 
REAL
 
	mkq
;

25 
REAL
 
	mkf
;

26 
REAL
 
	mout1
;

27 
REAL
 
	mout2
;

28 } 
	tiú_Õf_2p
,*
	tIIR_LPF_2P
;

31 
	s_iú_bpf_2p
 {

32 
CXB
 
	msigbuf
;

33 
REAL
 
	mkq
;

34 
REAL
 
	mkf
;

35 
REAL
 
	msig1
;

36 
REAL
 
	mout1
;

37 
REAL
 
	mout2
;

38 } 
	tiú_bpf_2p
,*
	tIIR_BPF_2P
;

40 
	s_iú_hpf_2p
 {

41 
CXB
 
	msigbuf
;

42 
REAL
 
	mkq
;

43 
REAL
 
	mkf
;

44 
REAL
 
	msig1
;

45 
REAL
 
	msig2
;

46 
REAL
 
	mout1
;

47 
REAL
 
	mout2
;

48 } 
	tiú_hpf_2p
,*
	tIIR_HPF_2P
;

51 
	s_iú_2p2z
 {

52 
CXB
 
	msigbuf
;

53 
REAL
 
	mQ
;

54 
REAL
 
	mGaö
;

55 
REAL
 
	mBW
;

56 
REAL
 
	mF0
;

57 
REAL
 
	mFs
;

58 
REAL
 
	mB
[3];

59 
REAL
 
	mA
[3];

60 
COMPLEX
 
	msig1
;

61 
COMPLEX
 
	msig2
;

62 
COMPLEX
 
	mout1
;

63 
COMPLEX
 
	mout2
;

64 
BOOLEAN
 
	mdoCom∂ex
;

65 } 
	tiú_2p2z
, *
	tIIR_2P2Z
;

67 
	s_iú_1p1z
 {

68 
CXB
 
	msigbuf
;

69 
REAL
 
	mb0
;

70 
REAL
 
	mb1
;

71 
REAL
 
	ma1
;

72 
REAL
 
	mgaö
;

73 
REAL
 
	msig1
;

74 
REAL
 
	mout1
;

75 } 
	tiú_1p1z
,*
	tIIR_1P1Z
;

77 
IIR_LPF_2P
 
√w_IIR_LPF_2P
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
cuâoff_‰eq_Hz
, REAL 
Q
);

78 
dñ_IIR_LPF_2P
(
IIR_LPF_2P
 
Õf
);

79 
do_IIR_LPF_2P
 (
IIR_LPF_2P
 
Õf
);

81 
IIR_BPF_2P
 
√w_IIR_BPF_2P
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
cuâoff_‰eq_Hz
, REAL 
Q
);

82 
dñ_IIR_BPF_2P
(
IIR_BPF_2P
 
bpf
);

83 
do_IIR_BPF_2P
 (
IIR_BPF_2P
 
bpf
);

85 
IIR_HPF_2P
 
√w_IIR_HPF_2P
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
cuâoff_‰eq_Hz
, REAL 
Q
);

86 
dñ_IIR_HPF_2P
(
IIR_HPF_2P
 
HPF
);

87 
do_IIR_HPF_2P
 (
IIR_HPF_2P
 
hpf
);

89 
IIR_2P2Z
 
√w_IIR_2P2Z
 (
CXB
 
buf
, 
REAL
 
Gaö
, REAL 
P¨amëî
,
Fûãr_Sh≠e_P¨am
 
P¨amëîTy≥
,
Fûãr_Ty≥
 
FûãrTy≥
,REAL 
Fs
,REAL 
F0
);

90 
dñ_IIR_2P2Z
(
IIR_2P2Z
 
iúgí
);

91 
do_IIR_2P2Z
(
IIR_2P2Z
 
iúgí
);

93 
IIR_1P1Z
 
√w_IIR_1P1Z
 (
CXB
 
buf
, 
REAL
 
ßm∂î©e
, REAL 
pﬁe_‰eq_hz
, REAL 
zîo_‰eq_hz
);

94 
dñ_IIR_1P1Z
 (
IIR_1P1Z
 
fûãr
);

95 
do_IIR_1P1Z
 (
IIR_1P1Z
 
fûãr
);

	@filter.c

33 
	~<fûãr.h
>

36 
	#⁄ïi
 
M_PI


	)

37 
	#tw›i
 (2*
⁄ïi
)

	)

39 
RólFIR


40 
	$√wFIR_REAL
 (
size
, *
èg
)

42 
RólFIR
 
p
 = (
RólFIRDesc
 *Ë
	`ß„Æloc
 (1,  (RólFIRDesc), 
èg
);

43 
	`FIRc€f
 (
p
Ë(
REAL
 *Ë
	`ß„Æloc
 (
size
,  (REAL), 
èg
);

44 
	`FIRsize
 (
p
Ë
size
;

45 
	`FIRty≥
 (
p
Ë
FIR_Undef
;

46 
	`FIRiscom∂ex
 (
p
Ë
FALSE
;

47 
	`FIRfqlo
 (
p
Ë
	`FIRfqhi
 (p) = -1.0;

48  
p
;

49 
	}
}

51 
Com∂exFIR


52 
	$√wFIR_COMPLEX
 (
size
, *
èg
)

54 
Com∂exFIR
 
p
 =

55 (
Com∂exFIRDesc
 *Ë
	`ß„Æloc
 (1,  (Com∂exFIRDesc), 
èg
);

56 
	`FIRc€f
 (
p
Ë(
COMPLEX
 *Ë
	`ß„Æloc
 (
size
,  (COMPLEX), 
èg
);

57 
	`FIRsize
 (
p
Ë
size
;

58 
	`FIRty≥
 (
p
Ë
FIR_Undef
;

59 
	`FIRiscom∂ex
 (
p
Ë
TRUE
;

60 
	`FIRfqlo
 (
p
Ë
	`FIRfqhi
 (p) = -1.0;

61  
p
;

62 
	}
}

65 
	$dñFIR_REAL
 (
RólFIR
 
p
)

67 i‡(
p
)

69 
	`dñvec_REAL
 (
	`FIRc€f
 (
p
));

70 
	`‰ì
 ((*Ë
p
);

72 
	}
}

75 
	$dñFIR_COMPLEX
 (
Com∂exFIR
 
p
)

77 i‡(
p
)

79 
	`dñvec_COMPLEX
 (
	`FIRc€f
 (
p
));

80 
	`‰ì
 ((*Ë
p
);

82 
	}
}

84 
RólFIR


85 
	$√wFIR_Low∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

87 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

89 i‡(
size
 < 1)

92 
msize
 = 
size
-1;

93 
RólFIR
 
p
;

94 
REAL
 *
h
, *
w
, 
fc
 = 
cutoff
 / 
§
;

95 
REAL
 
c‹ª˘‹
 = 0.0, 
midpoöt
;

96 
i
;

97 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

98 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Lowpass_REAL");

99 
h
 = 
	`FIRc€f
 (
p
);

100 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Lowpass_REAL window");

101 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

102 
i
 = 0; i < 
size
; i++)

104 i‡((
REAL
)
i
 !
midpoöt
)

105 
h
[
i
] =

106 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

107 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

109 
h
[
i
] = 2.0‡* 
fc
;

113 
	`dñvec_REAL
 (
w
);

114 
	`FIRty≥
 (
p
Ë
FIR_Low∑ss
;

115  
p
;

117 
	}
}

119 
Com∂exFIR


120 
	$√wFIR_Low∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

122 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

124 i‡(
size
 < 1)

128 
msize
=
size
-1;

129 
BOOLEAN
 
eví
=
FALSE
;

130 
Com∂exFIR
 
p
;

131 
COMPLEX
 *
h
;

132 
REAL
 *
w
, 
fc
 = 
cutoff
 / 
§
, 
midpoöt
;

133 
i
;

135 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

136 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Lowpass_COMPLEX");

137 
h
 = 
	`FIRc€f
 (
p
);

138 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Lowpass_REAL window");

139 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

141 
i
 = 0; i < 
size
; i++)

143 i‡((
REAL
)
i
 !
midpoöt
)

144 
h
[
i
].
ª
 =

145 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

146 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

148 
h
[
i
].
ª
 = 2.0‡* 
fc
;

151 
	`dñvec_REAL
 (
w
);

152 
	`FIRty≥
 (
p
Ë
FIR_Low∑ss
;

153  
p
;

155 
	}
}

157 
RólFIR


158 
	$√wFIR_B™d∑ss_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

160 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

162 i‡(
size
 < 1)

166 
RólFIR
 
p
;

167 
REAL
 *
h
, *
w
, 
fc
, 
ff
, 
midpoöt
;

168 
i
, 
msize
;

170 
msize
 = 
size
-1;

171 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

172 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Bandpass_REAL");

173 
h
 = 
	`FIRc€f
 (
p
);

174 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandpass_REAL window");

175 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

177 
lo
 /
§
, 
hi
 /= sr;

178 
fc
 = (
hi
 - 
lo
) / 2.0f;

179 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

181 
i
 = 0; i < 
size
; i++)

183 i‡((
REAL
)
i
 !
midpoöt
)

184 
h
[
i
] =

185 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

186 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

188 
h
[
i
] = 2.0‡* 
fc
;

189 
h
[
i
] *(
REAL
Ë(2.0 * 
	`cos
 (
ff
 * ((REAL)ò- 
midpoöt
)));

192 
	`dñvec_REAL
 (
w
);

193 
	`FIRty≥
 (
p
Ë
FIR_B™d∑ss
;

194  
p
;

196 
	}
}

198 
Com∂exFIR


199 
	$√wFIR_B™d∑ss_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

201 i‡((
lo
 < -(
§
 / 2.0)Ë|| (
hi
 > (sr / 2.0)) || (hi <=Üo))

203 i‡(
size
 < 1)

207 
Com∂exFIR
 
p
;

208 
COMPLEX
 *
h
;

209 
REAL
 *
w
, 
fc
, 
ff
, 
midpoöt
;

210 
i
,
msize
;

212 
msize
 = 
size
-1;

213 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

214 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Bandpass_COMPLEX");

215 
h
 = 
	`FIRc€f
 (
p
);

216 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandpass_COMPLEX window");

217 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

219 
lo
 /
§
, 
hi
 /= sr;

220 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

221 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

223 
i
 = 0; i < 
size
; i++)

225 
REAL
 
k
 = (REAL)
i
 - 
midpoöt
;

226 
REAL
 
tmp
, 
phs
 = 
ff
 * 
k
;

227 i‡((
REAL
)
i
 !
midpoöt
)

228 
tmp
 = (
REAL
Ë((
	`sö
 (
tw›i
 * 
k
 * 
fc
Ë/ (
⁄ïi
 * k)Ë* 
w
[
i
]);

230 
tmp
 = (
REAL
Ë(2.0 * 
fc
);

231 
tmp
 *= 2.0;

232 
h
[
i
].
ª
 = (
REAL
Ë(
tmp
 * 
	`cos
 (
phs
));

233 
h
[
i
].
im
 = (
IMAG
Ë(
tmp
 * 
	`sö
 (
phs
));

236 
	`dñvec_REAL
 (
w
);

237 
	`FIRty≥
 (
p
Ë
FIR_B™d∑ss
;

238  
p
;

240 
	}
}

242 
RólFIR


243 
	$√wFIR_High∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

245 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

247 i‡(
size
 < 1)

251 
RólFIR
 
p
;

252 
REAL
 *
h
, *
w
, 
fc
 = 
cutoff
 / 
§
, 
midpoöt
;

253 
i
, 
msize
;

256 
msize
 = 
size
-1;

257 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

258 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Highpass_REAL");

259 
h
 = 
	`FIRc€f
 (
p
);

260 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Highpass_REAL window");

261 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

263 
i
 = 0; i < 
size
; i++)

265 i‡((
REAL
)
i
 !
midpoöt
)

266 
h
[
i
] =

267 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

268 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

270 
h
[
i
] = (
REAL
Ë(2.0 * 
fc
);

273 
i
 = 0; i < 
size
; i++)

275 i‡((
REAL
)
i
 !
midpoöt
)

276 
h
[
i
] = -h[i];

278 
h
[
i
] = 1.0f - h[i];

281 
	`dñvec_REAL
 (
w
);

282 
	`FIRty≥
 (
p
Ë
FIR_High∑ss
;

283  
p
;

285 
	}
}

287 
Com∂exFIR


288 
	$√wFIR_High∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

290 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

292 i‡(
size
 < 1)

296 
Com∂exFIR
 
p
;

297 
COMPLEX
 *
h
;

298 
REAL
 *
w
, 
fc
 = 
cutoff
 / 
§
, 
midpoöt
;

299 
i
,
msize
;

301 
msize
 = 
size
-1;

302 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

303 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Highpass_REAL");

304 
h
 = 
	`FIRc€f
 (
p
);

305 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Highpass_REAL window");

306 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

308 
i
 = 0; i < 
size
; i++)

310 i‡((
REAL
)
i
 !
midpoöt
)

311 
h
[
i
].
ª
 =

312 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

313 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

315 
h
[
i
].
ª
 = (
REAL
Ë(2.0 * 
fc
);

318 
i
 = 0; i < 
size
; i++)

320 i‡((
REAL
)
i
 !
midpoöt
)

321 
h
[
i
].
ª
 = -h[i].re;

323 
h
[
i
].
ª
 = (
REAL
) (1.0 - h[i].re);

326 
	`dñvec_REAL
 (
w
);

327 
	`FIRty≥
 (
p
Ë
FIR_High∑ss
;

328  
p
;

330 
	}
}

332 
RólFIR


333 
	$√wFIR_Hûbît_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

335 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

337 i‡(
size
 < 1)

341 
RólFIR
 
p
;

342 
REAL
 *
h
, *
w
, 
fc
, 
ff
, 
midpoöt
;

343 
i
,
msize
;

345 
msize
 = 
size
-1;

346 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

347 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Hilbert_REAL");

348 
h
 = 
	`FIRc€f
 (
p
);

349 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Hilbert_REAL window");

350 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

352 
lo
 /
§
, 
hi
 /= sr;

353 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

354 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

356 
i
 = 0; i < 
size
; i++)

359 i‡((
REAL
)
i
 !
midpoöt
)

360 
h
[
i
] =

361 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

362 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

364 
h
[
i
] = (
REAL
Ë(2.0 * 
fc
);

365 
h
[
i
] *(
REAL
Ë(2.0 * 
	`sö
 (
ff
 * ((REAL)ò- 
midpoöt
)));

368 
	`dñvec_REAL
 (
w
);

369 
	`FIRty≥
 (
p
Ë
FIR_Hûbît
;

370  
p
;

372 
	}
}

374 
Com∂exFIR


375 
	$√wFIR_Hûbît_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

377 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

379 i‡(
size
 < 1)

383 
Com∂exFIR
 
p
;

384 
COMPLEX
 *
h
;

385 
REAL
 *
w
, 
fc
, 
ff
, 
midpoöt
;

386 
i
, 
msize
;

388 
msize
 = 
size
-1;

389 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

390 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Hilbert_COMPLEX");

391 
h
 = 
	`FIRc€f
 (
p
);

392 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Hilbert_COMPLEX window");

393 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

395 
lo
 /
§
, 
hi
 /= sr;

396 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

397 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

399 
i
 = 0; i < 
size
; i++)

401 
REAL
 
tmp
, 
phs
 = 
ff
 * ((REAL)
i
 - 
midpoöt
),
tm∑ng
 = ((REAL)i - midpoint);

402 i‡(
i
 !
midpoöt
)

403 
tmp
 =

404 (
REAL
Ë((
	`sö
 (
tw›i
 * 
tm∑ng
 * 
fc
) /

405 (
⁄ïi
 * 
tm∑ng
)Ë* 
w
[
i
]);

407 
tmp
 = (
REAL
Ë(2.0 * 
fc
);

408 
tmp
 *= 2.0f;

410 
h
[
i
].
im
 *(
REAL
Ë(
tmp
 * 
	`sö
 (
phs
));

413 
	`dñvec_REAL
 (
w
);

414 
	`FIRty≥
 (
p
Ë
FIR_Hûbît
;

415  
p
;

417 
	}
}

419 
RólFIR


420 
	$√wFIR_B™d°›_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

422 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

424 i‡(
size
 < 1)

428 
RólFIR
 
p
;

429 
REAL
 *
h
, *
w
, 
fc
, 
ff
, 
midpoöt
;

430 
i
,
msize
;

432 
msize
 = 
size
-1;

433 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

434 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Bandstop_REAL");

435 
h
 = 
	`FIRc€f
 (
p
);

436 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandstop_REAL window");

437 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

439 
lo
 /
§
, 
hi
 /= sr;

440 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

441 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

443 
i
 = 0; i < 
size
; i++)

445 i‡((
REAL
)
i
 !
midpoöt
)

446 
h
[
i
] =

447 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

448 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

450 
h
[
i
] = (
REAL
Ë(2.0 * 
fc
);

451 
h
[
i
] *(
REAL
Ë(2.0 * 
	`cos
 (
ff
 * ((REAL)ò- 
midpoöt
)));

454 
i
 = 0; i < 
size
; i++)

456 i‡((
REAL
)
i
 !
midpoöt
)

457 
h
[
i
] = -h[i];

459 
h
[
i
] = (
REAL
) (1.0 - h[i]);

462 
	`dñvec_REAL
 (
w
);

463 
	`FIRty≥
 (
p
Ë
FIR_B™d°›
;

464  
p
;

466 
	}
}

468 
Com∂exFIR


469 
	$√wFIR_B™d°›_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

471 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

473 i‡(
size
 < 1)

477 
Com∂exFIR
 
p
;

478 
COMPLEX
 *
h
;

479 
REAL
 *
w
, 
fc
, 
ff
, 
midpoöt
;

480 
i
, 
msize
;

482 
msize
 = 
size
 -1;

483 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

484 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Bandstop_REAL");

485 
h
 = 
	`FIRc€f
 (
p
);

486 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandstop_REAL window");

487 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

489 
lo
 /
§
, 
hi
 /= sr;

490 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

491 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

493 
i
 = 0; i < 
size
; i++)

495 
REAL
 
tmp
, 
phs
 = 
ff
 * ((REAL)
i
 - 
midpoöt
);

496 i‡((
REAL
)
i
 !
midpoöt
)

497 
tmp
 =

498 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

499 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

501 
tmp
 = (
REAL
Ë(2.0 * 
fc
);

502 
tmp
 *= 2.0;

503 
h
[
i
].
ª
 *(
REAL
Ë(
tmp
 * 
	`cos
 (
phs
));

504 
h
[
i
].
im
 *(
REAL
Ë(
tmp
 * 
	`sö
 (
phs
));

507 
i
 = 0; i < 
size
; i++)

509 i‡((
REAL
)
i
 !
midpoöt
)

510 
h
[
i
] = 
	`Cmul
 (h[i], 
cxmöus⁄e
);

512 
h
[
i
] = 
	`Csub
 (
cx⁄e
, h[i]);

515 
	`dñvec_REAL
 (
w
);

516 
	`FIRty≥
 (
p
Ë
FIR_B™d°›
;

517  
p
;

519 
	}
}

521 #ifde‡
nŸdef


523 
	$maö
 (
¨gc
, **
¨gv
)

525 
i
, 
size
 = 101;

526 
RólFIR
 
fût
;

527 #ifde‡
nŸdef


528 
fût
 = 
	`√wFIR_Low∑ss_REAL
 (1000.0, 48000.0, 
size
);

529 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

530 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

531 
	`dñFIR_REAL
 (
fût
);

534 #ifde‡
nŸdef


535 
fût
 = 
	`√wFIR_B™d°›_REAL
 (1000.0, 2000.0, 48000.0, 
size
);

536 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

537 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

538 
	`dñFIR_REAL
 (
fût
);

541 
fût
 = 
	`√wFIR_B™d∑ss_REAL
 (1000.0, 2000.0, 48000.0, 
size
);

542 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

543 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

544 
	`dñFIR_REAL
 (
fût
);

546 #ifde‡
nŸdef


547 
fût
 = 
	`√wFIR_High∑ss_REAL
 (1000.0, 48000.0, 
size
);

548 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

549 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

550 
	`dñFIR_REAL
 (
fût
);

553 #ifde‡
nŸdef


554 
fût
 = 
	`√wFIR_Hûbît_REAL
 (1000.0, 2000.0, 48000.0, 
size
);

555 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

556 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

557 
	`dñFIR_REAL
 (
fût
);

560 #ifde‡
nŸdef


562 
COMPLEX
 *
z
;

563 
REAL
 *
âbl
;

564 
f·Àn
;

565 
f·Àn
 = 
	`nblock2
 (
size
) * 2;

566 
z
 = 
	`√wvec_COMPLEX
 (
f·Àn
, "z");

567 
âbl
 = 
	`√wvec_REAL
 (
f·Àn
, "ttbl");

568 
	`cf·m
 (
FFT_INIT
, 
f·Àn
, (*Ë
z
, (*Ëz, 
âbl
);

569 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

570 
z
[
i
].
ª
 = 
	`FIRèp
 (
fût
, i);

571 
	`cf·m
 (
FFT_FORWARD
, 
f·Àn
, (*Ë
z
, (*Ëz, 
âbl
);

572 
i
 = 0; i < 
size
; i++)

574 
	`¥ötf
 ("%d %f\n", 
i
, 
	`Cabs
 (
z
[i]));

575 
	`dñvec_COMPLEX
 (
z
);

576 
	`dñvec_REAL
 (
âbl
);

580 
	`exô
 (0);

581 
	}
}

	@filter.h

33 #i‚de‡
_fûãr_h


35 
	#_fûãr_h


	)

38 
	~<‰omsys.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<Á°rig.h
>

45 
	~<upd©e.h
>

46 
	~<lmadf.h
>

47 
	~<f·w3.h
>

48 
	~<f·w3_fix.h
>

49 
	~<wödow.h
>

50 
	~<m©h.h
>

54 
	mFIR_Undef
, 
	mFIR_Low∑ss
, 
	mFIR_B™d∑ss
, 
	mFIR_High∑ss
, 
	mFIR_Hûbît
,

55 
	mFIR_B™d°›


56 } 
	tFIR_ª•⁄£_ty≥
;

59 { 
	mFIR_Eví
, 
	mFIR_Odd
 } 
	tFIR_∑rôy_ty≥
;

61 
	s_ªÆ_FIR


63 
REAL
 *
	mc€f
;

64 
	msize
;

65 
FIR_ª•⁄£_ty≥
 
	mty≥
;

66 
BOOLEAN
 
	m˝lx
;

69 
REAL
 
	mlo
, 
	mhi
;

70 } 
	m‰eq
;

71 } 
	tRólFIRDesc
, *
	tRólFIR
;

73 
	s_com∂ex_FIR


75 
COMPLEX
 *
	mc€f
;

76 
	msize
;

77 
FIR_ª•⁄£_ty≥
 
	mty≥
;

78 
BOOLEAN
 
	m˝lx
;

81 
REAL
 
	mlo
, 
	mhi
;

82 } 
	m‰eq
;

83 } 
	tCom∂exFIRDesc
, *
	tCom∂exFIR
;

85 
	#FIRc€f
(
p
Ë(’)->
c€f
)

	)

86 
	#FIRèp
(
p
, 
i
Ë(
	`FIRc€f
’)[(i)])

	)

87 
	#FIRsize
(
p
Ë(’)->
size
)

	)

88 
	#FIRty≥
(
p
Ë(’)->
ty≥
)

	)

89 
	#FIRiscom∂ex
(
p
Ë(’)->
˝lx
)

	)

90 
	#FIRi§ól
(
p
Ë(!
	`FIRiscom∂ex
’))

	)

91 
	#FIRfqlo
(
p
Ë(’)->
‰eq
.
lo
)

	)

92 
	#FIRfqhi
(
p
Ë(’)->
‰eq
.
hi
)

	)

94 
	#dñFIR_Low∑ss_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

95 
	#dñFIR_Low∑ss_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

96 
	#dñFIR_B™d∑ss_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

97 
	#dñFIR_B™d∑ss_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

98 
	#dñFIR_High∑ss_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

99 
	#dñFIR_High∑ss_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

100 
	#dñFIR_Hûbît_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

101 
	#dñFIR_Hûbît_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

102 
	#dñFIR_B™d°›_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

103 
	#dñFIR_B™d°›_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

105 
RólFIR
 
√wFIR_REAL
 (
size
, *
èg
);

106 
Com∂exFIR
 
√wFIR_COMPLEX
 (
size
, *
èg
);

107 
dñFIR_REAL
 (
RólFIR
 
p
);

108 
dñFIR_COMPLEX
 (
Com∂exFIR
 
p
);

109 
RólFIR
 
√wFIR_Low∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

110 
Com∂exFIR
 
√wFIR_Low∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

111 
RólFIR
 
√wFIR_B™d∑ss_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
);

112 
Com∂exFIR
 
√wFIR_B™d∑ss_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
,

113 
size
);

114 
RólFIR
 
√wFIR_High∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

115 
Com∂exFIR
 
√wFIR_High∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

116 
RólFIR
 
√wFIR_Hûbît_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
);

117 
Com∂exFIR
 
√wFIR_Hûbît_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
,

118 
size
);

119 
RólFIR
 
√wFIR_B™d°›_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
);

120 
Com∂exFIR
 
√wFIR_B™d°›_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
,

121 
size
);

	@filterbank.c

38 
	~<fûãrb™k.h
>

41 
FIRDownßm∂î


42 
	$√wFIRPDownßm∂î
(
RólFIR
 
fûãr
, 
downßm∂e
, 
ch™√l
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
)

44 
FIRDownßm∂î
 
tmp
;

45 
i
,
j
;

47 
tmp
 = (
FIRDownßm∂î
Ë
	`mÆloc
((
fúdownßm∂î
));

48 
tmp
->
downßm∂e
 = downsample;

49 
tmp
->
dïth
 = ()
	`˚û
(()
fûãr
->
size
/()
downßm∂e
);

52 
tmp
->
fûãr_∑πôi⁄


53 (
REAL
 **)
	`ß„Æloc
(
downßm∂e
,(REAL *),"fbÖartitionÖointers");

54 
tmp
->
fûãr_dñaylöe


55 (
COMPLEX
 **)
	`ß„Æloc
(
downßm∂e
,(COMPLEX *),"fbÖartitionÖointers");

56 
i
=0;i<
tmp
->
downßm∂e
;i++) {

57 
tmp
->
fûãr_∑πôi⁄
[
i
]

58 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

59 
tmp
->
fûãr_dñaylöe
[
i
]

60 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

62 
i
=0;i<
downßm∂e
;i++) {

63 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

64 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

69 
i
=0; i<
tmp
->
downßm∂e
; i++)

70 
j
=0; j<
tmp
->
dïth
; j++)

71 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
downßm∂e
));

74 
tmp
->
sigö
 = sigin;

75 
tmp
->
sigout
 = sigout;

76 
tmp
->
rŸ©‹
 = (
COMPLEX
 *)
	`ß„Æloc
—mp->
downßm∂e
,(COMPLEX),"newFIRDownsampler: downsampleÑotator");

77 
i
=0;i<
tmp
->
downßm∂e
;i++Ëtmp->
rŸ©‹
[i] = 
	`Cm∂x
((
REAL
)
	`cos
(i*
ch™√l
*2.0*
M_PI
/tmp->downßm∂e),(
IMAG
)
	`sö
(i*channel*2.0*M_PI/tmp->downsample));

79  
tmp
;

80 
	}
}

82 
FIRUpßm∂î


83 
	$√wFIRPUpßm∂î
(
RólFIR
 
fûãr
, 
upßm∂e
, 
ch™√l
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
)

85 
FIRUpßm∂î
 
tmp
;

86 
i
,
j
;

88 
tmp
 = (
FIRUpßm∂î
Ë
	`mÆloc
((
fúpfb
));

89 
tmp
->
upßm∂e
 = upsample;

90 
tmp
->
dïth
 = ()
	`˚û
(()
fûãr
->
size
/()
upßm∂e
);

93 
tmp
->
fûãr_∑πôi⁄


94 (
REAL
 **)
	`ß„Æloc
(
upßm∂e
,(REAL *),"fbÖartitionÖointers");

95 
tmp
->
fûãr_dñaylöe


96 (
COMPLEX
 **)
	`ß„Æloc
(
upßm∂e
,(COMPLEX *),"fbÖartitionÖointers");

97 
i
=0;i<
tmp
->
upßm∂e
;i++) {

98 
tmp
->
fûãr_∑πôi⁄
[
i
]

99 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

100 
tmp
->
fûãr_dñaylöe
[
i
]

101 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

103 
i
=0;i<
upßm∂e
;i++) {

104 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

105 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

110 
i
=0; i<
tmp
->
upßm∂e
; i++)

111 
j
=0; j<
tmp
->
dïth
; j++)

112 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
upßm∂e
));

115 
tmp
->
sigö
 = sigin;

116 
tmp
->
sigout
 = sigout;

117 
tmp
->
rŸ©‹
 = (
COMPLEX
 *)
	`ß„Æloc
—mp->
upßm∂e
,(COMPLEX),"newFIRUpsampler: upsampleÑotator");

118 
i
=0;i<
tmp
->
upßm∂e
;i++Ëtmp->
rŸ©‹
[i] = 
	`Cm∂x
((
REAL
)
	`cos
(i*
ch™√l
*2.0*
M_PI
/tmp->upßm∂e),(
IMAG
)
	`sö
(i*channel*2.0*M_PI/tmp->upsample));

120  
tmp
;

121 
	}
}

123 
FIRPFB


124 
	$√wFIRHBPFBCh™√lizî
(
RólFIR
 
fûãr
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
)

126 
FIRPFB
 
tmp
;

127 
i
,
j
;

129 
tmp
 = (
FIRPFB
Ë
	`mÆloc
((
fúpfb
));

130 
tmp
->
numch™s
 = 2;

131 
tmp
->
dïth
 = ()
	`˚û
((()
fûãr
->
size
-1)/2.0);

134 
tmp
->
fûãr_∑πôi⁄


135 (
REAL
 **)
	`ß„Æloc
(2,(REAL *),"fbÖartitionÖointers");

136 
tmp
->
fûãr_dñaylöe


137 (
COMPLEX
 **)
	`ß„Æloc
(2,(COMPLEX *),"fbÖartitionÖointers");

138 
i
=0;i<
tmp
->
numch™s
;i++) {

139 
tmp
->
fûãr_∑πôi⁄
[
i
]

140 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

141 
tmp
->
fûãr_dñaylöe
[
i
]

142 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

144 
i
=0;i<
tmp
->
numch™s
;i++) {

145 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

146 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

151 
i
=0; i<
tmp
->
numch™s
; i++)

152 
j
=0; j<
tmp
->
dïth
; j++)

153 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
numch™s
));

156 
tmp
->
sigö
 = sigin;

157 
tmp
->
sigout
 = sigout;

159  
tmp
;

160 
	}
}

161 
FIRPFB


162 
	$√wFIRPFBCh™√lizî
(
RólFIR
 
fûãr
, 
numch™s
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
, 
pbôs
)

164 
FIRPFB
 
tmp
;

165 
i
,
j
;

167 
tmp
 = (
FIRPFB
Ë
	`mÆloc
((
fúpfb
));

168 
tmp
->
numch™s
 =Çumchans;

169 
tmp
->
dïth
 = ()
	`˚û
(()
fûãr
->
size
/()
numch™s
);

172 
tmp
->
fûãr_∑πôi⁄


173 (
REAL
 **)
	`ß„Æloc
(
numch™s
,(REAL *),"fbÖartitionÖointers");

174 
tmp
->
fûãr_dñaylöe


175 (
COMPLEX
 **)
	`ß„Æloc
(
numch™s
,(COMPLEX *),"fbÖartitionÖointers");

176 
i
=0;i<
tmp
->
numch™s
;i++) {

177 
tmp
->
fûãr_∑πôi⁄
[
i
]

178 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

179 
tmp
->
fûãr_dñaylöe
[
i
]

180 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

182 
i
=0;i<
numch™s
;i++) {

183 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

184 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

189 
i
=0; i<
tmp
->
numch™s
; i++)

190 
j
=0; j<
tmp
->
dïth
; j++)

191 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
numch™s
));

194 
tmp
->
sigö
 = sigin;

195 
tmp
->
sigout
 = sigout;

196 
tmp
->
f·buf„r
 = (
COMPLEX
 *)
	`ß„Æloc
—mp->
numch™s
,(COMPLEX),"fft input buffer");

198 
tmp
->
pch™
 = 
	`f·wf_∂™_d·_1d
—mp->
numch™s
,

199 (
f·wf_com∂ex
 *)
tmp
->
f·buf„r
,

200 (
f·wf_com∂ex
 *)
tmp
->
sigout
,

201 
FFTW_FORWARD
,

202 
pbôs
);

204  
tmp
;

205 
	}
}

207 
	$dñFIRPB
(
FIRPFB
 
p
)

209 
i
;

210 
	`f·wf_de°roy_∂™
(
p
->
pch™
);

211 
	`ß„‰ì
((*)
p
->
f·buf„r
);

212 
i
=0;i<
p
->
numch™s
;i++)

213 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
[
i
]),

214 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
[
i
]);

215 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
);

216 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
);

217 
	`ß„‰ì
((*)
p
);

218 
	}
}

220 
	$doFIRPFBCh™√lizî
(
FIRPFB
 
p
)

222 
i
,
j
;

223 
k
 = 
p
->
numch™s
 - 1;

224 
i
=0;i<
p
->
numch™s
;i++) {

225 
p
->
fûãr_dñaylöe
[
i
][0] =Ö->
sigö
[
k
-i];

227 
p
->
f·buf„r
[
i
]
	`Cs˛
’->
sigö
[i],p->
fûãr_∑πôi⁄
[i][0]);

229 
j
=1;j<
p
->
dïth
;j++)

230 
p
->
f·buf„r
[
i
] = 
	`Cadd
(
	`Cs˛
’->
fûãr_dñaylöe
[i][
j
],p->
fûãr_∑πôi⁄
[i][j]),p->fftbuffer[i]);

232 
j
=
p
->
dïth
-1;j>0;j--)

233 
p
->
fûãr_dñaylöe
[
i
][
j
] =Ö->filter_delayline[i][j-1];

235 
	`f·wf_execuã
(
p
->
pch™
);

236 
	}
}

238 
	$doFIRPFBUpßm∂î
(
FIRUpßm∂î
 
p
)

240 
i
,
j
;

242 
i
=0;i<
p
->
upßm∂e
;i++) {

243 
p
->
fûãr_dñaylöe
[
i
][0] = 
	`Cmul
’->
sigö
[i],p->
rŸ©‹
[i]);

244 
p
->
sigout
[
i
]=
cxzîo
;

246 
j
=0;j<
p
->
dïth
;j++)

247 
p
->
sigout
[
i
] = 
	`Cadd
(
	`Cs˛
’->
fûãr_dñaylöe
[i][
j
],p->
fûãr_∑πôi⁄
[i][j]),p->sigout[i]);

249 
j
=
p
->
dïth
-1;j>0;j--)

250 
p
->
fûãr_dñaylöe
[
i
][
j
] =Ö->filter_delayline[i][j-1];

253 
	}
}

255 
	$doFIRPFBdownßm∂î
(
FIRDownßm∂î
 
p
)

257 
i
,
j
;

258 
COMPLEX
 
accum
 = 
cxzîo
;

259 
k
 = 
p
->
downßm∂e
 - 1;

261 *
p
->
sigout
=
cxzîo
;

263 
i
=0;i<
p
->
downßm∂e
;i++) {

264 
p
->
fûãr_dñaylöe
[
i
][0] =Ö->
sigö
[
k
-i];

266 
j
=0;j<
p
->
dïth
;j++)

267 
accum
 = 
	`Cadd
(
	`Cs˛
(
p
->
fûãr_dñaylöe
[
i
][
j
],p->
fûãr_∑πôi⁄
[i][j]),accum);

268 *
p
->
sigout
 = 
	`Cadd
(
	`Cmul
(
accum
,p->
rŸ©‹
[
i
]),*p->sigout);

271 
j
=
p
->
dïth
-1;j>0;j--)

272 
p
->
fûãr_dñaylöe
[
i
][
j
] =Ö->filter_delayline[i][j-1];

275 
	}
}

277 
	$dñFIRDownßm∂î
(
FIRDownßm∂î
 
p
)

279 
i
;

281 
i
=0;i<
p
->
downßm∂e
;i++){

282 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
[
i
]);

283 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
[
i
]);

285 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
);

286 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
);

287 
	`ß„‰ì
((*)
p
);

288 
	}
}

290 
	$dñFIRUpßm∂e
(
FIRUpßm∂î
 
p
)

292 
i
;

294 
i
=0;i<
p
->
upßm∂e
;i++){

295 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
[
i
]);

296 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
[
i
]);

298 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
);

299 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
);

300 
	`ß„‰ì
((*)
p
);

301 
	}
}

	@filterbank.h

38 #i‚de‡
_FILTERBANK_H


39 
	#_FILTERBANK_H


	)

40 
	~<fûãr.h
>

42 
	s_fúpfb
 {

43 
COMPLEX
 *
	msigö
;

44 
COMPLEX
 *
	msigout
;

45 
COMPLEX
 *
	mf·buf„r
;

46 
REAL
 **
	mfûãr_∑πôi⁄
;

47 
COMPLEX
 **
	mfûãr_dñaylöe
;

48 
	mnumch™s
;

49 
	mdïth
;

50 
f·wf_∂™
 
	mpch™
;

51 } 
	tfúpfb
,*
	tFIRPFB
;

53 
	s_fúdownßm∂î
 {

54 
COMPLEX
 *
	msigö
;

55 
COMPLEX
 *
	msigout
;

56 
REAL
 **
	mfûãr_∑πôi⁄
;

57 
COMPLEX
 **
	mfûãr_dñaylöe
;

58 
	mdownßm∂e
;

59 
	mdïth
;

60 
COMPLEX
 *
	mrŸ©‹
;

61 } 
	tfúdownßm∂î
, *
	tFIRDownßm∂î
;

63 
	s_fúupßm∂î
 {

64 
COMPLEX
 *
	msigö
;

65 
COMPLEX
 *
	msigout
;

66 
REAL
 **
	mfûãr_∑πôi⁄
;

67 
COMPLEX
 **
	mfûãr_dñaylöe
;

68 
	mupßm∂e
;

69 
	mdïth
;

70 
COMPLEX
 *
	mrŸ©‹
;

71 } 
	tfúupßm∂î
, *
	tFIRUpßm∂î
;

73 
FIRDownßm∂î


74 
√wFIRDownßm∂î
(
RólFIR
 
fûãr
,
downßm∂e
, 
ch™√l
, 
COMPLEX
 *
ö
, COMPLEX *
out
);

76 
FIRUpßm∂î


77 
√wFIRUpßm∂î
(
RólFIR
 
fûãr
,
upßm∂e
, 
ch™√l
, 
COMPLEX
 *
ö
, COMPLEX *
out
);

79 
FIRPFB


80 
√wFIRPFBCh™√lizî
(
RólFIR
 
fûãr
,
numch™s
, 
COMPLEX
 *
ö
, COMPLEX *
out
, 
pbôs
);

82 
FIRPFB


83 
√wFIRHBPFBCh™√lizî
(
RólFIR
 
fûãr
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
);

85 
dñFIRPFBCh™√lizî
(
FIRPFB
 
p
);

86 
dñFIRDownßm∂î
(
FIRDownßm∂î
 
p
);

87 
doFIRPFBCh™√lizî
(
FIRPFB
 
p
);

88 
doFIRDownßm∂î
(
FIRDownßm∂î
 
p
);

89 
doFIRUpßm∂î
(
FIRUpßm∂î
 
p
);

	@fm_demod.c

34 
	~<fm_demod.h
>

40 
PRIVATE
 

41 
	$öô_∂l
 (
FMD
 
fm
,

42 
REAL
 
ßm¥©e
, REAL 
‰eq
, REAL 
lo‰eq
, REAL 
hi‰eq
, REAL 
b™dwidth
)

44 
REAL
 
Ác
 = (REALË(
TWOPI
 / 
ßm¥©e
);

46 
fm
->
∂l
.
‰eq
.
f
 = fªq * 
Ác
;

47 
fm
->
∂l
.
‰eq
.
l
 = 
lo‰eq
 * 
Ác
;

48 
fm
->
∂l
.
‰eq
.
h
 = 
hi‰eq
 * 
Ác
;

49 
fm
->
∂l
.
phs
 = 0.0;

50 
fm
->
∂l
.
dñay
 = 
cxJ
;

52 
fm
->
∂l
.
iú
.
Æpha
 = 
b™dwidth
 * 
Ác
;

53 
fm
->
∂l
.
Æpha
 = fm->∂l.
iú
.alpha * 0.3f;

54 
fm
->
∂l
.
bëa
 = fm->∂l.
Æpha
 * fm->pll.alpha * 0.25f;

55 
	}
}

57 
PRIVATE
 

58 
	$∂l
 (
FMD
 
fm
, 
COMPLEX
 
sig
)

60 
COMPLEX
 
z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
fm
->
∂l
.
phs
), (
IMAG
Ë
	`sö
 (fm->pll.phs));

61 
REAL
 
diff
;

63 
fm
->
∂l
.
dñay
.
ª
 = 
z
.ª * 
sig
.ª + z.
im
 * sig.im;

64 
fm
->
∂l
.
dñay
.
im
 = -
z
.im * 
sig
.
ª
 + z.re * sig.im;

65 
diff
 = 
	`Á°_©™2
 (
fm
->
∂l
.
dñay
.
im
, fm->∂l.dñay.
ª
);

67 
fm
->
∂l
.
‰eq
.
f
 +fm->∂l.
bëa
 * 
diff
;

69 i‡(
fm
->
∂l
.
‰eq
.
f
 < fm->∂l.‰eq.
l
)

70 
fm
->
∂l
.
‰eq
.
f
 = fm->∂l.‰eq.
l
;

71 i‡(
fm
->
∂l
.
‰eq
.
f
 > fm->∂l.‰eq.
h
)

72 
fm
->
∂l
.
‰eq
.
f
 = fm->∂l.‰eq.
h
;

74 
fm
->
∂l
.
phs
 +fm->∂l.
‰eq
.
f
 + fm->∂l.
Æpha
 * 
diff
;

76 
fm
->
∂l
.
phs
 >
TWOPI
)

77 
fm
->
∂l
.
phs
 -(
REAL
Ë
TWOPI
;

78 
fm
->
∂l
.
phs
 < 0)

79 
fm
->
∂l
.
phs
 +(
REAL
Ë
TWOPI
;

80 
	}
}

87 
	$FMDemod
 (
FMD
 
fm
)

89 
i
;

90 
i
 = 0; i < 
	`CXBsize
 (
fm
->
ibuf
); i++)

92 
	`∂l
 (
fm
, 
	`CXBd©a
 (fm->
ibuf
, 
i
));

93 
fm
->
afc
 = (
REAL
Ë(0.9999 * fm->af¯+ 0.0001 * fm->
∂l
.
‰eq
.
f
);

94 
	`CXBªÆ
 (
fm
->
obuf
, 
i
) =

95 
	`CXBimag
 (
fm
->
obuf
, 
i
Ë(fm->
∂l
.
‰eq
.
f
 - fm->
afc
Ë* fm->
cvt
;

97 
	}
}

99 
FMD


100 
	$√wFMD
 (
REAL
 
ßm¥©e
,

101 
REAL
 
f_öôül
,

102 
REAL
 
f_lobound
,

103 
REAL
 
f_hibound
,

104 
REAL
 
f_b™dwid
, 
size
, 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, *
èg
)

106 
FMD
 
fm
 = (FMDË
	`ß„Æloc
 (1,  (
FMDDesc
), 
èg
);

108 
fm
->
size
 = size;

109 
fm
->
ibuf
 = 
	`√wCXB
 (
size
, 
ivec
, 
èg
);

110 
fm
->
obuf
 = 
	`√wCXB
 (
size
, 
ovec
, 
èg
);

112 
	`öô_∂l
 (
fm
, 
ßm¥©e
, 
f_öôül
, 
f_lobound
, 
f_hibound
, 
f_b™dwid
);

114 
fm
->
lock
 = 0.5;

115 
fm
->
afc
 = 0.0;

116 
fm
->
cvt
 = (
REAL
Ë(0.45 * 
ßm¥©e
 / (
M_PI
 * 
f_b™dwid
));

118  
fm
;

119 
	}
}

122 
	$dñFMD
 (
FMD
 
fm
)

124 i‡(
fm
)

126 
	`dñCXB
 (
fm
->
ibuf
);

127 
	`dñCXB
 (
fm
->
obuf
);

128 
	`ß„‰ì
 ((*Ë
fm
);

130 
	}
}

	@fm_demod.h

3 #i‚de‡
_fm_demod_h


4 
	#_fm_demod_h


	)

6 
	~<‰omsys.h
>

7 
	~<b™Æ.h
>

8 
	~<•lôfõlds.h
>

9 
	~<d©©y≥s.h
>

10 
	~<bufvec.h
>

11 
	~<cx›s.h
>

12 
	~<Á°rig.h
>

13 
	~<upd©e.h
>

14 
	~<lmadf.h
>

15 
	~<f·w3.h
>

16 
	~<f·w3_fix.h
>

17 
	~<ovsv.h
>

18 
	~<fûãr.h
>

19 
	~<oscûœt‹.h
>

20 
	~<fût2p2z.h
>

22 
	s_fm_demod


24 
	msize
;

25 
CXB
 
	mibuf
, 
	mobuf
, 
	msquñch_obuf
;

26 
REAL
 
	mdevüti⁄
;

27 
REAL
 
	mk_dìmphasis
;

28 
REAL
 
	mdìmphasis_out
;

29 
REAL
 
	msquñch_ívñ›e
;

30 
REAL
 
	msquñch_fûãr
;

31 
REAL
 
	msquñch_thªshﬁd_wók
;

32 
REAL
 
	msquñch_thªshﬁd_°r⁄g
;

33 
REAL
 
	msquñch_thªshﬁd_unmuã
;

34 
	msquñch_wók_timî
;

35 
	msquñch_°r⁄g_timî
;

36 
REAL
 
	msquñch_k
;

37 
BOOLEAN
 
	msquñch_muãd
;

38 
	msquñch_°r⁄g_timî_h™g
;

39 
	msquñch_wók_timî_h™g
;

40 
IIR_LPF_2P
 
	möput_LPF1
;

41 
IIR_LPF_2P
 
	möput_LPF2
;

42 
IIR_HPF_2P
 
	möput_HPF1
;

43 
IIR_HPF_2P
 
	möput_HPF2
;

44 
IIR_HPF_2P
 
	msquñch_HPF
;

45 
IIR_1P1Z
 
	mdemod_comp_fûãr
;

49 
REAL
 
	mÆpha
, 
	mbëa
;

52 
REAL
 
	mf
, 
	ml
, 
	mh
;

53 } 
	m‰eq
;

54 
REAL
 
	mphs
;

57 
REAL
 
	mÆpha
;

58 } 
	miú
;

59 
COMPLEX
 
	mdñay
;

60 } 
	m∂l
;

62 
REAL
 
	mlock
, 
	mafc
, 
	mcvt
;

63 } 
	tFMDDesc
, *
	tFMD
;

65 
FMDemod
 (
FMD
 
fm
);

66 
FMD
 
√wFMD
 (
REAL
 
ßm¥©e
,

67 
REAL
 
f_öôül
,

68 
REAL
 
f_lobound
,

69 
REAL
 
f_hibound
,

70 
REAL
 
f_b™dwid
,

71 
size
, 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, *
èg
);

72 
dñFMD
 (
FMD
 
fm
);

74 #i‚de‡
TWOPI


75 
	#TWOPI
 (2.0*
M_PI
)

	)

	@fromsys.h

34 #i‚de‡
_‰omsys_h


35 
	#_‰omsys_h


	)

37 
	~<sys/ty≥s.h
>

38 
	~<sys/°©.h
>

39 
	~<time.h
>

40 
	~<f˙é.h
>

41 
	~<°dlib.h
>

44 
	~<°dio.h
>

45 
	~<˘y≥.h
>

46 
	~<°rög.h
>

47 
	~<m©h.h
>

48 #i‚de‡
M_PI


49 
	#M_PI
 3.14159265358928

	)

51 
	~<as£π.h
>

54 
	#DâSP_EXP


	)

55 
	#DâSP_IMP


	)

56 #i‚de‡
__GNUC__


57 
	#EPOCHFILETIME
 (116444736000000000
i64
)

	)

59 
	#EPOCHFILETIME
 (116444736000000000LL)

	)

62 #i‚de‡
MAXPATHLEN


63 
	#MAXPATHLEN
 (2048)

	)

66 #ifde‡
DONT_INCLUDE


67 
__ölöe
 

68 
	$gëtimeofday
 (
timevÆ
 *
tv
, 
timez⁄e
 *
tz
)

70 
FILETIME
 
·
;

71 
LARGE_INTEGER
 
li
;

72 
__öt64
 
t
;

73 
tzÊag
;

74 
timez⁄eGíîÆOff£t
;

75 
d°Hours
;

77 i‡(
tv
)

79 
	`GëSy°emTimeAsFûeTime
 (&
·
);

80 
li
.
LowP¨t
 = 
·
.
dwLowD©eTime
;

81 
li
.
HighP¨t
 = 
·
.
dwHighD©eTime
;

82 
t
 = 
li
.
QuadP¨t
;

83 
t
 -
EPOCHFILETIME
;

84 
t
 /= 10;

85 
tv
->
tv_£c
 = (Ë(
t
 / 1000000);

86 
tv
->
tv_u£c
 = (Ë(
t
 % 1000000);

89 i‡(
tz
)

91 i‡(!
tzÊag
)

93 
	`_tz£t
 ();

94 
tzÊag
++;

96 
tz
->
tz_möuãswe°
 = 
_timez⁄e
 / 60;

97 
tz
->
tz_d°time
 = 
_daylight
;

101 
	}
}

	@graphiceq.c

37 
	~<gøphi˚q.h
>

40 
REAL
 
	gEQ_Num
[3];

41 
REAL
 
	gEQ_Dí
[3];

43 
REAL
 
	gEQ_Num_48000
[] = {0.99220706371f, -1.98392450292f, 0.99220706371f};

44 
REAL
 
	gEQ_Dí_48000
[] = {1.98392450292f, -0.98441412742f};

45 
REAL
 
	gEQ_Num_96000
[] = {0.99608835009f, -1.99205381333f, 0.99608835009f};

46 
REAL
 
	gEQ_Dí_96000
[] = {1.99205381333f, -0.99217670018f};

47 
REAL
 
	gEQ_Num_192000
[] = {0.99804034984f, -1.99604991764f, 0.99804034984f};

48 
REAL
 
	gEQ_Dí_192000
[] = {1.99604991764f, -0.99608069967f};

50 
EQ


51 
	$√w_EQ
 (
CXB
 
d
, 
REAL
 
ßm∂î©e
, 
pbôs
) {

52 
Com∂exFIR
 
BP
;

53 
EQ
 
a
 = (EQË
	`ß„Æloc
(1,  (
eq
), "newÉq state");

55 
BP
 = 
	`√wFIR_B™d∑ss_COMPLEX
(-6000.0, 6000.0, 
ßm∂î©e
, 257);

56 
a
->
p
 = 
	`√wFûtOvSv
(
BP
->
c€f
, 257, 
pbôs
);

57 
	`n‹mÆize_vec_COMPLEX
(
a
->
p
->
zfvec
,a->p->
f·Àn
,a->p->
sˇÀ
);

58 
a
->
ö
 = 
	`√wCXB
(256, 
	`FûtOvSv_„tchpoöt
◊->
p
), "EQ input CXB");

59 
a
->
out
 = 
	`√wCXB
(256, 
	`FûtOvSv_°‹ïoöt
◊->
p
), "EQ output CXB");

60 
a
->
d©a
 = 
d
;

61 
	`dñFIR_B™d∑ss_COMPLEX
(
BP
);

62 
	`mem£t
(
a
->
num
, 0, 9 *  (
COMPLEX
));

63 
	`mem£t
(
a
->
dí
, 0, 6 *  (
COMPLEX
));

64 
a
->
nŸchÊag
 = 
FALSE
;

65 i‡(
ßm∂î©e
 == 48000.0) {

66 
EQ_Num
[0]=
EQ_Num_48000
[0];

67 
EQ_Num
[1]=
EQ_Num_48000
[1];

68 
EQ_Num
[2]=
EQ_Num_48000
[2];

69 
EQ_Dí
[0]=
EQ_Dí_48000
[0];

70 
EQ_Dí
[1]=
EQ_Dí_48000
[1];

72 i‡(
ßm∂î©e
 == 96000.0) {

73 
EQ_Num
[0]=
EQ_Num_96000
[0];

74 
EQ_Num
[1]=
EQ_Num_96000
[1];

75 
EQ_Num
[2]=
EQ_Num_96000
[2];

76 
EQ_Dí
[0]=
EQ_Dí_96000
[0];

77 
EQ_Dí
[1]=
EQ_Dí_96000
[1];

79 i‡(
ßm∂î©e
 == 192000.0) {

80 
EQ_Num
[0]=
EQ_Num_192000
[0];

81 
EQ_Num
[1]=
EQ_Num_192000
[1];

82 
EQ_Num
[2]=
EQ_Num_192000
[2];

83 
EQ_Dí
[0]=
EQ_Dí_192000
[0];

84 
EQ_Dí
[1]=
EQ_Dí_192000
[1];

86  
a
;

87 
	}
}

90 
	$dñEQ
 (
EQ
 
a
) {

91 i‡(
a
) {

92 
	`dñCXB
(
a
->
ö
);

93 
	`dñCXB
(
a
->
out
);

94 
	`dñFûtOvSv
 (
a
->
p
);

95 
	`ß„‰ì
 ((*Ë
a
);

97 
	}
}

100 
	$gøphi˚q
 (
EQ
 
a
) {

101 
sigsize
 = 
	`CXBhave
 (
a
->
d©a
), 
sigidx
 = 0;

104 
	`mem˝y
(
	`CXBba£
(
a
->
ö
),

105 &
	`CXBd©a
(
a
->
d©a
, 
sigidx
),

106 256 *  (
COMPLEX
));

107 
	`fûãr_OvSv
(
a
->
p
);

108 
	`mem˝y
(&
	`CXBd©a
 (
a
->
d©a
, 
sigidx
),

109 
	`CXBba£
 (
a
->
out
),

110 256 *  (
COMPLEX
));

111 
sigidx
 += 256;

112 } 
sigidx
 < 
sigsize
);

113 i‡(
a
->
nŸchÊag
) {

114 
i
;

115 
i
 = 0; i < 
sigsize
; i++) {

116 
j
;

117 
j
 = 0; j < 3; j++) {

118 
COMPLEX
 
numfût
;

119 
k
 = 3 * 
j
,

120 
l
 = 2 * 
j
;

121 
a
->
num
[
k
] = 
	`CXBd©a
◊->
d©a
, 
i
);

122 
numfût
.
ª
 =

123 
a
->
num
[
k
].
ª
 * 
EQ_Num
[0] +

124 
a
->
num
[
k
 + 1].
ª
 * 
EQ_Num
[1] +

125 
a
->
num
[
k
 + 2].
ª
 * 
EQ_Num
[2];

126 
numfût
.
im
 =

127 
a
->
num
[
k
].
im
 * 
EQ_Num
[0] +

128 
a
->
num
[
k
 + 1].
im
 * 
EQ_Num
[1] +

129 
a
->
num
[
k
 + 2].
im
 * 
EQ_Num
[2];

130 
a
->
num
[
k
 + 2] =á->num[k + 1];

131 
a
->
num
[
k
 + 1] =á->num[k];

132 
	`CXBd©a
(
a
->
d©a
, 
i
) =

133 
	`Cm∂x
(
numfût
.
ª
 + 
a
->
dí
[
l
].ª * 
EQ_Dí
[0] +á->den[l + 1].re * EQ_Den[1],

134 
numfût
.
im
 + 
a
->
dí
[
l
].im * 
EQ_Dí
[0] +á->den[l + 1].im * EQ_Den[1]);

135 
a
->
dí
[
l
 + 1] =á->den[l];

136 
a
->
dí
[
l
] = 
	`CXBd©a
◊->
d©a
, 
i
);

140 
	}
}

	@graphiceq.h

55 #i‚de‡
_gøphi˚q_h


56 
	#_gøphi˚q_h


	)

58 
	~<d©©y≥s.h
>

59 
	~<bufvec.h
>

60 
	~<ovsv.h
>

61 
	~<fûãr.h
>

62 
	~<f·w3.h
>

63 
	~<f·w3_fix.h
>

65 
	s_eq
 {

66 
CXB
 
	md©a
;

67 
FûtOvSv
 
	mp
;

68 
CXB
 
	mö
, 
	mout
;

69 
COMPLEX
 
	mnum
[9], 
	mdí
[6];

70 
BOOLEAN
 
	mnŸchÊag
;

71 } 
	teq
, *
	tEQ
;

73 
EQ
 
√w_EQ
 (
CXB
 
d
, 
REAL
 
ßm∂î©e
, 
pbôs
);

74 
gøphi˚q
 (
EQ
 
a
);

	@hilbert.c

34 
	~<hûbît.h
>

38 
PRIVATE
 
REAL


39 
	gpﬁe
[12] = {

44 
Hûbît


45 
	$√wHûbît
(
CXB
 
ibuf
, CXB 
obuf
, 
REAL
 
øã
) {

46 
Hûbît
 
h
 = (HûbîtË
	`ß„Æloc
(1, (
HûbîtInfo
), "Hilbert Transformer");

47 
h
->
size
 = 
	`CXBsize
(
ibuf
);

48 
h
->
c
 = 
	`√wvec_REAL
(12, "Hilbert Transformer c vector");

49 
h
->
x1
 = 
	`√wvec_REAL
(12, "Hilbert Transformer x1 vector");

50 
h
->
y1
 = 
	`√wvec_REAL
(12, "Hilbert Transformer y1 vector");

52 
i
;

53 
i
 = 0; i < 12; i++) {

54 
REAL
 
u
 = (REAL)(
pﬁe
[
i
] * 
M_PI
 * 15.0 * 
øã
);

55 
h
->
c
[
i
] = (
REAL
)((
u
 - 1.0) / (u + 1.0));

56 
h
->
x1
[
i
] = h->
y1
[i] = 0.0;

59 
h
->
buf
.
i
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
ibuf
), "Hilbert Transformer input buffer");

60 
h
->
buf
.
o
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
obuf
), "Hilbert Transformer output buffer");

61  
h
;

62 
	}
}

64 
Hûsim


65 
	$√wHûbîtsim
(
CXB
 
ibuf
, CXB 
obuf
)

67 
Hûsim
 
h
;

68 
h
 = (
Hûsim
Ë
	`ß„Æloc
(1, (
HûsimInfo
), "Hilbert Transformer");

69 
h
->
size
 = 
	`CXBsize
(
ibuf
);

70 
h
->
buf
.
i
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
ibuf
), "Hilbert Transformer input buffer");

71 
h
->
buf
.
o
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
obuf
), "Hilbert Transformer output buffer");

72 
	`mem£t
(
h
->
d
,0,(
REAL
)*6);

73 
	`mem£t
(
h
->
y
,0,(
REAL
)*6);

74 
	`mem£t
(
h
->
x
,0,(
REAL
)*4);

75 
h
->
övît
 = 
TRUE
;

76  
h
;

77 
	}
}

79 
	$dñHûbît
(
Hûbît
 
h
) {

80 i‡(
h
) {

81 
	`dñvec_REAL
(
h
->
c
);

82 
	`dñvec_REAL
(
h
->
x1
);

83 
	`dñvec_REAL
(
h
->
y1
);

84 
	`dñCXB
(
h
->
buf
.
i
);

85 
	`dñCXB
(
h
->
buf
.
o
);

86 
	`ß„‰ì
((*Ë
h
);

88 
	}
}

90 
	$dñHûsim
(
Hûsim
 
h
)

92 i‡(
h
) {

93 
	`dñCXB
(
h
->
buf
.
i
);

94 
	`dñCXB
(
h
->
buf
.
o
);

95 
	`ß„‰ì
((*)
h
);

97 
	}
}

100 
	$hûbît_å™sf‹m
(
Hûbît
 
h
) {

101 
REAL
 
xn1
, 
xn2
, 
yn1
, 
yn2
;

102 
i
;

104 
i
 = 0; i < 
h
->
size
; i++) {

105 
j
;

107 
xn1
 = 
xn2
 = 
	`CXBªÆ
(
h
->
buf
.
i
, i);

109 
j
 = 0; j < 6; j++) {

110 
yn1
 = 
h
->
c
[
j
] * (
xn1
 - h->
y1
[j]Ë+ h->
x1
[j];

111 
h
->
x1
[
j
] = 
xn1
;

112 
h
->
y1
[
j
] = 
yn1
;

113 
xn1
 = 
yn1
;

116 
j
 = 6; j < 12; j++) {

117 
yn2
 = 
h
->
c
[
j
] * (
xn2
 - h->
y1
[j]Ë+ h->
x1
[j];

118 
h
->
x1
[
j
] = 
xn2
;

119 
h
->
y1
[
j
] = 
yn2
;

120 
xn2
 = 
yn2
;

123 
	`CXBd©a
(
h
->
buf
.
o
, 
i
Ë
	`Cm∂x
(
yn2
, 
yn1
);

125 
	}
}

128 
	$hûsim_å™sf‹m
(
Hûsim
 
h
) {

129 
REAL
 *
x
 = 
h
->x,

130 *
y
 = 
h
->y,

131 *
d
 = 
h
->d;

132 
i
;

134 
i
 = 0; i < 
h
->
size
; i++)

136 
REAL
 
xö
 = 
	`CXBªÆ
(
h
->
buf
.
i
, i);

138 
x
[0] = 
d
[1] - 
xö
;

139 
x
[1] = 
d
[0] - x[0] * 0.00196f;

140 
x
[2] = 
d
[3] - x[1];

141 
x
[3] = 
d
[1] + x[2] * 0.737f;

143 
d
[1] = 
x
[1];

144 
d
[3] = 
x
[3];

146 
y
[0] = 
d
[2] - 
xö
;

147 
y
[1] = 
d
[0] + y[0] * 0.924f;

148 
y
[2] = 
d
[4] - y[1];

149 
y
[3] = 
d
[2] + y[2] * 0.439f;

150 
y
[4] = 
d
[5] - y[3];

151 
y
[5] = 
d
[4] - y[4] * 0.586f;

153 
d
[2] = 
y
[1];

154 
d
[4] = 
y
[3];

155 
d
[5] = 
y
[5];

157 
d
[0] = 
xö
;

159 
	`CXBd©a
(
h
->
buf
.
o
, 
i
Ë
	`Cm∂x
(
x
[3], 
y
[5]);

161 
	}
}

	@hilbert.h

34 #i‚de‡
_hûbît_h


35 
	#_hûbît_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<cx›s.h
>

44 
	s_hûbît
 {

45 
	msize
;

46 
REAL
 *
	mc
, *
	mx1
, *
	my1
;

48 
CXB
 
	mi
, 
	mo
;

49 } 
	mbuf
;

50 
BOOLEAN
 
	mövît
;

51 } 
	tHûbîtInfo
, *
	tHûbît
;

54 
	s_hûsim
 {

55 
	msize
;

57 
CXB
 
	mi
, 
	mo
;

58 } 
	mbuf
;

59 
REAL
 
	mx
[4], 
	my
[6], 
	md
[6];

60 
BOOLEAN
 
	mövît
;

61 } 
	tHûsimInfo
, *
	tHûsim
;

63 
Hûbît
 
√wHûbît
(
CXB
 
ibuf
, CXB 
obuf
, 
REAL
 
øã
);

64 
Hûsim
 
√wHûbîtsim
(
CXB
 
ibuf
, CXB 
obuf
);

65 
dñHûbît
(
Hûbît
 
h
);

66 
dñHûsim
(
Hûsim
 
h
);

67 
hûbît_å™sf‹m
(
Hûbît
 
h
);

71 
hûsim_å™sf‹m
(
Hûsim
 
h
);

	@iambic-keyer-for-SR.c

47 
	~<löux/πc.h
>

48 
	~<‰omsys.h
>

49 
	~<b™Æ.h
>

50 
	~<•lôfõlds.h
>

51 
	~<d©©y≥s.h
>

52 
	~<bufvec.h
>

53 
	~<cx›s.h
>

54 
	~<oscûœt‹.h
>

55 
	~<cwt⁄es.h
>

57 
	~<sys/ty≥s.h
>

58 
	~<sys/∑øm.h
>

59 
	~<sys/°©.h
>

60 
	~<sys/time.h
>

61 
	~<sys/waô.h
>

62 
	~<sys/mm™.h
>

63 
	~<sys/io˘l.h
>

64 
	~<sys/sockë.h
>

65 
	~<√tdb.h
>

66 
	~<√töë/ö.h
>

67 
	~<¨∑/öë.h
>

69 
	~<time.h
>

70 
	~<f˙é.h
>

71 
	~<uni°d.h
>

72 
	~<°dlib.h
>

73 
	~<°dio.h
>

74 
	~<˘y≥.h
>

75 
	~<°rög.h
>

76 
	~<°d¨g.h
>

80 
	#L_KEY_DOWN
 (01 << 00)

	)

81 
	#R_KEY_DOWN
 (01 << 01)

	)

83 
	#NO_TIME_LEFTS_SCHED
 (-2)

	)

84 
	#NO_ELEMENT
 (-1)

	)

85 
	#DIT
 (0)

	)

86 
	#DAH
 (1)

	)

87 
	#MODE_A
 (0)

	)

88 
	#MODE_B
 (1)

	)

89 
	#NO_PADDLE_SQUEEZE
 (0)

	)

90 
	#PADDLES_SQUEEZED
 (1)

	)

91 
	#PADDLES_RELEASED
 (2)

	)

92 
	#NO_DELAY
 (0)

	)

93 
	#CHAR_SPACING_DELAY
 (1)

	)

94 
	#WORD_SPACING_DELAY
 (2)

	)

95 
	#DEBOUNCE_BUF_MAX_SIZE
 (10)

	)

97 
	#USBSOFTROCK_CLIENT_COMMAND
 19004

	)

98 
	#DTTSP_PORT_CLIENT_BUFSIZE
 65536

	)

99 
	#key_FIFO_SIZE
 5

	)

101 
	#READ_KEY_INTERVAL
 2000000

	)

103 
	#PTT_HANG_TIME_POLLING_INTERVAL
 100000000

	)

105 
	#HANG_TIME_THRESHOLD
 10

	)

109 
	s_keyî_°©e
 {

111 
BOOLEAN
 
	mümbic
,

112 
	mmdlmdB
,

113 
	mªvpdl
;

115 
BOOLEAN
 
	mdô
, 
	mdah
;

116 } 
	mmem‹y
;

118 
BOOLEAN
 
	mkh¨
, 
	mw‹d
;

119 } 
	mauto•a˚
;

120 } 
	mÊag
;

121 
	mdeboun˚
,

122 
	mmode
,

123 
	mweight
;

124 
	mwpm
;

125 } 
	tKeyîSèãInfo
, *
	tKeyîSèã
;

127 
KeyîSèã
 
√wKeyîSèã
();

128 
dñKeyîSèã
(
KeyîSèã
 
ks
);

130 
sockaddr_ö
 
	gSa
;

131 
sockaddr_ö
 *
	gpSa
;

132 
addröfo
 *
	gaddªss
;

133 
	gp‹t
;

134 
	g˛í
, 
	gÊags
, 
	gsock
;

135 
	gbuff
 [
DTTSP_PORT_CLIENT_BUFSIZE
];

136 
	gssize
, 
	gu£d
;

137 
	g∑øm
;

139 
	gPTT_°©e
 = 0;

140 
	gh™g_time
 = 0;

145 
	s_keyî_logic
 {

147 
BOOLEAN
 
	möô
;

149 
BOOLEAN
 
	mdô
, 
	mdah
;

150 } 
	m¥ev
;

151 } 
	mÊag
;

153 
BOOLEAN
 
	mÆån
,

154 
	mpsqam
;

155 
	mcuº
,

156 
	mümb
,

157 
	mœ°
;

158 } 
	mñemít
;

160 
	mbìp
, 
	mdœy
, 
	mñem
, 
	mmidl
;

161 } 
	mtime_À·
;

162 
	mdœy_ty≥
;

163 } 
	tKeyîLogicInfo
, *
	tKeyîLogic
;

165 
KeyîLogic
 
√wKeyîLogic
();

166 
dñKeyîLogic
(
KeyîLogic
 
kl
);

168 
BOOLEAN
 
klogic
(
KeyîLogic
 
kl
,

169 
BOOLEAN
 
dô
,

170 
BOOLEAN
 
dah
,

171 
wpm
,

172 
ümbicmode
,

173 
BOOLEAN
 
√ed_midñemodeB
,

174 
BOOLEAN
 
w™t_dô_mem
,

175 
BOOLEAN
 
w™t_dah_mem
,

176 
BOOLEAN
 
autoch¨•acög
,

177 
BOOLEAN
 
autow‹d•acög
,

178 
weight
,

179 
tickÀn
);

185 
	#SAMP_RATE
 (48000)

	)

188 
	#RTC_RATE
 (128)

190 

	)

192 
	#TONE_SIZE
 (
SAMP_RATE
 / 
RTC_RATE
)

	)

195 
	#RING_SIZE
 (01 << 022)

	)

197 
KeyîSèã
 
	gks
;

198 
KeyîLogic
 
	gkl
;

200 
±hªad_t
 
	gpﬁÀr
, 
	g∂ay
, 
	gkey
, 
	gupd©e
, 
	gPTT_timî
;

201 
£m_t
 
	gpﬁl_a˘i⁄
, 
	g˛ock_fúed
, 
	gkeyî_°¨ãd
, 
	gupd©e_ok
;

202 
	gpﬁl_°©us
;

204 
	gfd£r
, 
	gfdπc
;

206 
jack_˛õ¡_t
 *
	g˛õ¡
;

207 
jack_p‹t_t
 *
	gÕ‹t
, *
	gΩ‹t
;

208 
jack_rögbuf„r_t
 *
	gÃög
, *
	gºög
;

209 
jack_n‰ames_t
 
	gsize
;

211 
CWT⁄eGí
 
	ggí
;

212 
BOOLEAN
 
	g∂ayög
 = 
FALSE
, 
	gümbic
 = FALSE;

213 
	gwpm
 = 18.0, 
	g‰eq
 = 700.0, 
	gømp
 = 5.0, 
	ggaö
 = -3.0;

218 
	$›í_usbso·rock
(){

220 
p‹t
 = 
USBSOFTROCK_CLIENT_COMMAND
;

221 
pSa
 = &
Sa
;

222 
addªss
 = 
NULL
;

224 i‡((
sock
 = 
	`sockë
(
PF_INET
, 
SOCK_DGRAM
, 
IPPROTO_UDP
)) < 0) {

225 
	`Ârötf
(
°dîr
, "Couldn't create dttsp_port_client socket\n");

226 
	`exô
(1);

228 
	`Ârötf
–
°dîr
, "DâSPÖ‹à%d\n", 
p‹t
);

231 
ssize
 = 
DTTSP_PORT_CLIENT_BUFSIZE
;

232 
	`mem£t
(
buff
, 0, 
ssize
);

233 
	}
}

236 
	$£nd_comm™d
 ( *
cmd°r
 )

238 
fd_£t
 
fds
;

239 
timevÆ
 
tv
;

241 i‡((!
pSa
Ë|| 
sock
 =-1 || !
cmd°r
)

247 
	`°r˝y
 (
buff
, 
cmd°r
);

248 
	`°rˇt
 (
buff
, "\n");

249 
u£d
 = 
	`°æí
 (
buff
);

252 i‡(
addªss
 =
NULL
) {

253 
˛í
 = (*
pSa
);

254 
	`mem£t
((*Ë
pSa
, 0, 
˛í
);

255 
pSa
->
sö_Ámûy
 = 
AF_INET
;

256 
pSa
->
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

257 
pSa
->
sö_p‹t
 = 
	`ht⁄s
((Ë
p‹t
);

258 i‡(
	`£ndto
(
sock
, 
buff
, 
u£d
, 
Êags
, (
sockaddr
 *Ë
pSa
, 
˛í
) != used) {

259 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿£ndto\n", 
__FUNCTION__
);

264 i‡(
	`£ndto
(
sock
, 
buff
, 
u£d
, 
Êags
, 
addªss
->
ai_addr
,áddªss->
ai_addæí
) != used) {

265 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿£ndto\n", 
__FUNCTION__
);

271 
	`FD_ZERO
(&
fds
);

272 
	`FD_SET
(
sock
, &
fds
);

273 
tv
.
tv_£c
 = 1;

274 
tv
.
tv_u£c
 = 0;

276 i‡(!
	`£À˘
(
sock
 + 1, &
fds
, 0, 0, &
tv
)) {

277 
	`Ârötf
 (
°dîr
, "%s:Éº‹ from sñe˘, dißblögÖ‹t\n", 
__FUNCTION__
);

278 
	`˛o£
 (
sock
);

279 
sock
 = -1;

280 
pSa
 = 
NULL
;

283 i‡(
addªss
 =
NULL
) {

284 i‡(
	`ªcv‰om
(
sock
, 
buff
, 
size
, 
Êags
, (
sockaddr
 *Ë
pSa
, (
sockÀn_t
 *)(&
˛í
)) <= 0) {

285 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿ªcv‰om\n", 
__FUNCTION__
);

289 i‡(
	`ªcv‰om
(
sock
, 
buff
, 
size
, 
Êags
, 
addªss
->
ai_addr
, &addªss->
ai_addæí
) <= 0) {

290 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿ªcv‰om\n", 
__FUNCTION__
);

295 i‡(
buff
[0] != 'o' || buff[1] != 'k')  -6;

296 if(
buff
[3] ='0'Ë
∑øm
 = 0;

297 i‡(
buff
[3] ='1'Ë
∑øm
 = 1;

298 i‡(
buff
[3] ='2'Ë
∑øm
 = 2;

299 i‡(
buff
[3] ='3'Ë
∑øm
 = 3;

300 
∑øm
 = 0;

303 
	}
}

305 
	$PTT_timî_thªad
(){

306 
time•ec
 
ªq
, 
ªm
;

307 
ªq
.
tv_£c
 = 0;

308 
ªq
.
tv_n£c
 = 
PTT_HANG_TIME_POLLING_INTERVAL
;

310 
	`«no¶ìp
(&
ªq
, &
ªm
);

311 i‡(
PTT_°©e
){

312 
h™g_time
++;

313 i‡(
h™g_time
 > 
HANG_TIME_THRESHOLD
){

314 
	`£nd_comm™d
("setÖtt off");

315 
PTT_°©e
 = 0;

316 
h™g_time
 = 0;

320 
	}
}

322 
	$ªad_keys
(){

323 
	`£nd_comm™d
("get keys");

324  
∑øm
;

325 
	}
}

342 
BOOLEAN


343 
	$ªad_°øight_key
(
KeyîSèã
 
ks
) {

344 
i
, 
j
, 
°©us
;

345 
BOOLEAN
 
key°©e
 = 0;

346 
deboun˚_buf_i
 = 0,

347 
deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
];

350 
	`£m_waô
(&
pﬁl_a˘i⁄
);

351 
°©us
 = 
pﬁl_°©us
;

352 
pﬁl_°©us
 = 0;

354 
deboun˚_buf
[
deboun˚_buf_i
] = 
°©us
 & (
L_KEY_DOWN
 | 
R_KEY_DOWN
);

355 
deboun˚_buf_i
++;

359 i‡(
deboun˚_buf_i
 >
ks
->
deboun˚
) {

360 
deboun˚_buf_i
 = 0;

362 
j
 = 0;

363 
i
 = 0; i < 
ks
->
deboun˚
; i++)

364 i‡(
deboun˚_buf
[
i
])

365 
j
++;

366 
key°©e
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

369  
key°©e
;

370 
	}
}

389 
BOOLEAN


390 
	$ªad_ümbic_key
(
KeyîSèã
 
ks
, 
KeyîLogic
 
kl
, 
tickÀn
) {

391 
i
, 
j
, 
°©us
;

392 
BOOLEAN
 
dah_deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
],

393 
dô_deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
];

394 
dah
 = 0, 
deboun˚_buf_i
 = 0, 
dô
 = 0;

397 
	`£m_waô
(&
pﬁl_a˘i⁄
);

398 
°©us
 = 
pﬁl_°©us
;

399 
pﬁl_°©us
 = 0;

401 i‡(
ks
->
Êag
.
ªvpdl
) {

402 
dô_deboun˚_buf
[
deboun˚_buf_i
] = 
°©us
 & 
L_KEY_DOWN
;

403 
dah_deboun˚_buf
[
deboun˚_buf_i
] = 
°©us
 & 
R_KEY_DOWN
;

405 
dô_deboun˚_buf
[
deboun˚_buf_i
] = 
°©us
 & 
R_KEY_DOWN
;

406 
dah_deboun˚_buf
[
deboun˚_buf_i
] = 
°©us
 & 
L_KEY_DOWN
;

408 
deboun˚_buf_i
++;

411 i‡(
deboun˚_buf_i
 >
ks
->
deboun˚
) {

413 
j
 = 0;

414 
i
 = 0; i < 
ks
->
deboun˚
; i++)

415 i‡(
dah_deboun˚_buf
[
i
]Ë
j
++;

416 
dah
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

418 
j
 = 0;

419 
i
 = 0; i < 
ks
->
deboun˚
; i++)

420 i‡(
dô_deboun˚_buf
[
i
]Ë
j
++;

421 
dô
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

423 
deboun˚_buf_i
 = 0;

426  
	`klogic
(
kl
,

427 
dô
,

428 
dah
,

429 
ks
->
wpm
,

430 
ks
->
mode
,

431 
ks
->
Êag
.
mdlmdB
,

432 
ks
->
Êag
.
mem‹y
.
dô
,

433 
ks
->
Êag
.
mem‹y
.
dah
,

434 
ks
->
Êag
.
auto•a˚
.
kh¨
,

435 
ks
->
Êag
.
auto•a˚
.
w‹d
,

436 
ks
->
weight
,

437 
tickÀn
);

438 
	}
}

460 
BOOLEAN


461 
	$klogic
(
KeyîLogic
 
kl
,

462 
BOOLEAN
 
dô
,

463 
BOOLEAN
 
dah
,

464 
wpm
,

465 
ümbicmode
,

466 
BOOLEAN
 
√ed_midñemodeB
,

467 
BOOLEAN
 
w™t_dô_mem
,

468 
BOOLEAN
 
w™t_dah_mem
,

469 
BOOLEAN
 
autoch¨•acög
,

470 
BOOLEAN
 
autow‹d•acög
,

471 
weight
,

472 
tickÀn
) {

474 
dôÀn
 = 1200 / 
wpm
;

475 
£t_which_ñe_time_À·
 = 
NO_TIME_LEFTS_SCHED
;

478 i‡(!
kl
->
Êag
.
öô
) {

479 
kl
->
Êag
.
¥ev
.
dô
 = dit;

480 
kl
->
Êag
.
¥ev
.
dah
 = dah;

481 
kl
->
ñemít
.
œ°
 = kl->ñemít.
cuº
 = 
NO_ELEMENT
;

482 
kl
->
ñemít
.
ümb
 = 
NO_PADDLE_SQUEEZE
;

483 
kl
->
ñemít
.
psqam
 = 0;

484 
kl
->
ñemít
.
Æån
 = 0;

485 
kl
->
time_À·
.
midl
 = kl->time_À·.
bìp
 = kl->time_À·.
ñem
 = 0;

486 
kl
->
time_À·
.
dœy
 = 0;

487 
kl
->
dœy_ty≥
 = 
NO_DELAY
;

488 
kl
->
Êag
.
öô
 = 1;

492 
kl
->
time_À·
.
dœy
 -kl->time_À·.dœy > 0 ? 
tickÀn
 : 0;

493 i‡(
kl
->
time_À·
.
dœy
 <= 0) {

499 i‡(
kl
->
time_À·
.
ñem
 <= 0 &&

500 
kl
->
dœy_ty≥
 =
CHAR_SPACING_DELAY
 &&

501 
autow‹d•acög
) {

502 
kl
->
time_À·
.
dœy
 = 
dôÀn
 * 4;

503 
kl
->
dœy_ty≥
 = 
WORD_SPACING_DELAY
;

505 
kl
->
dœy_ty≥
 = 
NO_DELAY
;

506 
kl
->
time_À·
.
midl
 -kl->time_À·.mid»> 0 ? 
tickÀn
 : 0;

507 
kl
->
time_À·
.
bìp
 -kl->time_À·.bì∞> 0 ? 
tickÀn
 : 0;

508 
kl
->
time_À·
.
ñem
 -kl->time_À·.ñem > 0 ? 
tickÀn
 : 0;

513 i‡(
dô
 && 
dah
) {

514 
kl
->
ñemít
.
ümb
 = 
PADDLES_SQUEEZED
;

516 i‡(
kl
->
time_À·
.
midl
 <= 0)

517 
kl
->
ñemít
.
psqam
 = 1;

518 } i‡(!
dô
 && !
dah
 && 
kl
->
ñemít
.
ümb
 =
PADDLES_SQUEEZED
)

520 
kl
->
ñemít
.
ümb
 = 
PADDLES_RELEASED
;

523 i‡(
kl
->
time_À·
.
ñem
 <0 && kl->
ñemít
.
cuº
 !
NO_ELEMENT
) {

524 
kl
->
ñemít
.
œ°
 = kl->ñemít.
cuº
;

527 i‡(((
dô
 && 
dah
) ||

528 (
kl
->
ñemít
.
Æån
 &&

529 
kl
->
ñemít
.
ümb
 !
PADDLES_RELEASED
) ||

530 (
kl
->
ñemít
.
ümb
 =
PADDLES_RELEASED
 &&

531 
ümbicmode
 =
MODE_B
 &&

532 (!
√ed_midñemodeB
 || 
kl
->
ñemít
.
psqam
)))) {

533 i‡(
kl
->
ñemít
.
œ°
 =
DAH
)

534 
£t_which_ñe_time_À·
 = 
kl
->
ñemít
.
cuº
 = 
DIT
;

536 
£t_which_ñe_time_À·
 = 
kl
->
ñemít
.
cuº
 = 
DAH
;

540 
kl
->
ñemít
.
cuº
 = 
NO_ELEMENT
;

542 i‡(
autoch¨•acög
 && !
dô
 && !
dah
) {

543 
kl
->
time_À·
.
dœy
 = 
dôÀn
 * 2;

544 
kl
->
dœy_ty≥
 = 
CHAR_SPACING_DELAY
;

548 
kl
->
ñemít
.
Æån
 = 0;

549 
kl
->
ñemít
.
ümb
 = 
NO_PADDLE_SQUEEZE
;

550 
kl
->
ñemít
.
psqam
 = 0;

554 i‡(
kl
->
ñemít
.
cuº
 =
NO_ELEMENT
) {

555 i‡(
dah
)

556 
£t_which_ñe_time_À·
 = 
kl
->
ñemít
.
cuº
 = 
DAH
;

557 i‡(
dô
)

558 
£t_which_ñe_time_À·
 = 
kl
->
ñemít
.
cuº
 = 
DIT
;

562 i‡(
kl
->
ñemít
.
cuº
 =
DIT
 &&

563 !
kl
->
Êag
.
¥ev
.
dah
 &&

564 
dah
 &&

565 
w™t_dah_mem
)

566 
kl
->
ñemít
.
Æån
 = 1;

569 i‡(
kl
->
ñemít
.
cuº
 =
DAH
 &&

570 !
kl
->
Êag
.
¥ev
.
dô
 &&

571 
dô
 &&

572 
w™t_dô_mem
)

573 
kl
->
ñemít
.
Æån
 = 1;

581 i‡(
kl
->
time_À·
.
dœy
 > 0 && !
dô
 && !
dah
 &&

582 ((
kl
->
ñemít
.
cuº
 =
DIT
 && !
w™t_dô_mem
) ||

583 (
kl
->
ñemít
.
cuº
 =
DAH
 && !
w™t_dah_mem
)))

584 
£t_which_ñe_time_À·
 = 
kl
->
ñemít
.
cuº
 = 
NO_ELEMENT
;

587 
£t_which_ñe_time_À·
) {

588 
NO_ELEMENT
:

589 
kl
->
time_À·
.
bìp
 = 0;

590 
kl
->
time_À·
.
midl
 = 0;

591 
kl
->
time_À·
.
ñem
 = 0;

594 
DIT
:

595 
kl
->
time_À·
.
bìp
 = (
dôÀn
 * (Ë
weight
) / 50;

596 
kl
->
time_À·
.
midl
 = kl->time_À·.
bìp
 / 2;

597 
kl
->
time_À·
.
ñem
 = 
dôÀn
 * 2;

600 
DAH
:

601 
kl
->
time_À·
.
bìp
 = (
dôÀn
 * (Ë
weight
) / 50 + ditlen * 2;

602 
kl
->
time_À·
.
midl
 = kl->time_À·.
bìp
 / 2;

603 
kl
->
time_À·
.
ñem
 = 
dôÀn
 * 4;

607 
kl
->
Êag
.
¥ev
.
dô
 = dit;

608 
kl
->
Êag
.
¥ev
.
dah
 = dah;

610  
kl
->
time_À·
.
bìp
 > 0 && kl->time_À·.
dœy
 <= 0;

611 
	}
}

618 
KeyîSèã


619 
	$√wKeyîSèã
() {

620  (
KeyîSèã
Ë
	`ß„Æloc
(1, (
KeyîSèãInfo
), "newKeyerState");

621 
	}
}

631 
	$dñKeyîSèã
(
KeyîSèã
 
ks
) {

632 
	`ß„‰ì
((*Ë
ks
);

633 
	}
}

640 
KeyîLogic


641 
	$√wKeyîLogic
() {

642  (
KeyîLogic
Ë
	`ß„Æloc
(1, (
KeyîLogicInfo
), "newKeyerLogic");

643 
	}
}

653 
	$dñKeyîLogic
(
KeyîLogic
 
kl
) {

654 
	`ß„‰ì
((*Ë
kl
);

655 
	}
}

668 
	$jack_rögbuf„r_˛ór
(
jack_rögbuf„r_t
 *
rög
, 
nbyãs
) {

669 
i
;

670 
zîo
 = 0;

671 
i
 = 0; i < 
nbyãs
; i++)

672 
	`jack_rögbuf„r_wrôe
(
rög
, &
zîo
, 1);

673 
	}
}

684 
	$jack_rögbuf„r_ª°¨t
(
jack_rögbuf„r_t
 *
rög
, 
nbyãs
) {

685 
	`jack_rögbuf„r_ª£t
(
rög
);

686 
	`jack_rögbuf„r_˛ór
(
rög
, 
nbyãs
);

687 
	}
}

700 
	$£nd_t⁄e
() {

701 i‡(
	`jack_rögbuf„r_wrôe_•a˚
(
Ãög
Ë< 
TONE_SIZE
 * ()) {

702 (Ë
	`wrôe
(2, "overrunÅone\n", 13);

703 
	`jack_rögbuf„r_ª°¨t
(
Ãög
, 
TONE_SIZE
 * ());

704 
	`jack_rögbuf„r_ª°¨t
(
ºög
, 
TONE_SIZE
 * ());

706 
i
;

707 
i
 = 0; i < 
gí
->
size
; i++) {

708 
l
 = 
	`CXBªÆ
(
gí
->
buf
, 
i
),

709 
r
 = 
	`CXBimag
(
gí
->
buf
, 
i
);

710 
	`jack_rögbuf„r_wrôe
(
Ãög
, (*Ë&
l
, ());

711 
	`jack_rögbuf„r_wrôe
(
ºög
, (*Ë&
r
, ());

714 
	}
}

725 
	$£nd_sûí˚
() {

726 i‡(
	`jack_rögbuf„r_wrôe_•a˚
(
Ãög
Ë< 
TONE_SIZE
 * ()) {

727 (Ë
	`wrôe
(2, "overrun zero\n", 13);

728 
	`jack_rögbuf„r_ª°¨t
(
Ãög
, 
TONE_SIZE
 * ());

729 
	`jack_rögbuf„r_ª°¨t
(
ºög
, 
TONE_SIZE
 * ());

731 
i
;

732 
i
 = 0; i < 
gí
->
size
; i++) {

733 
zîo
 = 0.0;

734 
	`jack_rögbuf„r_wrôe
(
Ãög
, (*Ë&
zîo
, ());

735 
	`jack_rögbuf„r_wrôe
(
ºög
, (*Ë&
zîo
, ());

738 
	}
}

753 
	$sound_thªad
() {

755 
	`£m_waô
(&
˛ock_fúed
);

757 i‡(
∂ayög
) {

761 
∂ayög
 = 
	`CWT⁄e
(
gí
);

762 
	`£nd_t⁄e
();

764 
	`£nd_sûí˚
();

766 
	`£m_po°
(&
upd©e_ok
);

770 
	`±hªad_exô
(0);

771 
	}
}

781 
	$pﬁl_thªad
() {

782 
time•ec
 
ªq
, 
ªm
;

783 
ªq
.
tv_£c
 = 0;

784 
ªq
.
tv_n£c
 = 
READ_KEY_INTERVAL
;

786 
°©us
;

787 
	`«no¶ìp
(&
ªq
, &
ªm
);

788 
°©us
 = 
	`ªad_keys
();

789 i‡(
°©us
 & 0x01)

790 
pﬁl_°©us
 |
L_KEY_DOWN
;

791 i‡(
°©us
 & 0x02)

792 
pﬁl_°©us
 |
R_KEY_DOWN
;

793 
	`£m_po°
(&
pﬁl_a˘i⁄
);

796 
	`±hªad_exô
(0);

797 
	}
}

815 
	$timed_dñay
() {

816 
dñ
;

817 
d©a
;

818 i‡(
	`ªad
(
fdπc
, &
d©a
, ()) == -1) {

819 
	`≥º‹
("read");

820 
	`exô
(1);

822 
dñ
 = (
d©a
 >> 010Ë* 1000 / (Ë
RTC_RATE
;

823  
dñ
;

824 
	}
}

837 
BOOLEAN


838 
	$ªad_key
(
dñ
) {

839 i‡(
ümbic
)

840  
	`ªad_ümbic_key
(
ks
, 
kl
, 
dñ
);

842  
	`ªad_°øight_key
(
ks
);

843 
	}
}

857 
	$key_thªad
() {

858 
BOOLEAN
 
key_FIFO
[
key_FIFO_SIZE
];

860 
BOOLEAN
 
keydown
;

862 
i
;

864 
i
 = 0; i < 
key_FIFO_SIZE
; i++Ë
key_FIFO
[i] = 
FALSE
;

865 
i
 = 0;

867 
	`£m_waô
(&
keyî_°¨ãd
);

870 
dñ
 = 
	`timed_dñay
();

872 
keydown
 = 
key_FIFO
[
i
] = 
	`ªad_key
(
dñ
);

873 i‡(
keydown
) {

874 
h™g_time
 = 0;

875 i‡(
PTT_°©e
 == 0){

876 
	`£nd_comm™d
("setÖtt on");

877 
PTT_°©e
 = 1;

882 i‡(
i
 >(
key_FIFO_SIZE
 - 1)) {

883 
keydown
 = 
key_FIFO
[0];

884 
i
 = 0;

887 
keydown
 = 
key_FIFO
[
i
+1];

888 
i
++;

891 i‡(!
∂ayög
 && 
keydown
)

892 
	`CWT⁄eOn
(
gí
), 
∂ayög
 = 
TRUE
;

893 i‡(
∂ayög
 && !
keydown
)

894 
	`CWT⁄eOff
(
gí
);

896 
	`£m_po°
(&
˛ock_fúed
);

899 
	`±hªad_exô
(0);

900 
	}
}

905 
	#MAX_ESC
 (512)

	)

906 
	#ESC_L
 '<'

	)

907 
	#ESC_R
 '>'

	)

922 
	$upd©e_thªad
() {

924 
c
;

925 
i‰eq
;

926 
comm™d_°r
[80];

929 i‡((
c
 = 
	`gëch¨
()Ë=
EOF
Ë
föish
;

932 i‡(
c
 =
ESC_L
) {

933 
i
 = 0;

934 
buf
[
MAX_ESC
];

937 (
c
 = 
	`gëch¨
()Ë!
EOF
) {

938 i‡(
c
 =
ESC_R
) ;

939 
buf
[
i
] = 
c
;

940 i‡(++
i
 >(
MAX_ESC
 - 1)) ;

942 i‡(
c
 =
EOF
Ë
föish
;

943 
buf
[
i
] = 0;

946 
	`£m_waô
(&
upd©e_ok
);

948 i‡(!
	`°∫cmp
(
buf
, "wpm", 3))

949 
ks
->
wpm
 = wpm = 
	`©of
(
buf
 + 3);

950 i‡(!
	`°∫cmp
(
buf
, "ramp", 4)) {

951 
ømp
 = 
	`©of
(
buf
 + 4);

952 
	`£tCWT⁄eGíVÆs
(
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

953 } i‡(!
	`°∫cmp
(
buf
, "freq", 4)) {

954 
‰eq
 = 
	`©of
(
buf
 + 4);

955 
i‰eq
 = 
‰eq
;

956 
	`•rötf
(
comm™d_°r
, "£àt⁄ê%d\n", 
i‰eq
);

957 
	`£nd_comm™d
(
comm™d_°r
);

958 
	`£tCWT⁄eGíVÆs
(
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

959 } i‡(!
	`°∫cmp
(
buf
, "gain", 4)) {

960 
gaö
 = 
	`©of
(
buf
 + 4);

961 
	`£tCWT⁄eGíVÆs
(
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

962 } i‡(!
	`°∫cmp
(
buf
, "quit", 4))

963 
föish
;

970 
föish
:

971 
	`±hªad_ˇn˚l
(
pﬁÀr
);

972 
	`±hªad_ˇn˚l
(
∂ay
);

973 
	`±hªad_ˇn˚l
(
key
);

974 
	`±hªad_ˇn˚l
(
PTT_timî
);

975 
	`±hªad_exô
(0);

976 
	}
}

987 
PRIVATE
 

988 
	$jack_xrun
(*
¨g
) {

989 *
°r
 = "xrun";

990 (Ë
	`wrôe
(2, 
°r
, 
	`°æí
(str));

991 
	}
}

1000 
PRIVATE
 

1001 
	$jack_shutdown
(*
¨g
Ë{
	}
}

1011 
PRIVATE
 

1012 
	$jack_ˇŒback
(
jack_n‰ames_t
 
n‰ames
, *
¨g
) {

1013 *
Õ
, *
Ω
;

1014 
nbyãs
 = 
n‰ames
 * ();

1015 i‡(
n‰ames
 =
size
) {

1017 
Õ
 = (*Ë
	`jack_p‹t_gë_buf„r
(
Õ‹t
, 
n‰ames
);

1018 
Ω
 = (*Ë
	`jack_p‹t_gë_buf„r
(
Ω‹t
, 
n‰ames
);

1019 i‡(
	`jack_rögbuf„r_ªad_•a˚
(
Ãög
Ë>
nbyãs
) {

1020 
	`jack_rögbuf„r_ªad
(
Ãög
, (*Ë
Õ
, 
nbyãs
);

1021 
	`jack_rögbuf„r_ªad
(
ºög
, (*Ë
Ω
, 
nbyãs
);

1023 
	`mem£t
((*Ë
Õ
, 0, 
nbyãs
);

1024 
	`mem£t
((*Ë
Ω
, 0, 
nbyãs
);

1025 
	`jack_rögbuf„r_ª£t
(
Ãög
);

1026 
	`jack_rögbuf„r_ª£t
(
ºög
);

1027 
	`jack_rögbuf„r_˛ór
(
Ãög
, 
TONE_SIZE
 * ());

1028 
	`jack_rögbuf„r_˛ór
(
ºög
, 
TONE_SIZE
 * ());

1033 
	}
}

1044 
	$maö
(
¨gc
, **
¨gv
) {

1045 
i
;

1046 
jack_°©us_t
 
jack_°©us
;

1047 *
˛ockdev
 = "/dev/rtc";

1049 
i‰eq
;

1050 
comm™d_°r
[80];

1052 
i
 = 1; i < 
¨gc
; i++)

1053 i‡(
¨gv
[
i
][0] == '-')

1054 
¨gv
[
i
][1]) {

1056 
‰eq
 = 
	`©of
(
¨gv
[++
i
]);

1059 
ümbic
 = 
TRUE
;

1062 
gaö
 = 
	`©of
(
¨gv
[++
i
]);

1065 
ømp
 = 
	`©of
(
¨gv
[++
i
]);

1068 
wpm
 = 
	`©of
(
¨gv
[++
i
]);

1071 
	`Ârötf
(
°dîr
,

1073 
	`exô
(1);

1077 i‡(
i
 < 
¨gc
) {

1078 i‡(!
	`‰e›í
(
¨gv
[
i
], "r", 
°dö
))

1079 
	`≥º‹
(
¨gv
[
i
]), 
	`exô
(1);

1080 
i
++;

1085 
gí
 = 
	`√wCWT⁄eGí
(
gaö
, 
‰eq
, 
ømp
,Ñamp, 
TONE_SIZE
, 48000.0);

1089 
kl
 = 
	`√wKeyîLogic
();

1090 
ks
 = 
	`√wKeyîSèã
();

1091 
ks
->
Êag
.
ümbic
 = 
TRUE
;

1092 
ks
->
Êag
.
ªvpdl
 = 
TRUE
;

1095 
ks
->
Êag
.
mdlmdB
 = ks->Êag.
mem‹y
.
dô
 = ks->Êag.mem‹y.
dah
 = 
TRUE
;

1096 
ks
->
Êag
.
auto•a˚
.
kh¨
 = ks->Êag.auto•a˚.
w‹d
 = 
FALSE
;

1097 
ks
->
deboun˚
 = 1;

1098 
ks
->
mode
 = 
MODE_B
;

1099 
ks
->
weight
 = 50;

1100 
ks
->
wpm
 = wpm;

1104 i‡(!(
˛õ¡
 = 
	`jack_˛õ¡_›í
("ikyr", 
JackNuŒO±i⁄
, &
jack_°©us
))){

1105 
	`Ârötf
(
°dîr
, "can't make client -- jackÇotÑunning?\n");

1106 
	`exô
(1);

1109 
	`Ârötf
(
°dîr
, "jack sètu†%d\n", 
jack_°©us
);

1110 
	`jack_£t_¥o˚ss_ˇŒback
(
˛õ¡
, (*Ë
jack_ˇŒback
, 0);

1111 
	`jack_⁄_shutdown
(
˛õ¡
, (*Ë
jack_shutdown
, 0);

1112 
	`jack_£t_xrun_ˇŒback
(
˛õ¡
, (*Ë
jack_xrun
, 0);

1113 
size
 = 
	`jack_gë_buf„r_size
(
˛õ¡
);

1114 
Õ‹t
 = 
	`jack_p‹t_ªgi°î
(
˛õ¡
,

1116 
JACK_DEFAULT_AUDIO_TYPE
,

1117 
JackP‹tIsOuçut
,

1119 
Ω‹t
 = 
	`jack_p‹t_ªgi°î
(
˛õ¡
,

1121 
JACK_DEFAULT_AUDIO_TYPE
,

1122 
JackP‹tIsOuçut
,

1124 
Ãög
 = 
	`jack_rögbuf„r_¸óã
(
RING_SIZE
);

1125 
ºög
 = 
	`jack_rögbuf„r_¸óã
(
RING_SIZE
);

1126 
	`jack_rögbuf„r_˛ór
(
Ãög
, 
TONE_SIZE
 * ());

1127 
	`jack_rögbuf„r_˛ór
(
ºög
, 
TONE_SIZE
 * ());

1132 
	`›í_usbso·rock
();

1133 
i‰eq
 = 
‰eq
;

1134 
	`•rötf
(
comm™d_°r
,"£àt⁄ê%d\n", 
i‰eq
);

1135 
	`£nd_comm™d
(
comm™d_°r
);

1139 i‡((
fdπc
 = 
	`›í
(
˛ockdev
, 
O_RDONLY
)) == -1) {

1140 
	`≥º‹
(
˛ockdev
);

1141 
	`exô
(1);

1143 i‡(
	`io˘l
(
fdπc
, 
RTC_IRQP_SET
, 
RTC_RATE
) == -1) {

1144 
	`≥º‹
("ioctl irqp");

1145 
	`exô
(1);

1147 i‡(
	`io˘l
(
fdπc
, 
RTC_PIE_ON
, 0) == -1) {

1148 
	`≥º‹
("ioctlÖie on");

1149 
	`exô
(1);

1154 
	`£m_öô
(&
pﬁl_a˘i⁄
, 0, 0);

1155 
	`£m_öô
(&
˛ock_fúed
, 0, 0);

1156 
	`£m_öô
(&
keyî_°¨ãd
, 0, 0);

1157 
	`£m_öô
(&
upd©e_ok
, 0, 0);

1158 
	`±hªad_¸óã
(&
pﬁÀr
, 0, (*Ë
pﬁl_thªad
, 0);

1159 
	`±hªad_¸óã
(&
∂ay
, 0, (*Ë
sound_thªad
, 0);

1160 
	`±hªad_¸óã
(&
key
, 0, (*Ë
key_thªad
, 0);

1161 
	`±hªad_¸óã
(&
upd©e
, 0, (*Ë
upd©e_thªad
, 0);

1162 
	`±hªad_¸óã
(&
PTT_timî
, 0, (*Ë
PTT_timî_thªad
, 0);

1166 
	`jack_a˘iv©e
(
˛õ¡
);

1187 
	`£m_po°
(&
keyî_°¨ãd
);

1189 
	`±hªad_joö
(
pﬁÀr
, 0);

1190 
	`±hªad_joö
(
∂ay
, 0);

1191 
	`±hªad_joö
(
key
, 0);

1192 
	`±hªad_joö
(
upd©e
, 0);

1193 
	`±hªad_joö
(
PTT_timî
, 0);

1194 
	`jack_˛õ¡_˛o£
(
˛õ¡
);

1198 i‡(
	`io˘l
(
fdπc
, 
RTC_PIE_OFF
, 0) == -1) {

1199 
	`≥º‹
("ioctlÖie off");

1200 
	`exô
(1);

1202 
	`˛o£
(
fdπc
);

1205 
	`jack_rögbuf„r_‰ì
(
Ãög
);

1206 
	`jack_rögbuf„r_‰ì
(
ºög
);

1208 
	`£m_de°roy
(&
pﬁl_a˘i⁄
);

1209 
	`£m_de°roy
(&
˛ock_fúed
);

1210 
	`£m_de°roy
(&
keyî_°¨ãd
);

1212 
	`dñCWT⁄eGí
(
gí
);

1213 
	`dñKeyîSèã
(
ks
);

1214 
	`dñKeyîLogic
(
kl
);

1218 
	`exô
(0);

1219 
	}
}

	@iosdr.h

1 
wrôe
 (, *, );

	@isoband.c

36 
	~<isob™d.h
>

39 
	s_ISOb™d_t
 {

40 
REAL
 
	mnomöÆ
, 
	mexa˘
, 
	mlow
, 
	mhigh
;

41 } 
	tISOb™d_t
;

44 
ISOb™d_t
 
	g_ISOb™d_öfo
[] = {

90 
PRIVATE
 
INLINE
 
ISOb™d_t
 *

91 
	$ISOb™d_gë_öfo
(
b™d
) {

92 i‡(
b™d
 < 1 || band > 43) {

93 
	`Ârötf
(
°dîr
, "ISO: b™d index ouào‡øngê(%d)\n", 
b™d
);

94 
	`exô
(1);

96  &
_ISOb™d_öfo
[
b™d
 - 1];

97 
	}
}

99 
REAL


100 
	$ISOb™d_gë_nomöÆ
(
b™d
) {

101  
	`ISOb™d_gë_öfo
(
b™d
)->
nomöÆ
;

102 
	}
}

104 
REAL


105 
	$ISOb™d_gë_exa˘
(
b™d
) {

106  
	`ISOb™d_gë_öfo
(
b™d
)->
exa˘
;

107 
	}
}

109 
REAL


110 
	$ISOb™d_gë_low
(
b™d
) {

111  
	`ISOb™d_gë_öfo
(
b™d
)->
low
;

112 
	}
}

114 
REAL


115 
	$ISOb™d_gë_high
(
b™d
) {

116  
	`ISOb™d_gë_öfo
(
b™d
)->
high
;

117 
	}
}

	@isoband.h

34 #i‚de‡
_isob™d_h


35 
	#_isob™d_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<d©©y≥s.h
>

40 
	~<b™Æ.h
>

42 
REAL
 
ISOb™d_gë_nomöÆ
(
b™d
),

43 
ISOb™d_gë_exa˘
(
b™d
),

44 
ISOb™d_gë_low
(
b™d
),

45 
ISOb™d_gë_high
(
b™d
);

	@keyboard-keyer-for-SR.c

42 
	~<‰omsys.h
>

43 
	~<b™Æ.h
>

44 
	~<•lôfõlds.h
>

45 
	~<d©©y≥s.h
>

46 
	~<bufvec.h
>

47 
	~<cx›s.h
>

49 
	~<sys/ty≥s.h
>

50 
	~<sys/∑øm.h
>

51 
	~<sys/°©.h
>

52 
	~<sys/time.h
>

53 
	~<sys/waô.h
>

54 
	~<sys/mm™.h
>

55 
	~<sys/io˘l.h
>

56 
	~<sys/sockë.h
>

57 
	~<√tdb.h
>

59 
	~<√töë/ö.h
>

60 
	~<¨∑/öë.h
>

62 
	~<time.h
>

63 
	~<f˙é.h
>

64 
	~<uni°d.h
>

65 
	~<°dlib.h
>

66 
	~<°dio.h
>

67 
	~<˘y≥.h
>

68 
	~<°rög.h
>

69 
	~<°d¨g.h
>

71 
	#SAMP_RATE
 (48000)

	)

72 
	#HUGE_PHASE
 (1256637061.43593)

	)

74 
	#RING_SIZE
 (01 << 022)

	)

77 
	#USBSOFTROCK_CLIENT_COMMAND
 19004

	)

78 
	#DTTSP_PORT_CLIENT_BUFSIZE
 65536

	)

81 
	#PTT_HANG_TIME_POLLING_INTERVAL
 100000000

	)

83 
	#HANG_TIME_THRESHOLD
 15

	)

85 
	gh™g_time
 = 0;

86 
±hªad_t
 
	göput
, 
	g∂ay
, 
	gPTT_timî
;

87 
£m_t
 
	gªady
, 
	gªadî
, 
	gwrôî
;

89 
jack_˛õ¡_t
 *
	g˛õ¡
;

90 
jack_p‹t_t
 *
	gÕ‹t
, *
	gΩ‹t
;

91 
jack_rögbuf„r_t
 *
	gÃög
, *
	gºög
;

92 
jack_n‰ames_t
 
	gsize
;

94 
BOOLEAN
 
	g∂ayög
 = 
FALSE
;

95 
	gwpm
 = 18.0, 
	g‰eq
 = 700.0, 
	ggaö
 = -6.0, 
	gømp
 = 5.0;

97 
COMPLEX
 *
	gzout
 = 0;

100 *
	gm‹£_èbÀ
[128];

103 
	#ME_EOF
 (-1)

	)

104 
	#ME_ZERO
 (0)

	)

105 
	#ME_RAMP
 (1)

	)

106 
	#ME_STDY
 (2)

	)

109 
	mwpm
, 
	mri£
, 
	mÁŒ
, 
	mcuº
, 
	mö¸
, 
	møã
;

110 
	mty≥
, 
	msize
;

111 } 
	gm‹£l
;

113 
	gdô•a˚size
, 
	gdah•a˚size
,

114 
	gdô°dysize
, 
	gdah°dysize
,

115 
	gch¨•a˚size
, 
	gw‹d•a˚size
,

116 
	gri£size
, 
	gÁŒsize
;

117 
	gri£ö¸
, 
	gÁŒö¸
;

119 
sockaddr_ö
 
	gSa
;

120 
sockaddr_ö
 *
	gpSa
;

121 
addröfo
 *
	gaddªss
;

122 
	gp‹t
;

123 
	g˛í
, 
	gÊags
, 
	gsock
;

124 
	gbuff
 [
DTTSP_PORT_CLIENT_BUFSIZE
];

125 
	gssize
, 
	gu£d
;

126 
	g∑øm
;

128 
	gPTT_°©e
 = 0;

130 
	#MAX_ESC
 (512)

	)

131 
	#ESC_L
 '<'

	)

132 
	#ESC_R
 '>'

	)

134 
ölöecmd
(*, );

136 
jack_rögbuf„r_˛ór
(
jack_rögbuf„r_t
 *, );

137 
jack_rögbuf„r_ª°¨t
(
jack_rögbuf„r_t
 *, );

138 
£nd_sound
(
COMPLEX
 *, );

142 
	$›í_usbso·rock
(){

144 
p‹t
 = 
USBSOFTROCK_CLIENT_COMMAND
;

145 
pSa
 = &
Sa
;

146 
addªss
 = 
NULL
;

148 i‡((
sock
 = 
	`sockë
(
PF_INET
, 
SOCK_DGRAM
, 
IPPROTO_UDP
)) < 0) {

149 
	`Ârötf
(
°dîr
, "Couldn't create dttsp_port_client socket\n");

150 
	`exô
(1);

152 
	`Ârötf
–
°dîr
, "DâSPÖ‹à%d\n", 
p‹t
);

155 
ssize
 = 
DTTSP_PORT_CLIENT_BUFSIZE
;

156 
	`mem£t
(
buff
, 0, 
ssize
);

157 
	}
}

160 
	$£nd_comm™d
 ( *
cmd°r
 )

162 
fd_£t
 
fds
;

163 
timevÆ
 
tv
;

165 i‡((!
pSa
Ë|| 
sock
 =-1 || !
cmd°r
)

171 
	`°r˝y
 (
buff
, 
cmd°r
);

172 
	`°rˇt
 (
buff
, "\n");

173 
u£d
 = 
	`°æí
 (
buff
);

176 i‡(
addªss
 =
NULL
) {

177 
˛í
 = (*
pSa
);

178 
	`mem£t
((*Ë
pSa
, 0, 
˛í
);

179 
pSa
->
sö_Ámûy
 = 
AF_INET
;

180 
pSa
->
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

181 
pSa
->
sö_p‹t
 = 
	`ht⁄s
((Ë
p‹t
);

182 i‡(
	`£ndto
(
sock
, 
buff
, 
u£d
, 
Êags
, (
sockaddr
 *Ë
pSa
, 
˛í
) != used) {

183 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿£ndto\n", 
__FUNCTION__
);

188 i‡(
	`£ndto
(
sock
, 
buff
, 
u£d
, 
Êags
, 
addªss
->
ai_addr
,áddªss->
ai_addæí
) != used) {

189 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿£ndto\n", 
__FUNCTION__
);

195 
	`FD_ZERO
(&
fds
);

196 
	`FD_SET
(
sock
, &
fds
);

197 
tv
.
tv_£c
 = 1;

198 
tv
.
tv_u£c
 = 0;

200 i‡(!
	`£À˘
(
sock
 + 1, &
fds
, 0, 0, &
tv
)) {

201 
	`Ârötf
 (
°dîr
, "%s:Éº‹ from sñe˘, dißblögÖ‹t\n", 
__FUNCTION__
);

202 
	`˛o£
 (
sock
);

203 
sock
 = -1;

204 
pSa
 = 
NULL
;

207 i‡(
addªss
 =
NULL
) {

208 i‡(
	`ªcv‰om
(
sock
, 
buff
, 
size
, 
Êags
, (
sockaddr
 *Ë
pSa
, (
sockÀn_t
 *)(&
˛í
)) <= 0) {

209 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿ªcv‰om\n", 
__FUNCTION__
);

213 i‡(
	`ªcv‰om
(
sock
, 
buff
, 
size
, 
Êags
, 
addªss
->
ai_addr
, &addªss->
ai_addæí
) <= 0) {

214 
	`Ârötf
 (
°dîr
, "%s:Éº‹ i¿ªcv‰om\n", 
__FUNCTION__
);

219 i‡(
buff
[0] != 'o' || buff[1] != 'k')  -6;

220 if(
buff
[3] ='0'Ë
∑øm
 = 0;

221 i‡(
buff
[3] ='1'Ë
∑øm
 = 1;

222 i‡(
buff
[3] ='2'Ë
∑øm
 = 2;

223 i‡(
buff
[3] ='3'Ë
∑øm
 = 3;

224 
∑øm
 = 0;

227 
	}
}

229 
	$PTT_timî_thªad
(){

230 
time•ec
 
ªq
, 
ªm
;

231 
ªq
.
tv_£c
 = 0;

232 
ªq
.
tv_n£c
 = 
PTT_HANG_TIME_POLLING_INTERVAL
;

234 
	`«no¶ìp
(&
ªq
, &
ªm
);

235 i‡(
PTT_°©e
){

236 
h™g_time
++;

237 i‡(
h™g_time
 > 
HANG_TIME_THRESHOLD
){

238 
	`£nd_comm™d
("setÖtt off");

239 
PTT_°©e
 = 0;

240 
h™g_time
 = 0;

244 
	}
}

256 
	$gë_m‹£
(
c
) {

257  
m‹£_èbÀ
[
c
 & 0x7F];

258 
	}
}

272 
	$ªadî_thªad
() {

273 
BOOLEAN
 
b
 = 
TRUE
;

274 
c
, 
e
;

275 *
m
;

279 (
c
 = 
	`gëch¨
()Ë!
EOF
) {

282 i‡(
c
 =
ESC_L
) {

283 
i
 = 0;

284 
buf
[
MAX_ESC
];

285 (
c
 = 
	`gëch¨
()Ë!
EOF
) {

286 i‡(
c
 =
ESC_R
) ;

287 
buf
[
i
] = 
c
;

288 i‡(++
i
 >(
MAX_ESC
 - 1)) ;

290 i‡(
c
 =
EOF
Ë
föish
;

291 
buf
[
i
] = 0;

292 
	`ölöecmd
(
buf
, 
i
);

297 i‡(
m
 = 
	`gë_m‹£
(
c
)) {

298 
h™g_time
 = 0;

299 i‡(
PTT_°©e
 == 0){

300 
	`£nd_comm™d
("setÖtt on");

301 
PTT_°©e
 = 1;

303 
	`£m_waô
(&
ªadî
);

304 
m‹£l
.
ty≥
 = 
ME_ZERO
;

305 
m‹£l
.
size
 = 
ch¨•a˚size
;

306 
	`£m_po°
(&
wrôî
);

311 
e
 = *
m
++) {

313 
	`£m_waô
(&
ªadî
);

314 
m‹£l
.
ty≥
 = 
ME_RAMP
, m‹£l.
size
 = 
ri£size
;

315 
m‹£l
.
cuº
 = 0.0, m‹£l.
ö¸
 = 
ri£ö¸
;

316 
	`£m_po°
(&
wrôî
);

320 
	`£m_waô
(&
ªadî
);

321 
m‹£l
.
ty≥
 = 
ME_STDY
;

322 
m‹£l
.
size
 = 
e
 ='.' ? 
dô°dysize
 : 
dah°dysize
;

323 
	`£m_po°
(&
wrôî
);

326 
	`£m_waô
(&
ªadî
);

327 
m‹£l
.
ty≥
 = 
ME_RAMP
, m‹£l.
size
 = 
ÁŒsize
;

328 
m‹£l
.
cuº
 = 1.0, m‹£l.
ö¸
 = 
ÁŒö¸
;

329 
	`£m_po°
(&
wrôî
);

332 
	`£m_waô
(&
ªadî
);

333 
m‹£l
.
ty≥
 = 
ME_ZERO
;

334 
m‹£l
.
size
 = 
dô•a˚size
;

335 
	`£m_po°
(&
wrôî
);

339 
	`£m_waô
(&
ªadî
);

340 
m‹£l
.
ty≥
 = 
ME_ZERO
;

342 
m‹£l
.
size
 = 
ch¨•a˚size
 - 
dô•a˚size
;

343 
	`£m_po°
(&
wrôî
);

346 
b
 = 
FALSE
;

351 
	`£m_waô
(&
ªadî
);

352 
m‹£l
.
ty≥
 = 
ME_ZERO
;

354 i‡(
b
)

356 
m‹£l
.
size
 = 
w‹d•a˚size
;

359 
m‹£l
.
size
 = 
w‹d•a˚size
 - 
ch¨•a˚size
;

361 
b
 = 
TRUE
;

362 
	`£m_po°
(&
wrôî
);

367 
föish
:

369 
	`£m_waô
(&
ªadî
);

370 
m‹£l
.
ty≥
 = 
ME_EOF
;

371 
	`£m_po°
(&
wrôî
);

372 
	`±hªad_exô
(0);

373 
	}
}

381 
	$sound_thªad
() {

382 
i
, 
k
 = 0;

383 
o‰eq
, 
sˇÀ
, 
pha£
 = 0.0;

384 
COMPLEX
 
z
, 
dñè_z
;

390 
	`£m_po°
(&
ªadî
);

391 
	`£m_waô
(&
wrôî
);

394 i‡(
m‹£l
.
ty≥
 =
ME_EOF
)

398 i‡(
m‹£l
.
ty≥
 !
ME_ZERO
) {

401 
o‰eq
 = 
‰eq
 * 2.0 * 
M_PI
 / 
SAMP_RATE
;

402 
sˇÀ
 = 
	`pow
(10.0, 
gaö
 / 20.0);

403 i‡(
pha£
 > 
HUGE_PHASE
)

404 
pha£
 -
HUGE_PHASE
;

405 
z
 = 
	`Cm∂x
(
	`cos
(
pha£
), 
	`sö
(phase));

406 
dñè_z
 = 
	`Cm∂x
(
	`cos
(
o‰eq
), 
	`sö
(ofreq));

410 
i
 = 0; i < 
m‹£l
.
size
; i++) {

413 i‡(
m‹£l
.
ty≥
 =
ME_ZERO
)

414 
zout
[
k
] = 
cxzîo
;

418 
z
 = 
	`Cmul
(z, 
dñè_z
);

419 
pha£
 +
o‰eq
;

421 i‡(
m‹£l
.
ty≥
 =
ME_RAMP
) {

422 
m‹£l
.
cuº
 +m‹£l.
ö¸
;

423 
zout
[
k
] = 
	`Cs˛
(
z
, 
sˇÀ
 * 
	`sö
(
m‹£l
.
cuº
 * 
M_PI
 / 2.0));

425 
zout
[
k
] = 
	`Cs˛
(
z
, 
sˇÀ
);

429 i‡(++
k
 >
size
) {

431 
	`£nd_sound
(
zout
, 
k
);

433 
	`£m_waô
(&
ªady
);

434 
k
 = 0;

435 i‡(
m‹£l
.
ty≥
 !
ME_ZERO
) {

437 i‡(
pha£
 > 
HUGE_PHASE
)

438 
pha£
 -
HUGE_PHASE
;

439 
z
 = 
	`Cm∂x
(
	`cos
(
pha£
), 
	`sö
(phase));

440 
dñè_z
 = 
	`Cm∂x
(
	`cos
(
o‰eq
), 
	`sö
(ofreq));

447 i‡(
k
 > 0)

448 
	`£nd_sound
(
zout
, 
k
);

450 
	`±hªad_exô
(0);

451 
	}
}

464 
	$jack_rögbuf„r_˛ór
(
jack_rögbuf„r_t
 *
rög
, 
nbyãs
) {

465 
i
;

466 
zîo
 = 0;

467 
i
 = 0; i < 
nbyãs
; i++)

468 
	`jack_rögbuf„r_wrôe
(
rög
, &
zîo
, 1);

469 
	}
}

480 
	$jack_rögbuf„r_ª°¨t
(
jack_rögbuf„r_t
 *
rög
, 
nbyãs
) {

481 
	`jack_rögbuf„r_ª£t
(
rög
);

482 
	`jack_rögbuf„r_˛ór
(
rög
, 
nbyãs
);

483 
	}
}

494 
	$£nd_sound
(
COMPLEX
 *
buff
, 
Àn
) {

495 i‡(
	`jack_rögbuf„r_wrôe_•a˚
(
Ãög
Ë< 
Àn
 * ()) {

496 (Ë
	`wrôe
(2, "overrun\n", 8);

497 
	`jack_rögbuf„r_ª°¨t
(
Ãög
, 
size
 * ());

498 
	`jack_rögbuf„r_ª°¨t
(
ºög
, 
size
 * ());

500 
i
;

501 
i
 = 0; i < 
Àn
; i++) {

502 
l
 = 
buff
[
i
].
ª
, 
r
 = buff[i].
im
;

503 
	`jack_rögbuf„r_wrôe
(
Ãög
, (*Ë&
l
, ());

504 
	`jack_rögbuf„r_wrôe
(
ºög
, (*Ë&
r
, ());

507 
	}
}

516 
PRIVATE
 

517 
	$jack_xrun
(*
¨g
) {

518 *
°r
 = "xrun!\n";

519 (Ë
	`wrôe
(2, 
°r
, 
	`°æí
(str));

520 
	}
}

529 
PRIVATE
 

530 
	$jack_shutdown
(*
¨g
Ë{
	}
}

540 
PRIVATE
 

541 
	$jack_ˇŒback
(
jack_n‰ames_t
 
n‰ames
, *
¨g
) {

542 *
Õ
, *
Ω
;

543 
nw™t
 = 
n‰ames
 * (),

544 
nhave
 = 
	`jack_rögbuf„r_ªad_•a˚
(
Ãög
);

546 
Õ
 = 
	`jack_p‹t_gë_buf„r
(
Õ‹t
, 
n‰ames
);

547 
Ω
 = 
	`jack_p‹t_gë_buf„r
(
Ω‹t
, 
n‰ames
);

548 i‡(
nhave
 >
nw™t
) {

549 
	`jack_rögbuf„r_ªad
(
Ãög
, 
Õ
, 
nw™t
);

550 
	`jack_rögbuf„r_ªad
(
ºög
, 
Ω
, 
nw™t
);

551 
	`£m_po°
(&
ªady
);

553 
	`mem£t
(
Õ
, 0, 
nw™t
);

554 
	`mem£t
(
Ω
, 0, 
nw™t
);

557 
	}
}

565 
	$ª£ç¨am
() {

566 
m‹£l
.
wpm
 = wpm;

567 
m‹£l
.
ri£
 = m‹£l.
ÁŒ
 = 
ømp
;

568 
m‹£l
.
øã
 = 
SAMP_RATE
;

570 
dô•a˚size
 = 
SAMP_RATE
 * 1.2 / 
m‹£l
.
wpm
 + 0.5;

571 
dah•a˚size
 = 3 * 
dô•a˚size
;

572 
ch¨•a˚size
 = 
dah•a˚size
;

573 
w‹d•a˚size
 = 7 * 
dô•a˚size
;

575 
ri£size
 = 
SAMP_RATE
 * 
m‹£l
.
ri£
 / 1e3 + 0.5;

576 i‡(
ri£size
 > 1)

577 
ri£ö¸
 = 1.0 / (
ri£size
 - 1);

579 
ri£ö¸
 = 1.0;

581 
ÁŒsize
 = 
SAMP_RATE
 * 
m‹£l
.
ÁŒ
 / 1e3 + 0.5;

582 i‡(
ÁŒsize
 > 1)

583 
ÁŒö¸
 = -1.0 / (
ÁŒsize
 - 1);

585 
ÁŒö¸
 = -1.0;

587 
dô°dysize
 = 
dô•a˚size
 - 
ri£size
 - 
ÁŒsize
;

588 
dah°dysize
 = 
dah•a˚size
 - 
ri£size
 - 
ÁŒsize
;

589 
	}
}

600 
	$maö
(
¨gc
, **
¨gv
) {

601 
i
;

602 
jack_°©us_t
 
jack_°©us
;

603 
comm™d_°r
[80];

604 
i‰eq
;

606 
i
 = 1; i < 
¨gc
; i++)

607 i‡(
¨gv
[
i
][0] == '-')

608 
¨gv
[
i
][1]) {

610 
‰eq
 = 
	`©of
(
¨gv
[++
i
]);

613 
wpm
 = 
	`©of
(
¨gv
[++
i
]);

616 
gaö
 = 
	`©of
(
¨gv
[++
i
]);

619 
ømp
 = 
	`©of
(
¨gv
[++
i
]);

622 
	`Ârötf
(
°dîr
, "keyboard-keyer [-w wpm] [-f freq] [-g gain_dB] [-rÑamp_ms] [infile]\n");

623 
	`exô
(1);

627 i‡(
i
 < 
¨gc
) {

628 i‡(!
	`‰e›í
(
¨gv
[
i
], "r", 
°dö
))

629 
	`≥º‹
(
¨gv
[
i
]), 
	`exô
(1);

630 
i
++;

635 
	`ª£ç¨am
();

639 i‡(!(
˛õ¡
 = 
	`jack_˛õ¡_›í
("kkyr", 
JackNuŒO±i⁄
, &
jack_°©us
)))

640 
	`Ârötf
(
°dîr
, "ˇn'àmakê˛õ¡ -- jackÇŸÑu¬ög?\n"), 
	`exô
(1);

642 
	`Ârötf
(
°dîr
, "jack sètu†%d\n", 
jack_°©us
);

644 
	`jack_£t_¥o˚ss_ˇŒback
(
˛õ¡
, (*Ë
jack_ˇŒback
, 0);

645 
	`jack_⁄_shutdown
(
˛õ¡
, (*Ë
jack_shutdown
, 0);

646 
	`jack_£t_xrun_ˇŒback
(
˛õ¡
, (*Ë
jack_xrun
, 0);

647 
size
 = 
	`jack_gë_buf„r_size
(
˛õ¡
);

649 
Õ‹t
 = 
	`jack_p‹t_ªgi°î
(
˛õ¡
,

651 
JACK_DEFAULT_AUDIO_TYPE
,

652 
JackP‹tIsOuçut
,

654 i‡(
Õ‹t
 =
NULL
){

655 
	`Ârötf
(
°dîr
, "jackÜportÑegister failed\n");

656 
	`exô
(1);

658 
Ω‹t
 = 
	`jack_p‹t_ªgi°î
(
˛õ¡
,

660 
JACK_DEFAULT_AUDIO_TYPE
,

661 
JackP‹tIsOuçut
,

663 i‡(
Ω‹t
 =
NULL
){

664 
	`Ârötf
(
°dîr
, "jackÑportÑegister failed\n");

665 
	`exô
(1);

667 
Ãög
 = 
	`jack_rögbuf„r_¸óã
(
RING_SIZE
);

668 
ºög
 = 
	`jack_rögbuf„r_¸óã
(
RING_SIZE
);

669 
	`jack_rögbuf„r_˛ór
(
Ãög
, 
size
 * ());

670 
	`jack_rögbuf„r_˛ór
(
ºög
, 
size
 * ());

673 
	`jack_a˘iv©e
(
˛õ¡
);

678 
zout
 = 
	`√wvec_COMPLEX
(
size
, "keyb sample buffer");

682 
	`£m_öô
(&
ªady
, 0, 0);

683 
	`£m_öô
(&
ªadî
, 0, 0);

684 
	`£m_öô
(&
wrôî
, 0, 0);

685 
	`±hªad_¸óã
(&
öput
, 0, (*Ë
ªadî_thªad
, 0);

686 
	`±hªad_¸óã
(&
∂ay
, 0, (*Ë
sound_thªad
, 0);

687 
	`±hªad_¸óã
(&
PTT_timî
, 0, (*Ë
PTT_timî_thªad
, 0);

713 
	`›í_usbso·rock
();

714 
i‰eq
 = 
‰eq
;

715 
	`•rötf
(
comm™d_°r
,"£àt⁄ê%d\n", 
i‰eq
);

716 
	`£nd_comm™d
(
comm™d_°r
);

718 
	`±hªad_joö
(
öput
, 0);

719 
	`±hªad_joö
(
∂ay
, 0);

721 
	`Ârötf
(
°dîr
, "subprocessesÉnded\n");

723 
	`˛o£
(
sock
);

725 
	`jack_˛õ¡_˛o£
(
˛õ¡
);

729 
	`dñvec_COMPLEX
(
zout
);

733 
	`jack_rögbuf„r_‰ì
(
Ãög
);

734 
	`jack_rögbuf„r_‰ì
(
ºög
);

735 
	`£m_de°roy
(&
ªady
);

736 
	`£m_de°roy
(&
ªadî
);

737 
	`£m_de°roy
(&
wrôî
);

741 
	`exô
(0);

742 
	}
}

744 *
	gm‹£_èbÀ
[128] = {

860 
	$ölöecmd
(*
buf
, 
Àn
) {

861 
comm™d_°r
[80];

862 
i‰eq
;

864 i‡(!
buf
 || 
Àn
 < 1) ;

865 i‡(!
	`°∫cmp
(
buf
, "wpm", 3)) {

866 
wpm
 = 
	`©of
(
buf
 + 3);

867 
	`ª£ç¨am
();

868 } i‡(!
	`°∫cmp
(
buf
, "ramp", 4)) {

869 
ømp
 = 
	`©of
(
buf
 + 4);

870 
	`ª£ç¨am
();

871 } i‡(!
	`°∫cmp
(
buf
, "freq", 4)) {

872 
‰eq
 = 
	`©of
(
buf
 + 4);

873 
i‰eq
 = 
‰eq
;

874 
	`•rötf
(
comm™d_°r
, "£àt⁄ê%d\n", 
i‰eq
);

875 
	`£nd_comm™d
(
comm™d_°r
);

876 } i‡(!
	`°∫cmp
(
buf
, "gain", 4))

877 
gaö
 = 
	`©of
(
buf
 + 4);

878 
	}
}

	@keyd.c

35 
	~<‰omsys.h
>

36 
	~<b™Æ.h
>

37 
	~<•lôfõlds.h
>

38 
	~<d©©y≥s.h
>

39 
	~<bufvec.h
>

40 
	~<cx›s.h
>

41 
	~<rögb.h
>

42 
	~<oscûœt‹.h
>

43 
	~<cwt⁄es.h
>

44 
	~<±hªad.h
>

45 
	~<£m≠h‹e.h
>

46 
	~<keyî.h
>

49 
	~<•Ÿt⁄e.h
>

50 
	~<sdªxp‹t.h
>

51 
MMRESULT
 
	gtimîid
 = 0;

53 
PRIVATE
 
CRITICAL_SECTION
 
	gCS_CW
,
	gUPDATE_OK
;

54 
PRIVATE
 
LPCRITICAL_SECTION
 
	gcs_cw
, 
	gupd©e_ok
;

56 
REAL
 
	gSAMP_RATE
 = 48000.0;

59 
	gkey_pﬁl_≥riod
 = 1;

61 
BOOLEAN
 
	gHiPîf‹m™˚
 = 
FALSE
;

65 
	gTONE_SIZE
 = 48;

66 
	gSIZEBUF
 = 768;

70 
	#RING_SIZE
 8192

	)

73 
KeyîSèã
 
	gks
;

74 
KeyîLogic
 
	gkl
;

76 
±hªad_t
 
	g∂ay
, 
	gkey
, 
	gtimî
;

77 
£m_t
 
	g˛ock_fúed
, 
	gkeyî_°¨ãd
, 
	gpﬁl_fúed
;

79 
rögb_Êﬂt_t
 *
	gÃög
, *
	gºög
;

82 
CWT⁄eGí
 
	ggí
;

83 
BOOLEAN
 
	g∂ayög
 = 
FALSE
, 
	gümbic
 = FALSE, 
	gbug
 = FALSE,

84 
	gcw_rög_ª£t
 = 
FALSE
;

85 
REAL
 
	gwpm
 = 18.0, 
	g‰eq
 = 600.0, 
	gømp
 = 5.0, 
	ggaö
 = 0.0;

91 
DâSP_EXP
 

92 
	$CWt⁄eExch™ge
 (*
buÊ
, *
bu‰
, 
n‰ames
)

94 
size_t
 
numßmps
, 
byãsize
 =  (Ë* 
n‰ames
;

96 i‡(
cw_rög_ª£t
)

98 
size_t
 
ª£t_size
 = ()
n‰ames
;

99 
cw_rög_ª£t
 = 
FALSE
;

100 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

101 
	`rögb_Êﬂt_ª°¨t
 (
Ãög
, 
ª£t_size
);

102 
	`rögb_Êﬂt_ª°¨t
 (
ºög
, 
ª£t_size
);

105 
	`mem£t
 (
buÊ
, 0, 
byãsize
);

106 
	`mem£t
 (
bu‰
, 0, 
byãsize
);

107 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

110 i‡((
numßmps
 = 
	`rögb_Êﬂt_ªad_•a˚
 (
Ãög
)Ë< (
size_t
Ë
n‰ames
)

112 
	`mem£t
 (
buÊ
, 0, 
byãsize
);

113 
	`mem£t
 (
bu‰
, 0, 
byãsize
);

114 
cw_rög_ª£t
 = 
TRUE
;

118 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

119 
	`rögb_Êﬂt_ªad
 (
Ãög
, 
buÊ
, 
n‰ames
);

120 
	`rögb_Êﬂt_ªad
 (
ºög
, 
bu‰
, 
n‰ames
);

121 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

123 
	}
}

127 
	$£nd_t⁄e
 ()

129 i‡(
	`rögb_Êﬂt_wrôe_•a˚
 (
Ãög
Ë< 
TONE_SIZE
)

131 
cw_rög_ª£t
 = 
TRUE
;

135 
i
;

136 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

137 
	`c‹ª˘IQ
(
gí
->
buf
, 
tx
[1].
iqfix
);

138 
i
 = 0; i < 
gí
->
size
; i++)

140 
r
 = (Ë
	`CXBªÆ
 (
gí
->
buf
, 
i
),

141 
l
 = (Ë
	`CXBimag
 (
gí
->
buf
, 
i
);

142 
	`rögb_Êﬂt_wrôe
 (
Ãög
, (*Ë&
l
, 1);

143 
	`rögb_Êﬂt_wrôe
 (
ºög
, (*Ë&
r
, 1);

145 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

147 
	}
}

151 
	$£nd_sûí˚
 ()

153 i‡(
	`rögb_Êﬂt_wrôe_•a˚
 (
Ãög
Ë< 
TONE_SIZE
)

155 
cw_rög_ª£t
 = 
TRUE
;

159 
i
;

160 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

161 
i
 = 0; i < 
gí
->
size
; i++)

163 
zîo
 = 0.0;

164 
	`rögb_Êﬂt_wrôe
 (
Ãög
, &
zîo
, 1);

165 
	`rögb_Êﬂt_wrôe
 (
ºög
, &
zîo
, 1);

167 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

169 
	}
}

175 
CALLBACK


176 
	$timî_ˇŒback
 (
UINT
 
uTimîID
, UINT 
uMsg
, 
DWORD_PTR
 
dwU£r
, DWORD_PTR 
dw1
,

177 
DWORD_PTR
 
dw2
)

179 
	`£m_po°
 (&
pﬁl_fúed
);

180 
	}
}

184 
DâSP_EXP
 

185 
	$sound_thªad_keyd
 ()

189 
	`£m_waô
 (&
˛ock_fúed
);

191 i‡(
∂ayög
)

196 
∂ayög
 = 
	`CWT⁄e
 (
gí
);

197 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

198 
	`£nd_t⁄e
 ();

199 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

203 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

204 
	`£nd_sûí˚
 ();

206 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

210 
	`±hªad_exô
 (0);

211 
	}
}

214 
BOOLEAN


215 
	$ªad_key
 (
REAL
 
dñ
, 
BOOLEAN
 
dŸ
, BOOLEAN 
dash
)

217 
BOOLEAN
 
	`ªad_°øight_key
 (
KeyîSèã
 
ks
, BOOLEAN 
keyed
);

218 
BOOLEAN
 
	`ªad_ümbic_key
 (
KeyîSèã
 
ks
, BOOLEAN 
dŸ
,

219 
BOOLEAN
 
dash
, 
KeyîLogic
 
kl
, 
REAL
 
tickÀn
);

221 i‡(
bug
)

223 i‡(
dash
)

224  
	`ªad_°øight_key
 (
ks
, 
dash
);

226  
	`ªad_ümbic_key
 (
ks
, 
dŸ
, 
FALSE
, 
kl
, 
dñ
);

228 i‡(
ümbic
)

229  
	`ªad_ümbic_key
 (
ks
, 
dŸ
, 
dash
, 
kl
, 
dñ
);

230  
	`ªad_°øight_key
 (
ks
, 
dŸ
 | 
dash
);

231 
	}
}

234 
BOOLEAN
 
	gdŸkey
 = 
FALSE
;

235 
PRIVATE
 
BOOLEAN
 
INLINE


236 
	$whichkey
 (
BOOLEAN
 
dŸ
, BOOLEAN 
dash
)

238 i‡(
dŸkey
)

239  
dŸ
;

240  
dash
;

241 
	}
}

243 
DâSP_EXP
 

244 
	$SëWhichKey
 (
BOOLEAN
 
isdŸ
)

246 i‡(
isdŸ
)

247 
dŸkey
 = 
TRUE
;

249 
dŸkey
 = 
FALSE
;

250 
	}
}

252 
DâSP_EXP
 

253 
	$key_thªad_¥o˚ss
 (
REAL
 
dñ
, 
BOOLEAN
 
dash
, BOOLEAN 
dŸ
, BOOLEAN 
key¥og
)

255 
BOOLEAN
 
keydown
;

256 
BOOLEAN
 
	`ªad_°øight_key
 (
KeyîSèã
 
ks
, BOOLEAN 
keyed
);

258 i‡(!
key¥og
)

259 
keydown
 = 
	`ªad_key
 (
dñ
, 
dŸ
, 
dash
);

261 
keydown
 = 
	`ªad_°øight_key
 (
ks
, 
	`whichkey
 (
dŸ
, 
dash
));

263 i‡(!
∂ayög
 && 
keydown
)

264 
	`CWT⁄eOn
 (
gí
), 
∂ayög
 = 
TRUE
;

265 i‡(
∂ayög
 && !
keydown
)

266 
	`CWT⁄eOff
 (
gí
);

268 
	`£m_po°
 (&
˛ock_fúed
);

269 
	}
}

271 
DâSP_EXP
 
BOOLEAN


272 
	$KeyîPœyög
 ()

274  
∂ayög
;

275 
	}
}

280 
DâSP_EXP
 

281 
	$SëKeyîBug
 (
BOOLEAN
 
bg
)

283 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

284 i‡(
bg
)

286 
ümbic
 = 
FALSE
;

287 
ks
->
Êag
.
mdlmdB
 = 
FALSE
;

288 
ks
->
Êag
.
mem‹y
.
dah
 = 
FALSE
;

289 
ks
->
Êag
.
mem‹y
.
dô
 = 
FALSE
;

290 
bug
 = 
TRUE
;

293 
bug
 = 
FALSE
;

294 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

295 
	}
}

297 
DâSP_EXP
 

298 
	$SëKeyîS≥ed
 (
REAL
 
•ìd
)

300 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

301 
wpm
 = 
ks
->wpm = 
•ìd
;

302 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

303 
	}
}

305 
DâSP_EXP
 

306 
	$SëKeyîWeight
 (
√wweight
)

308 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

309 
ks
->
weight
 = 
√wweight
;

310 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

311 
	}
}

313 
DâSP_EXP
 

314 
	$SëKeyîIambic
 (
BOOLEAN
 
£tô
)

316 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

317 i‡(
£tô
)

319 
ümbic
 = 
TRUE
;

320 
ks
->
Êag
.
mdlmdB
 = 
TRUE
;

321 
ks
->
Êag
.
mem‹y
.
dah
 = 
TRUE
;

322 
ks
->
Êag
.
mem‹y
.
dô
 = 
TRUE
;

326 
ümbic
 = 
FALSE
;

327 
ks
->
Êag
.
mdlmdB
 = 
FALSE
;

328 
ks
->
Êag
.
mem‹y
.
dah
 = 
FALSE
;

329 
ks
->
Êag
.
mem‹y
.
dô
 = 
FALSE
;

331 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

332 
	}
}

334 
DâSP_EXP
 

335 
	$SëKeyîFªq
 (
REAL
 
√w‰eq
)

337 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

338 
‰eq
 = -
√w‰eq
;

339 
	`£tCWT⁄eGíVÆs
 (
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

340 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

341 
	}
}

343 
DâSP_EXP
 

344 
	$SëKeyîGaö
 (
REAL
 
√wgaö
)

346 i‡((
√wgaö
 >= 0.0) && (newgain <= 1.0))

348 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

349 
gaö
 = (
REAL
Ë(20.0 * 
	`log10
 (
√wgaö
));

350 
	`£tCWT⁄eGíVÆs
 (
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

351 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

353 
	}
}

355 
DâSP_EXP
 

356 
	$SëKeyîRamp
 (
REAL
 
√wømp
)

358 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

359 
ømp
 = 
√wømp
;

360 
	`£tCWT⁄eGíVÆs
 (
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

361 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

362 
	}
}

364 
DâSP_EXP
 

365 
	$SëKeyîMode
 (
√wmode
)

367 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

368 
√wmode
)

371 
ks
->
mode
 = 
MODE_A
;

372 
ks
->
Êag
.
mdlmdB
 = 
FALSE
;

375 
ks
->
mode
 = 
MODE_B
;

376 
ks
->
Êag
.
mdlmdB
 = 
TRUE
;

379 
ümbic
 = 
FALSE
;

382 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

383 
	}
}

385 
DâSP_EXP
 

386 
	$SëKeyîDeBoun˚
 (
db
)

388 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

389 
ks
->
deboun˚
 = 
db
;

390 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

391 
	}
}

393 
DâSP_EXP
 

394 
	$SëKeyîRevPdl
 (
BOOLEAN
 
rvp
)

396 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

397 
ks
->
Êag
.
ªvpdl
 = !
rvp
;

398 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

399 
	}
}

414 
DâSP_EXP
 

415 
	$SëKeyîPîf
 (
BOOLEAN
 
hùîf
)

417 
MMRESULT
 
tmp_timî
;

418 
tmp_timî
 = 
timîid
;

419 i‡(
timîid
 != 0)

421 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

422 
	`timeKûlEvít
 ((
UINT
Ë
timîid
);

423 
timîid
 = 0;

424 
	`SÀï
 (11);

425 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

427 
	`dñCWT⁄eGí
 (
gí
);

428 i‡(
hùîf
)

430 
HiPîf‹m™˚
 = 
TRUE
;

431 
key_pﬁl_≥riod
 = 1;

432 
TONE_SIZE
 = 48;

436 
HiPîf‹m™˚
 = 
FALSE
;

437 
key_pﬁl_≥riod
 = 5;

438 
TONE_SIZE
 = 240;

440 
gí
 = 
	`√wCWT⁄eGí
 (
gaö
, 
‰eq
, 
ømp
,Ñamp, 
TONE_SIZE
, 
SAMP_RATE
);

441 i‡(
tmp_timî
 != 0)

443 #i‚de‡
INTERLEAVED


444 
	`E¡îCrôiˇlSe˘i⁄
(
cs_cw
);

445 
	`rögb_Êﬂt_ª°¨t
 (
Ãög
, 
SIZEBUF
);

446 
	`rögb_Êﬂt_ª°¨t
 (
ºög
, 
SIZEBUF
);

447 
	`LóveCrôiˇlSe˘i⁄
(
cs_cw
);

449 
	`rögb_Êﬂt_ª°¨t
 (
Ãög
, 
SIZEBUF
);

451 i‡((
timîid
 =

452 
	`timeSëEvít
 (
key_pﬁl_≥riod
, 1,

453 (
LPTIMECALLBACK
Ë
timî_ˇŒback
,

454 (
DWORD_PTR
Ë
NULL
, 
TIME_PERIODIC
)Ë=(
MMRESULT
) NULL)

455 
	`Ârötf
 (
°dîr
, "Timî faûed\n"), 
	`fÊush
 (stderr);

457 
	}
}

459 
DâSP_EXP
 

460 
	$NewKeyî
 (
REAL
 
‰eq
, 
BOOLEAN
 
nümbic
, REAL 
gaö
, REAL 
ømp
, REAL 
wpm
,

461 
REAL
 
Sam∂eR©e
)

463 
BOOL
 
out
;

464 
kl
 = 
	`√wKeyîLogic
 ();

465 
ks
 = 
	`√wKeyîSèã
 ();

466 
ks
->
Êag
.
ümbic
 = 
nümbic
;

467 
ks
->
Êag
.
ªvpdl
 = 
TRUE
;

468 
ks
->
Êag
.
auto•a˚
.
kh¨
 = ks->Êag.auto•a˚.
w‹d
 = 
FALSE
;

469 
ks
->
Êag
.
mdlmdB
 = 
TRUE
;

470 
ks
->
Êag
.
mem‹y
.
dah
 = 
TRUE
;

471 
ks
->
Êag
.
mem‹y
.
dô
 = 
TRUE
;

472 
ks
->
deboun˚
 = 1;

473 
ks
->
mode
 = 
MODE_B
;

474 
ks
->
weight
 = 50;

475 
ks
->
wpm
 = wpm;

476 
ümbic
 = 
nümbic
;

477 
cs_cw
 = &
CS_CW
;

478 
out
 = 
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
 (
cs_cw
, 0x00000080);

479 
upd©e_ok
 = &
UPDATE_OK
;

480 
out
 = 
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
 (
upd©e_ok
, 0x00000080);

481 #i‚de‡
INTERLEAVED


482 
Ãög
 = 
	`rögb_Êﬂt_¸óã
 (
RING_SIZE
);

483 
ºög
 = 
	`rögb_Êﬂt_¸óã
 (
RING_SIZE
);

485 
Ãög
 = 
	`rögb_Êﬂt_¸óã
 (2 * 
RING_SIZE
);

487 
	`£m_öô
 (&
˛ock_fúed
, 0, 0);

488 
	`£m_öô
 (&
pﬁl_fúed
, 0, 0);

489 
	`£m_öô
 (&
keyî_°¨ãd
, 0, 0);

490 i‡(
HiPîf‹m™˚
)

492 
key_pﬁl_≥riod
 = 1;

493 
TONE_SIZE
 = 48 * (Ë(
uni
[0].
ßm∂î©e
 / 48000.0);

497 
key_pﬁl_≥riod
 = 5;

498 
TONE_SIZE
 = 240 * (Ë(
uni
[0].
ßm∂î©e
 / 48000.0);

501 
SAMP_RATE
 = 
Sam∂eR©e
;

502 
	`dñCWT⁄eGí
(
gí
);

503 
gí
 = 
	`√wCWT⁄eGí
 (
gaö
, 
‰eq
, 
ømp
,Ñamp, 
TONE_SIZE
, 
Sam∂eR©e
);

509 
	}
}

511 
DâSP_EXP
 

512 *
	$NewCrôiˇlSe˘i⁄
()

514 
LPCRITICAL_SECTION
 
cs_±r
;

515 
cs_±r
 = (
LPCRITICAL_SECTION
)
	`ß„Æloc
(1,(
CRITICAL_SECTION
),"Critical Section");

516  (*)
cs_±r
;

517 
	}
}

519 
DâSP_EXP
 

520 
	$De°royCrôiˇlSe˘i⁄
(
LPCRITICAL_SECTION
 
cs_±r
)

522 
	`ß„‰ì
((*)
cs_±r
);

523 
	}
}

526 
DâSP_EXP
 

527 
	$CWRögRe°¨t
 ()

529 
cw_rög_ª£t
 = 
TRUE
;

530 
	}
}

532 
DâSP_EXP
 

533 
	$SèπKeyî
 ()

535 
	`CWRögRe°¨t
();

536 i‡((
timîid
 =

537 
	`timeSëEvít
 (
key_pﬁl_≥riod
, 1, (
LPTIMECALLBACK
Ë
timî_ˇŒback
,

538 (
DWORD_PTR
Ë
NULL
, 
TIME_PERIODIC
)Ë=(
MMRESULT
) NULL)

540 
	`Ârötf
 (
°dîr
, "Timî faûed\n"), 
	`fÊush
 (stderr);

541 } 
	`£m_po°
 (&
keyî_°¨ãd
);

542 
	}
}

544 
DâSP_EXP
 

545 
	$St›Keyî
 ()

547 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

548 i‡(
timîid
)

549 
	`timeKûlEvít
 ((
UINT
Ë
timîid
);

550 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

551 
timîid
 = 0;

552 
	}
}

554 
DâSP_EXP
 
BOOLEAN


555 
	$KeyîRu¬ög
 ()

557  (
timîid
 != 0);

558 
	}
}

560 
DâSP_EXP
 

561 
	$DñëeKeyî
 ()

563 
	`St›Keyî
();

564 i‡(
˛ock_fúed
)

566 
	`£m_de°roy
 (&
˛ock_fúed
);

567 
˛ock_fúed
 = 
NULL
;

569 i‡(
pﬁl_fúed
)

571 
	`£m_de°roy
 (&
pﬁl_fúed
);

572 
pﬁl_fúed
 = 
NULL
;

574 i‡(
keyî_°¨ãd
)

576 
	`£m_de°roy
 (&
keyî_°¨ãd
);

577 
keyî_°¨ãd
 = 
NULL
;

579 
	`dñCWT⁄eGí
 (
gí
);

580 
	`dñKeyîSèã
 (
ks
);

581 
	`dñKeyîLogic
 (
kl
);

582 #i‚de‡
INTERLEAVED


583 
	`rögb_Êﬂt_‰ì
 (
Ãög
);

584 
	`rögb_Êﬂt_‰ì
 (
ºög
);

586 
	`rögb_Êﬂt_‰ì
 (
Ãög
);

588 i‡(
cs_cw
)

590 
	`DñëeCrôiˇlSe˘i⁄
 (
cs_cw
);

591 
cs_cw
 = 
NULL
;

593 
	}
}

595 
DâSP_EXP
 

596 
	$KeyîClockFúeWaô
 ()

598 
	`£m_waô
 (&
˛ock_fúed
);

599 
	}
}

601 
DâSP_EXP
 

602 
	$KeyîClockFúeRñó£
 ()

604 
	`£m_po°
 (&
˛ock_fúed
);

605 
	}
}

607 
DâSP_EXP
 

608 
	$KeyîSèπedWaô
 ()

610 
	`£m_waô
 (&
keyî_°¨ãd
);

611 
	}
}

613 
DâSP_EXP
 

614 
	$KeyîSèπedRñó£
 ()

616 
	`£m_po°
 (&
keyî_°¨ãd
);

617 
	}
}

619 
DâSP_EXP
 

620 
	$PﬁlTimîWaô
 ()

622 
	`£m_waô
 (&
pﬁl_fúed
);

623 
	}
}

625 
DâSP_EXP
 

626 
	$PﬁlTimîRñó£
 ()

628 
	`£m_po°
 (&
pﬁl_fúed
);

629 
	}
}

631 
DâSP_EXP
 

632 
	$SëKeyîRe£tSize
 (
sizî
)

634 
SIZEBUF
 = 
sizî
;

635 
cw_rög_ª£t
 = 
TRUE
;

636 
	}
}

638 
DâSP_EXP
 

639 
	$SëKeyîSam∂eR©e
 (
REAL
 
§
)

641 
Á˘‹
 = (Ë(
§
 / 48000.0f);

642 i‡(
HiPîf‹m™˚
)

644 
key_pﬁl_≥riod
 = 1;

645 
TONE_SIZE
 = 48 * 
Á˘‹
;

649 
key_pﬁl_≥riod
 = 5;

650 
TONE_SIZE
 = 240 * 
Á˘‹
;

652 
SIZEBUF
 = 768 * 
Á˘‹
;

654 
	`dñCWT⁄eGí
 (
gí
);

655 
gí
 = 
	`√wCWT⁄eGí
 (
gaö
, 
‰eq
, 
ømp
,Ñamp, 
TONE_SIZE
, 
§
);

656 
	}
}

	@keyer.c

43 
	~<keyî.h
>

48 
BOOLEAN


49 
	$klogic
 (
KeyîLogic
 
kl
,

50 
BOOLEAN
 
dô
,

51 
BOOLEAN
 
dah
,

52 
REAL
 
wpm
,

53 
ümbicmode
,

54 
BOOLEAN
 
midñemítmodeB
,

55 
BOOLEAN
 
dômem‹y
,

56 
BOOLEAN
 
dahmem‹y
,

57 
BOOLEAN
 
autoch¨•acög
,

58 
BOOLEAN
 
autow‹d•acög
, 
weight
, 
REAL
 
tickÀn
)

60 
REAL
 
dôÀn
 = 1200 / 
wpm
;

61 
£t_ñemít_timeouts
 = 
NO_TIMEOUTS_SCHED
;

64 i‡(!
kl
->
Êag
.
öô
)

66 
kl
->
Êag
.
¥ev
.
dô
 = dit;

67 
kl
->
Êag
.
¥ev
.
dah
 = dah;

68 
kl
->
ñemít
.
œ°
 = kl->ñemít.
cuº
 = 
NO_ELEMENT
;

69 
kl
->
ñemít
.
ümb
 = 
NO_PADDLE_SQUEEZE
;

70 
kl
->
ñemít
.
psqam
 = 0;

71 
kl
->
ñemít
.
övtd
 = 0;

72 
kl
->
timeout
.
midl
 = kl->timeout.
bìp
 = kl->timeout.
ñem
 = 0;

73 
kl
->
timeout
.
dœy
 = 0;

74 
kl
->
dœy_ty≥
 = 
NO_DELAY
;

75 
kl
->
Êag
.
öô
 = 1;

79 
kl
->
timeout
.
dœy
 -(kl->timeout.dœy > 0 ? 
tickÀn
 : 0);

80 i‡(
kl
->
timeout
.
dœy
 <= 0)

86 i‡(
kl
->
timeout
.
ñem
 <= 0 &&

87 
kl
->
dœy_ty≥
 =
CHAR_SPACING_DELAY
 && 
autow‹d•acög
)

89 
kl
->
timeout
.
dœy
 = 
dôÀn
 * 4;

90 
kl
->
dœy_ty≥
 = 
WORD_SPACING_DELAY
;

94 
kl
->
dœy_ty≥
 = 
NO_DELAY
;

95 
kl
->
timeout
.
midl
 -kl->timeout.mid»> 0 ? 
tickÀn
 : 0;

96 
kl
->
timeout
.
bìp
 -kl->timeout.bì∞> 0 ? 
tickÀn
 : 0;

97 
kl
->
timeout
.
ñem
 -kl->timeout.ñem > 0 ? 
tickÀn
 : 0;

102 i‡(
dô
 && 
dah
)

104 
kl
->
ñemít
.
ümb
 = 
PADDLES_SQUEEZED
;

107 i‡(
kl
->
timeout
.
midl
 <= 0)

108 
kl
->
ñemít
.
psqam
 = 1;

112 i‡(!
dô
 && !
dah
 && 
kl
->
ñemít
.
ümb
 =
PADDLES_SQUEEZED
)

113 
kl
->
ñemít
.
ümb
 = 
PADDLES_RELEASED
;

116 i‡(
kl
->
timeout
.
ñem
 <0 && kl->
ñemít
.
cuº
 !
NO_ELEMENT
)

118 
kl
->
ñemít
.
œ°
 = kl->ñemít.
cuº
;

121 i‡((
dô
 && 
dah
) ||

122 (
kl
->
ñemít
.
övtd
 && kl->ñemít.
ümb
 !
PADDLES_RELEASED
) ||

123 (
kl
->
ñemít
.
ümb
 =
PADDLES_RELEASED
 && 
ümbicmode
 =
MODE_B
 && (!
midñemítmodeB
 || kl->ñemít.
psqam
)))

125 i‡(
kl
->
ñemít
.
œ°
 =
DAH
)

126 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DIT
;

128 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DAH
;

133 
kl
->
ñemít
.
cuº
 = 
NO_ELEMENT
;

136 i‡(
autoch¨•acög
 && !
dô
 && !
dah
)

138 
kl
->
timeout
.
dœy
 = 
dôÀn
 * 2;

139 
kl
->
dœy_ty≥
 = 
CHAR_SPACING_DELAY
;

143 
kl
->
ñemít
.
övtd
 = 0;

144 
kl
->
ñemít
.
ümb
 = 
NO_PADDLE_SQUEEZE
;

145 
kl
->
ñemít
.
psqam
 = 0;

149 i‡(
kl
->
ñemít
.
cuº
 =
NO_ELEMENT
)

151 i‡(
dah
)

152 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DAH
;

153 i‡(
dô
)

154 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DIT
;

158 i‡(
kl
->
ñemít
.
cuº
 =
DIT
 && !kl->
Êag
.
¥ev
.
dah
 && dah && 
dahmem‹y
)

159 
kl
->
ñemít
.
övtd
 = 1;

162 i‡(
kl
->
ñemít
.
cuº
 =
DAH
 && !kl->
Êag
.
¥ev
.
dô
 && dô && 
dômem‹y
)

163 
kl
->
ñemít
.
övtd
 = 1;

169 i‡(
kl
->
timeout
.
dœy
 > 0 &&

170 !
dô
 &&

171 !
dah
 &&

172 ((
kl
->
ñemít
.
cuº
 =
DIT
 &&

173 !
dômem‹y
Ë|| (
kl
->
ñemít
.
cuº
 =
DAH
 && !
dahmem‹y
)))

174 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
NO_ELEMENT
;

177 
£t_ñemít_timeouts
)

179 
NO_ELEMENT
:

180 
kl
->
timeout
.
bìp
 = 0;

181 
kl
->
timeout
.
midl
 = 0;

182 
kl
->
timeout
.
ñem
 = 0;

185 
DIT
:

186 
kl
->
timeout
.
bìp
 = (
dôÀn
 * (
REAL
Ë
weight
) / 50;

187 
kl
->
timeout
.
midl
 = kl->timeout.
bìp
 / 2;

188 
kl
->
timeout
.
ñem
 = 
dôÀn
 * 2;

191 
DAH
:

192 
kl
->
timeout
.
bìp
 = (
dôÀn
 * (
REAL
Ë
weight
) / 50 + ditlen * 2;

193 
kl
->
timeout
.
midl
 = kl->timeout.
bìp
 / 2;

194 
kl
->
timeout
.
ñem
 = 
dôÀn
 * 4;

198 
kl
->
Êag
.
¥ev
.
dô
 = dit;

199 
kl
->
Êag
.
¥ev
.
dah
 = dah;

201  
kl
->
timeout
.
bìp
 > 0 && kl->timeout.
dœy
 <= 0;

202 
	}
}

204 
KeyîSèã


205 
	$√wKeyîSèã
 ()

207  (
KeyîSèã
Ë
	`ß„Æloc
 (1,  (
KeyîSèãInfo
), "newKeyerState");

208 
	}
}

211 
	$dñKeyîSèã
 (
KeyîSèã
 
ks
)

213 
	`ß„‰ì
 ((*Ë
ks
);

214 
	}
}

216 
KeyîLogic


217 
	$√wKeyîLogic
 ()

219  (
KeyîLogic
Ë
	`ß„Æloc
 (1,  (
KeyîLogicInfo
), "newKeyerLogic");

220 
	}
}

223 
	$dñKeyîLogic
 (
KeyîLogic
 
kl
)

225 
	`ß„‰ì
 ((*Ë
kl
);

226 
	}
}

	@keyer.h

40 #i‚de‡
_keyî_h


41 
	#_keyî_h


	)

43 
	~<‰omsys.h
>

44 
	~<b™Æ.h
>

45 
	~<•lôfõlds.h
>

46 
	~<d©©y≥s.h
>

50 
	#DSR_LINE_CLOSED_KEY
 (1)

	)

51 
	#CTS_LINE_CLOSED_KEY
 (1)

	)

52 
	#DTR_LINE_SET
 (0)

	)

53 
	#RTS_LINE_SET
 (0)

	)

55 
	#NO_TIMEOUTS_SCHED
 (-2)

	)

56 
	#NO_ELEMENT
 (-1)

	)

57 
	#DIT
 (0)

	)

58 
	#DAH
 (1)

	)

59 
	#MODE_A
 (0)

	)

60 
	#MODE_B
 (1)

	)

61 
	#NO_PADDLE_SQUEEZE
 (0)

	)

62 
	#PADDLES_SQUEEZED
 (1)

	)

63 
	#PADDLES_RELEASED
 (2)

	)

64 
	#NO_DELAY
 (0)

	)

65 
	#CHAR_SPACING_DELAY
 (1)

	)

66 
	#WORD_SPACING_DELAY
 (2)

	)

67 
	#DEBOUNCE_BUF_MAX_SIZE
 (30)

	)

71 
	s_keyî_°©e


75 
BOOLEAN
 
	mümbic
,

76 
	mmdlmdB
, 
	mªvpdl
;

80 
BOOLEAN
 
	mdô
, 
	mdah
;

81 } 
	mmem‹y
;

85 
BOOLEAN
 
	mkh¨
, 
	mw‹d
;

86 } 
	mauto•a˚
;

88 } 
	mÊag
;

90 
	mdeboun˚
,

91 
	mmode
,

92 
	mweight
;

94 
REAL
 
	mwpm
;

96 } 
	tKeyîSèãInfo
, *
	tKeyîSèã
;

98 
KeyîSèã
 
√wKeyîSèã
 ();

99 
dñKeyîSèã
 (
KeyîSèã
 
ks
);

103 
	s_keyî_logic


107 
BOOLEAN
 
	möô
;

111 
BOOLEAN
 
	mdô
, 
	mdah
;

112 } 
	m¥ev
;

114 } 
	mÊag
;

118 
BOOLEAN
 
	mövtd
,

119 
	mpsqam
;

120 
	mcuº
,

121 
	mümb
,

122 
	mœ°
;

123 } 
	mñemít
;

127 
REAL
 
	mbìp
, 
	mdœy
, 
	mñem
, 
	mmidl
;

128 } 
	mtimeout
;

130 
	mdœy_ty≥
;

132 } 
	tKeyîLogicInfo
, *
	tKeyîLogic
;

134 
KeyîLogic
 
√wKeyîLogic
 ();

135 
dñKeyîLogic
 (
KeyîLogic
 
kl
);

139 
BOOLEAN
 
klogic
 (
KeyîLogic
 
kl
,

140 
BOOLEAN
 
dô
,

141 
BOOLEAN
 
dah
,

142 
REAL
 
wpm
,

143 
ümbicmode
,

144 
BOOLEAN
 
midñemítmodeB
,

145 
BOOLEAN
 
dômem‹y
,

146 
BOOLEAN
 
dahmem‹y
,

147 
BOOLEAN
 
autoch¨•acög
,

148 
BOOLEAN
 
autow‹d•acög
, 
weight
, 
REAL
 
tickÀn
);

150 
BOOLEAN
 
ªad_°øight_key_£rül
 (
KeyîSèã
 
ks
, 
fd
);

151 
BOOLEAN
 
ªad_ümbic_key_£rül
 (
KeyîSèã
 
ks
, 
fd
, 
KeyîLogic
 
kl
,

152 
REAL
 
tickÀn
);

	@keyerio.c

37 
	~<keyî.h
>

44 
BOOLEAN


45 
	$ªad_°øight_key
 (
KeyîSèã
 
ks
, 
BOOLEAN
 
keyed
)

47 
i
, 
j
;

48 
BOOLEAN
 
key°©e
 = 0;

49 
deboun˚_buf_i
 = 0, 
deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
];

50 
deboun˚_buf
[
deboun˚_buf_i
] = 
keyed
;

51 
deboun˚_buf_i
++;

58 i‡(
deboun˚_buf_i
 >
ks
->
deboun˚
)

60 
deboun˚_buf_i
 = 0;

62 
j
 = 0;

63 
i
 = 0; i < 
ks
->
deboun˚
; i++)

64 i‡(
deboun˚_buf
[
i
])

65 
j
++;

66 
key°©e
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

69  
key°©e
;

70 
	}
}

77 
BOOLEAN


78 
	$ªad_ümbic_key
 (
KeyîSèã
 
ks
, 
BOOLEAN
 
dash
, BOOLEAN 
dŸ
, 
KeyîLogic
 
kl
,

79 
REAL
 
tickÀn
)

81 
i
, 
j
;

82 
BOOLEAN
 
dah_deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
],

83 
dô_deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
];

84 
dah
 = 0, 
deboun˚_buf_i
 = 0, 
dô
 = 0;

86 i‡(
ks
->
Êag
.
ªvpdl
)

88 
dah_deboun˚_buf
[
deboun˚_buf_i
] = 
dŸ
;

89 
dô_deboun˚_buf
[
deboun˚_buf_i
] = 
dash
;

93 
dah_deboun˚_buf
[
deboun˚_buf_i
] = 
dash
;

94 
dô_deboun˚_buf
[
deboun˚_buf_i
] = 
dŸ
;

96 
deboun˚_buf_i
++;

103 i‡(
deboun˚_buf_i
 >
ks
->
deboun˚
)

105 
deboun˚_buf_i
 = 0;

107 
j
 = 0;

108 
i
 = 0; i < 
ks
->
deboun˚
; i++)

110 i‡(
dah_deboun˚_buf
[
i
])

111 
j
++;

113 
dah
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

115 
j
 = 0;

116 
i
 = 0; i < 
ks
->
deboun˚
; i++)

118 i‡(
dô_deboun˚_buf
[
i
])

119 
j
++;

121 
dô
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

124  
	`klogic
 (
kl
,

125 
dô
,

126 
dah
,

127 
ks
->
wpm
,

128 
ks
->
mode
,

129 
ks
->
Êag
.
mdlmdB
,

130 
ks
->
Êag
.
mem‹y
.
dô
,

131 
ks
->
Êag
.
mem‹y
.
dah
,

132 
ks
->
Êag
.
auto•a˚
.
kh¨
,

133 
ks
->
Êag
.
auto•a˚
.
w‹d
, ks->
weight
, 
tickÀn
);

134 
	}
}

	@lmadf.c

34 
	~<lmadf.h
>

39 
	#ssiz
 (
lms
->
sig«l_size
)

	)

40 
	#asiz
 (
lms
->
ad≠tive_fûãr_size
)

	)

41 
	#d±r
 (
lms
->
dñay_löe_±r
)

	)

42 
	#øã
 (
lms
->
ad≠èti⁄_øã
)

	)

43 
	#Àak
 (
lms
->
Àakage
)

	)

45 
	#ssig
(
n
Ë(
	`CXBªÆ
(
lms
->
sig«l
,“)))

	)

46 
	#ssig_i
(
n
Ë(
	`CXBimag
(
lms
->
sig«l
,“)))

	)

47 
	#cssig
(
n
Ë(
	`CXBd©a
(
lms
->
sig«l
,“)))

	)

49 
	#dœy
(
n
Ë(
lms
->
dñay_löe
[“)])

	)

51 
	#afû
(
n
Ë(
lms
->
ad≠tive_fûãr
[“)])

	)

52 
	#wøp
(
n
Ë((“Ë+ (
lms
->
dñay
Ë+ (lms->
dñay_löe_±r
)Ë& (lms->
mask
))

	)

53 
	#bump
(
n
Ë((“Ë+ (
lms
->
mask
)Ë& (lms->mask))

	)

55 #ifde‡
REALLMS


56 
LMSR


57 
	$√w_lm§
 (
CXB
 
sig«l
,

58 
dñay
,

59 
REAL
 
ad≠èti⁄_øã
,

60 
REAL
 
Àakage
, 
ad≠tive_fûãr_size
, 
fûãr_ty≥
)

62 
LMSR
 
lms
 = (LMSRË
	`ß„Æloc
 (1,  (
_lms°©e
), "new_lmsr state");

64 
lms
->
sig«l
 = signal;

65 
lms
->
sig«l_size
 = 
	`CXBsize
 (lms->
sig«l
);

66 
lms
->
dñay
 = delay;

67 
lms
->
size
 = 512;

68 
lms
->
mask
 =Üms->
size
 - 1;

69 
lms
->
dñay_löe
 = 
	`√wvec_REAL
 (lms->
size
, "lmsr delay");

70 
lms
->
ad≠èti⁄_øã
 =ádaptation_rate;

71 
lms
->
Àakage
 =Üeakage;

72 
lms
->
ad≠tive_fûãr_size
 =ádaptive_filter_size;

73 
lms
->
ad≠tive_fûãr
 = 
	`√wvec_REAL
 (128, "lmsr filter");

74 
lms
->
fûãr_ty≥
 = filter_type;

75 
lms
->
dñay_löe_±r
 = 0;

77  
lms
;

78 
	}
}

81 
	$dñ_lm§
 (
LMSR
 
lms
)

83 i‡(
lms
)

85 
	`dñvec_REAL
 (
lms
->
dñay_löe
);

86 
	`dñvec_REAL
 (
lms
->
ad≠tive_fûãr
);

87 
	`ß„‰ì
 ((*Ë
lms
);

89 
	}
}

94 
	$lm§_ad≠t_i
 (
LMSR
 
lms
)

96 
i
, 
j
, 
k
;

97 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

98 
REAL
 
accum
, 
îr‹
;

100 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

102 
i
 = 0; i < 
ssiz
; i++)

105 
	`dœy
 (
d±r
Ë
	`ssig
 (
i
);

106 
accum
 = 0.0;

107 
sum_sq
 = 0.0;

109 
j
 = 0; j < 
asiz
; j++)

111 
k
 = 
	`wøp
 (
j
);

112 
sum_sq
 +
	`sqr
 (
	`dœy
 (
k
));

113 
accum
 +
	`afû
 (
j
Ë* 
	`dœy
 (
k
);

116 
îr‹
 = 
	`ssig
 (
i
Ë- 
accum
;

117 
	`ssig_i
 (
i
Ë
	`ssig
 (iË
îr‹
;

119 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-6));

120 
îr‹
 *
s˛2
;

121 
j
 = 0; j < 
asiz
; j++)

123 
k
 = 
	`wøp
 (
j
);

124 
	`afû
 (
j
Ëafû (jË* 
s˛1
 + 
îr‹
 * 
	`dœy
 (
k
);

127 
d±r
 = 
	`bump
 (dptr);

129 
	}
}

132 
	$lm§_ad≠t_n
 (
LMSR
 
lms
)

134 
i
, 
j
, 
k
;

135 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

136 
REAL
 
accum
, 
îr‹
;

138 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

140 
i
 = 0; i < 
ssiz
; i++)

143 
	`dœy
 (
d±r
Ë
	`ssig
 (
i
);

144 
accum
 = 0.0;

145 
sum_sq
 = 0.0;

147 
j
 = 0; j < 
asiz
; j++)

149 
k
 = 
	`wøp
 (
j
);

150 
sum_sq
 +
	`sqr
 (
	`dœy
 (
k
));

151 
accum
 +
	`afû
 (
j
Ë* 
	`dœy
 (
k
);

154 
îr‹
 = 
	`ssig
 (
i
Ë- 
accum
;

155 
	`ssig_i
 (
i
Ë
	`ssig
 (iË
accum
;

157 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-6));

158 
îr‹
 *
s˛2
;

159 
j
 = 0; j < 
asiz
; j++)

161 
k
 = 
	`wøp
 (
j
);

162 
	`afû
 (
j
Ëafû (jË* 
s˛1
 + 
îr‹
 * 
	`dœy
 (
k
);

165 
d±r
 = 
	`bump
 (dptr);

167 
	}
}

170 
LMSR


171 
	$√w_lm§
 (
CXB
 
sig«l
,

172 
dñay
,

173 
REAL
 
ad≠èti⁄_øã
,

174 
REAL
 
Àakage
, 
ad≠tive_fûãr_size
, 
fûãr_ty≥
)

176 
LMSR
 
lms
 = (LMSRË
	`ß„Æloc
 (1,  (
_lms°©e
), "new_lmsr state");

178 
lms
->
sig«l
 = 
	`√wCXB
(sig«l->
size
,
	`CXBba£
(signal),"lmadf CXB");

179 
lms
->
sig«l_size
 = 
	`CXBsize
 (lms->
sig«l
);

180 
lms
->
dñay
 = delay;

181 
lms
->
size
 = 4096;

182 
lms
->
mask
 =Üms->
size
 - 1;

183 
lms
->
dñay_löe
 = 
	`√wvec_COMPLEX
 (lms->
size
, "lmsr delay");

184 
lms
->
ad≠èti⁄_øã
 =ádaptation_rate;

185 
lms
->
Àakage
 =Üeakage;

186 
lms
->
ad≠tive_fûãr_size
 =ádaptive_filter_size;

187 
lms
->
ad≠tive_fûãr
 = 
	`√wvec_COMPLEX
 (128, "lmsr filter");

188 
lms
->
fûãr_ty≥
 = filter_type;

189 
lms
->
dñay_löe_±r
 = 0;

191  
lms
;

192 
	}
}

195 
	$dñ_lm§
 (
LMSR
 
lms
)

197 i‡(
lms
)

199 
	`dñCXB
(
lms
->
sig«l
);

200 
	`dñvec_COMPLEX
 (
lms
->
dñay_löe
);

201 
	`dñvec_COMPLEX
 (
lms
->
ad≠tive_fûãr
);

202 
	`ß„‰ì
 ((*Ë
lms
);

204 
	}
}

209 
	$lm§_ad≠t_i
 (
LMSR
 
lms
)

211 
i
, 
j
, 
k
;

212 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

213 
COMPLEX
 
accum
, 
îr‹
;

215 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

217 
i
 = 0; i < 
ssiz
; i++)

220 
	`dœy
 (
d±r
Ë
	`CXBd©a
 (
lms
->
sig«l
, 
i
);

221 
accum
 = 
cxzîo
;

222 
sum_sq
 = 0;

224 
j
 = 0; j < 
asiz
; j++)

226 
k
 = 
	`wøp
 (
j
);

227 
sum_sq
 +
	`Csqrmag
 (
	`dœy
 (
k
));

228 
accum
.
ª
 +
	`afû
 (
j
).ª * 
	`dœy
 (
k
).re;

229 
accum
.
im
 +
	`afû
 (
j
).im * 
	`dœy
 (
k
).im;

232 
îr‹
 = 
	`Csub
(
	`cssig
(
i
),
accum
);

233 
	`cssig
(
i
Ë
îr‹
;

237 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-7));

238 
îr‹
 = 
	`Cs˛
”º‹,
s˛2
);

239 
j
 = 0; j < 
asiz
; j++)

241 
k
 = 
	`wøp
 (
j
);

242 
	`afû
 (
j
).
ª
 =áfû (j).ª * 
s˛1
 + 
îr‹
.ª * 
	`dœy
 (
k
).re;

243 
	`afû
 (
j
).
im
 =áfû (j).im * 
s˛1
 + 
îr‹
.im * 
	`dœy
 (
k
).im;

246 
d±r
 = 
	`bump
 (dptr);

248 
	}
}

251 
	$lm§_ad≠t_n
 (
LMSR
 
lms
)

253 
i
, 
j
, 
k
;

254 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

255 
COMPLEX
 
accum
, 
îr‹
;

257 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

259 
i
 = 0; i < 
ssiz
; i++)

262 
	`dœy
 (
d±r
Ë
	`cssig
 (
i
);

263 
accum
 = 
cxzîo
;

264 
sum_sq
 = 0.0;

266 
j
 = 0; j < 
asiz
; j++)

268 
k
 = 
	`wøp
 (
j
);

269 
sum_sq
 +
	`Csqrmag
 (
	`dœy
 (
k
));

270 
accum
.
ª
 +
	`afû
 (
j
).ª * 
	`dœy
 (
k
).re;

271 
accum
.
im
 +
	`afû
 (
j
).im * 
	`dœy
 (
k
).im;

274 
îr‹
 = 
	`Csub
(
	`cssig
 (
i
),
accum
);

275 
	`cssig
(
i
)
accum
;

277 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-7));

278 
îr‹
 = 
	`Cs˛
”º‹,
s˛2
);

279 
j
 = 0; j < 
asiz
; j++)

281 
k
 = 
	`wøp
 (
j
);

282 
	`afû
 (
j
).
ª
 =áfû (j).ª * 
s˛1
 + 
îr‹
.ª * 
	`dœy
 (
k
).re;

283 
	`afû
 (
j
).
im
 =áfû (j).im * 
s˛1
 + 
îr‹
.im * 
	`dœy
 (
k
).im;

286 
d±r
 = 
	`bump
 (dptr);

288 
	}
}

292 
	$lm§_ad≠t
 (
LMSR
 
lms
)

294 
lms
->
fûãr_ty≥
)

296 
LMADF_NOISE
:

297 
	`lm§_ad≠t_n
 (
lms
);

299 
LMADF_INTERFERENCE
:

300 
	`lm§_ad≠t_i
 (
lms
);

303 
	}
}

306 
	$dñ_blms
 (
BLMS
 
blms
)

308 i‡(
blms
)

310 
	`f·wf_de°roy_∂™
 (
blms
->
X∂™
);

311 
	`f·wf_de°roy_∂™
 (
blms
->
Y∂™
);

312 
	`f·wf_de°roy_∂™
 (
blms
->
Eºh©∂™
);

313 
	`f·wf_de°roy_∂™
 (
blms
->
UPD∂™
);

314 
	`f·wf_de°roy_∂™
 (
blms
->
W∂™
);

315 
	`dñvec_COMPLEX
 (
blms
->
upd©e
);

316 
	`dñvec_COMPLEX
 (
blms
->
Upd©e
);

317 
	`dñvec_COMPLEX
 (
blms
->
Wh©
);

318 
	`dñvec_COMPLEX
 (
blms
->
Xh©
);

319 
	`dñvec_COMPLEX
 (
blms
->
îr‹
);

320 
	`dñvec_COMPLEX
 (
blms
->
Eºh©
);

321 
	`dñvec_COMPLEX
 (
blms
->
Yh©
);

322 
	`dñvec_COMPLEX
 (
blms
->
y
);

323 
	`dñvec_COMPLEX
 (
blms
->
dñay_löe
);

324 
	`ß„‰ì
 ((*Ë
blms
);

326 
	}
}

328 
BLMS


329 
	$√w_blms
 (
CXB
 
sig«l
, 
REAL
 
ad≠èti⁄_øã
, REAL 
Àak_øã
, 
fûãr_ty≥
,

330 
pbôs
)

332 
BLMS
 
tmp
;

333 
tmp
 = (
BLMS
Ë
	`ß„Æloc
 (1,  (
_blocklms
), "blockÜms");

334 
tmp
->
dñay_löe
 = 
	`√wvec_COMPLEX
 (256, "blockÜms delayÜine");

335 
tmp
->
y
 = 
	`√wvec_COMPLEX
 (256, "blockÜms output signal");

336 
tmp
->
Yh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms outputÅransform");

337 
tmp
->
Eºh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms ErrorÅransform");

338 
tmp
->
îr‹
 = 
	`√wvec_COMPLEX
 (256, "blockÜms Error signal");

339 
tmp
->
Xh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms signalÅransform");

340 
tmp
->
Wh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms filterÅransform");

341 
tmp
->
Upd©e
 = 
	`√wvec_COMPLEX
 (256, "blockÜms updateÅransform");

342 
tmp
->
upd©e
 = 
	`√wvec_COMPLEX
 (256, "blockÜms update signal");

343 
tmp
->
ad≠èti⁄_øã
 =ádaptation_rate;

344 
tmp
->
Àak_øã
 = 1.0f -Üeak_rate;

345 
tmp
->
sig«l
 = signal;

346 
tmp
->
fûãr_ty≥
 = filter_type;

347 
tmp
->
X∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

348 (
f·wf_com∂ex
 *Ë
tmp
->
dñay_löe
,

349 (
f·wf_com∂ex
 *Ë
tmp
->
Xh©
,

350 
FFTW_FORWARD
, 
pbôs
);

352 
tmp
->
Y∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

353 (
f·wf_com∂ex
 *Ë
tmp
->
Yh©
,

354 (
f·wf_com∂ex
 *Ë
tmp
->
y
,

355 
FFTW_BACKWARD
, 
pbôs
);

357 
tmp
->
Eºh©∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

358 (
f·wf_com∂ex
 *Ë
tmp
->
îr‹
,

359 (
f·wf_com∂ex
 *Ë
tmp
->
Eºh©
,

360 
FFTW_FORWARD
, 
pbôs
);

361 
tmp
->
UPD∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

362 (
f·wf_com∂ex
 *Ë
tmp
->
Eºh©
,

363 (
f·wf_com∂ex
 *Ë
tmp
->
upd©e
,

364 
FFTW_BACKWARD
, 
pbôs
);

365 
tmp
->
W∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

366 (
f·wf_com∂ex
 *Ë
tmp
->
upd©e
,

367 (
f·wf_com∂ex
 *Ë
tmp
->
Upd©e
,

368 
FFTW_FORWARD
, 
pbôs
);

369  
tmp
;

370 
	}
}

372 
	#BLKSCL
 (
REAL
)(3.90625e-3)

	)

374 
	$blms_ad≠t
 (
BLMS
 
blms
)

376 
sigsize
 = 
	`CXBhave
 (
blms
->
sig«l
);

377 
sigidx
 = 0;

381 
j
;

382 
	`mem˝y
 (
blms
->
dñay_löe
, &blms->dñay_löe[128],  (
COMPLEX
) * 128);

383 
	`mem˝y
 (&
blms
->
dñay_löe
[128], &
	`CXBd©a
 (blms->
sig«l
, 
sigidx
),  (
COMPLEX
) * 128);

384 
	`f·wf_execuã
 (
blms
->
X∂™
);

385 
j
 = 0; j < 256; j++) {

386 
blms
->
Yh©
[
j
] = 
	`Cmul
 (blms->
Wh©
[j], blms->
Xh©
[j]);

387 
blms
->
Xh©
[
j
] = 
	`C⁄jg
 (blms->Xhat[j]);

389 
	`f·wf_execuã
 (
blms
->
Y∂™
);

390 
j
 = 128; j < 256; j++)

391 
blms
->
y
[
j
] = 
	`Cs˛
 (blms->y[j], 
BLKSCL
);

392 
	`mem£t
 (
blms
->
y
, 0, 128 *  (
COMPLEX
));

393 
j
 = 128; j < 256; j++)

394 
blms
->
îr‹
[
j
] = 
	`Csub
 (blms->
dñay_löe
[j], blms->
y
[j]);

396 i‡(
blms
->
fûãr_ty≥
)

397 
	`mem˝y
 (&
	`CXBd©a
 (
blms
->
sig«l
, 
sigidx
), &blms->
y
[128], 128 *  (
COMPLEX
));

399 
	`mem˝y
 (&
	`CXBd©a
 (
blms
->
sig«l
, 
sigidx
), &blms->
îr‹
[128], 128 *  (
COMPLEX
));

401 
	`f·wf_execuã
 (
blms
->
Eºh©∂™
);

402 
j
 = 0; j < 256; j++)

403 
blms
->
Eºh©
[
j
] = 
	`Cmul
 (blms->Eºh©[j], blms->
Xh©
[j]);

404 
	`f·wf_execuã
 (
blms
->
UPD∂™
);

405 
j
 = 0; j < 128; j++)

406 
blms
->
upd©e
[
j
] = 
	`Cs˛
 (blms->upd©e[j], 
BLKSCL
);

407 
	`mem£t
 (&
blms
->
upd©e
[128], 0,  (
COMPLEX
) * 128);

409 
	`f·wf_execuã
 (
blms
->
W∂™
);

410 
j
 = 0; j < 256; j++)

412 
blms
->
Wh©
[
j
] = 
	`Cadd
 (
	`Cs˛
 (blms->Wh©[j], blms->
Àak_øã
),

413 
	`Cs˛
 (
blms
->
Upd©e
[
j
], blms->
ad≠èti⁄_øã
));

415 
sigidx
 += 128;

416 } 
sigidx
 < 
sigsize
);

417 
	}
}

	@lmadf.h

34 #i‚de‡
_lmadf_h


36 
	#_lmadf_h


	)

37 
	~<f·w3.h
>

38 
	~<f·w3_fix.h
>

39 
	~<‰omsys.h
>

40 
	~<b™Æ.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

46 
	#LMADF_INTERFERENCE
 0

	)

47 
	#LMADF_NOISE
 1

	)

48 
	#LMADF_NOSIG
 (-1)

	)

49 
	#LMADF_NOLINE
 (-2)

	)

50 
	#LMADF_NOFILT
 (-3)

	)

52 
lmadf_îr
;

55 
	s_BlockLMS


57 
CXB
 
	msig«l
;

58 
COMPLEX
 *
	mdñay_löe
;

59 
COMPLEX
 *
	my
;

60 
COMPLEX
 *
	mXh©
;

61 
COMPLEX
 *
	mWh©
;

62 
COMPLEX
 *
	mY
;

63 
COMPLEX
 *
	mYh©
;

64 
COMPLEX
 *
	mîr‹
;

65 
COMPLEX
 *
	mEºh©
;

66 
COMPLEX
 *
	mUpd©e
;

67 
COMPLEX
 *
	mupd©e
;

68 
REAL
 
	mad≠èti⁄_øã
;

69 
REAL
 
	mÀak_øã
;

70 
	mfûãr_ty≥
;

71 
f·wf_∂™
 
	mX∂™
, 
	mY∂™
, 
	mW∂™
, 
	mEºh©∂™
, 
	mUPD∂™
;

72 } 
	t_blocklms
, *
	tBLMS
;

74 #ifde‡
REALLMS


76 
	s_LMSR


78 
CXB
 
	msig«l
;

79 
	msig«l_size
;

80 
REAL
 *
	mdñay_löe
;

81 
REAL
 *
	mad≠tive_fûãr
;

82 
REAL
 
	mad≠èti⁄_øã
;

83 
REAL
 
	mÀakage
;

84 
	mad≠tive_fûãr_size
;

85 
	mfûãr_ty≥
;

86 
	mdñay
;

87 
	mdñay_löe_±r
;

88 
	msize
;

89 
	mmask
;

90 } *
	tLMSR
, 
	t_lms°©e
;

94 
	s_LMSR


96 
CXB
 
	msig«l
;

97 
	msig«l_size
;

98 
COMPLEX
 *
	mdñay_löe
;

99 
COMPLEX
 *
	mad≠tive_fûãr
;

100 
REAL
 
	mad≠èti⁄_øã
;

101 
REAL
 
	mÀakage
;

102 
	mad≠tive_fûãr_size
;

103 
	mfûãr_ty≥
;

104 
	mdñay
;

105 
	mdñay_löe_±r
;

106 
	msize
;

107 
	mmask
;

108 } *
	tLMSR
, 
	t_lms°©e
;

112 
LMSR
 
√w_lm§
 (
CXB
 
sig«l
,

113 
dñay
,

114 
REAL
 
ad≠èti⁄_øã
,

115 
REAL
 
Àakage
,

116 
ad≠tive_fûãr_size
, 
fûãr_ty≥
);

119 
dñ_lm§
 (
LMSR
 
lms
);

121 
lm§_ad≠t
 (
LMSR
 
lms
);

123 
BLMS
 
√w_blms
 (
CXB
 
sig«l
, 
REAL
 
ad≠èti⁄_øã
, REAL 
Àak_øã
,

124 
fûãr_ty≥
, 
pbôs
);

126 
blms_ad≠t
 (
BLMS
 
blms
);

128 
dñ_blms
 (
BLMS
 
blms
);

	@local.h

42 #i‚de‡
_loˇl_h


43 
	#_loˇl_h


	)

45 
	~<comm⁄.h
>

47 
	#RCBASE
 ".DâSPrc"

	)

48 
	#PARMPATH
 "\\\\.\\pùe\\SDRcomm™ds"

	)

49 
	#METERPATH
 "\\\\.\\pùe\\SDRmëî"

	)

50 
	#SPECPATH
 "\\\\.\\pùe\\SDR•e˘rum"

	)

51 
	#WISDOMPATH
 ".\\wisdom"

	)

54 
	s_loc


56 
«me
[
MAXPATHLEN
];

59 
rcfûe
[
MAXPATHLEN
],

60 
∑rm
[
MAXPATHLEN
],

61 
mëî
[
MAXPATHLEN
], 
•ec
[MAXPATHLEN], 
wisdom
[MAXPATHLEN];

62 } 
∑th
;

65 
REAL
 
øã
;

66 
size
, 
ƒx
, 
•ec
, 
comp
;

67 
SDRMODE
 
mode
;

68 } 
def
;

71 
rög
;

72 } 
mu…
;

73 } 
loc
[3];

	@malloc16.c

8 
	~<mÆloc16.h
>

9 
	~<°rög.h
>

10 
	tUötPå
;

12 * 
	$mÆloc16Align
(
BlockSize
)

17 
UötPå
 
Ba£På
=(UötPå)
	`mÆloc
(
BlockSize
+32);

18 
UötPå
 
Alig√dPå
=(
Ba£På
+31)&-16;

24 i‡(
Alig√dPå
==
Ba£På
) AlignedPtr+=16;

27 *((*)
Alig√dPå
-1)=()(Alig√dPå-
Ba£På
);

29  (*)
Alig√dPå
;

30 
	}
}

33 *
	$mÆloc16Align
(
size
){

34 *
p
;

35 **
p1
;

37 if((
p
 = 
	`mÆloc
(
size
+31)Ë=
NULL
)

38  
NULL
;

41 
p1
 = (**)((()
p
 + 31) & (~15));

44 
p1
[-1] = 
p
;

47  (*)
p1
;

48 
	}
}

50 *
	$ˇŒoc16Align
(
size_t
 
nmemb
,size_à
size
){

51 
nbyãs
;

52 *
p
;

54 
nbyãs
 = 
nmemb
*
size
;

55 if((
p
 = 
	`mÆloc16Align
(
nbyãs
)Ë=
NULL
)

56  
NULL
;

58 
	`mem£t
(
p
,0,
nbyãs
);

59  
p
;

60 
	}
}

61 
	$‰ì16Align
(* 
p
)

63 * 
pAlig√d
=(*)
p
;

68 
	`‰ì
(
pAlig√d
 - *(pAligned-1));

69 
	}
}

71 
	$‰ì16Align
(*
p
){

73 if(
p
 !
NULL
){

75 
	`‰ì
(((**)
p
)[-1]);

77 
	}
}

	@malloc16.h

23 #i‚de‡
MALLOC16_H


24 
	#MALLOC16_H


	)

25 #ifde‡
__˝lu•lus


29 
	~<°dlib.h
>

32 *
mÆloc16Align
(
size
);

33 *
ˇŒoc16Align
(
size_t
 
nmemb
,size_à
size
);

34 
‰ì16Align
(*
p
);

36 #ifde‡
__˝lu•lus


	@meter.c

34 
	~<mëî.h
>

	@meter.h

34 #i‚de‡
_mëî_h


35 
	#_mëî_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<rögb.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

51 
	~<dâ•agc.h
>

53 
	~<amd.h
>

54 
	~<fm_demod.h
>

55 
	~<noi£bœnkî.h
>

56 
	~<c‹ª˘IQ.h
>

57 
	~<•ìch¥oc.h
>

58 
	~<•Ÿt⁄e.h
>

59 
	~<upd©e.h
>

63 
	mSIGNAL_STRENGTH
,

64 
	mAVG_SIGNAL_STRENGTH
,

65 
	mADC_REAL
,

66 
	mADC_IMAG
,

67 
	mAGC_GAIN
,

68 
	mMIC
,

69 
	mPWR
,

70 
	mALC
,

71 
	mEQèp
,

72 
	mLEVELER
,

73 
	mCOMP
,

74 
	mCPDR
,

75 
	mALC_G
,

76 
	mLVL_G
,

77 
	mMIC_PK
,

78 
	mALC_PK
,

79 
	mEQ_PK
,

80 
	mLEVELER_PK
,

81 
	mCOMP_PK
,

82 
	mCPDR_PK
,

83 } 
	tMETERTYPE
;

85 
	#RXMETERPTS
 (5)

	)

86 
	#RXMETER_PRE_CONV
 (0)

	)

87 
	#RXMETER_POST_FILT
 (1)

	)

88 
	#RXMETER_POST_AGC
 (2)

	)

89 
	#TXMETERPTS
 (15)

	)

93 
	mRX_SIGNAL_STRENGTH
,

94 
	mRX_AVG_SIGNAL_STRENGTH
,

95 
	mRX_ADC_REAL
,

96 
	mRX_ADC_IMAG
,

97 
	mRX_AGC_GAIN


98 } 
	tRXMETERTYPE
;

102 
	mTX_MIC
,

103 
	mTX_PWR
,

104 
	mTX_ALC
,

105 
	mTX_EQ
,

106 
	mTX_LVL
,

107 
	mTX_COMP
,

108 
	mTX_CPDR
,

109 
	mTX_ALC_G
,

110 
	mTX_LVL_G
,

111 
	mTX_MIC_PK
,

112 
	mTX_LVL_PK
,

113 
	mTX_EQ_PK
,

114 
	mTX_COMP_PK
,

115 
	mTX_CPDR_PK
,

116 
	mTX_ALC_PK
,

117 } 
	tTXMETERTYPE
;

121 
	s_mëî_block


123 
BOOLEAN
 
	mÊag
;

124 
	mœbñ
;

127 
REAL
 
	mvÆ
[
MAXRX
][
RXMETERPTS
];

128 
RXMETERTYPE
 
	mmode
[
MAXRX
];

129 } 
	mrx
;

132 
REAL
 
	mvÆ
[
TXMETERPTS
];

133 
TXMETERTYPE
 
	mmode
;

134 } 
	mtx
;

135 } 
	tMETERBlock
;

	@metermon.c

3 
	~<comm⁄.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<uni°d.h
>

7 
	#SLEEP
 (500000)

	)

9 *
	gcmdsök
 = "./IPC/SDR-1000-0-commands.fifo",

10 *
	gmå§c
 = "./IPC/SDR-1000-0-meter.fifo";

12 
FILE
 *
	gcmdÂ
, *
	gmåÂ
;

14 
	gœbñ
;

15 
REAL
 
	grxm
[
MAXRX
][
RXMETERPTS
];

16 
REAL
 
	gtxm
[
TXMETERPTS
];

19 
	$maö
 (
¨gc
, **
¨gv
)

21 
i
 = 0, 
j
, 
k
, 
œb
 = 
	`gëpid
 ();

23 i‡(!(
cmdÂ
 = 
	`f›í
 (
cmdsök
, "r+")))

24 
	`≥º‹
 (
cmdsök
), 
	`exô
 (1);

25 i‡(!(
måÂ
 = 
	`f›í
 (
må§c
, "r+")))

26 
	`≥º‹
 (
må§c
), 
	`exô
 (1);

28 
	`Ârötf
 (
°dîr
, "metermon OK\n");

33 
	`u¶ìp
 (
SLEEP
);

35 
	`Ârötf
 (
cmdÂ
, "ªqMëî %d\n", 
œb
);

36 
	`fÊush
 (
cmdÂ
);

38 i‡(
	`‰ód
 ((*Ë&
œbñ
,  (), 1, 
måÂ
) != 1)

39 
	`≥º‹
 ("‰ód mëîÜabñ"), 
	`exô
 (1);

41 i‡(
	`‰ód
 ((*Ë
rxm
,  (
REAL
), 
MAXRX
 * 
RXMETERPTS
, 
måÂ
)

42 !
MAXRX
 * 
RXMETERPTS
)

43 
	`≥º‹
 ("‰ód mëî"), 
	`exô
 (1);

45 
	`¥ötf
 ("%d <%d>", 
i
++, 
œbñ
);

46 
j
 = 0; j < 
MAXRX
; j++)

48 
k
 = 0; k < 
RXMETERPTS
; k++)

49 
	`¥ötf
 (" %8.3f", 
rxm
[
j
][
k
]);

50 
	`putch¨
 ('\n');

53 i‡(
	`‰ód
 ((*Ë
txm
,  (
REAL
), 
TXMETERPTS
, 
måÂ
)

54 !
TXMETERPTS
)

55 
	`≥º‹
 ("‰ód mëî"), 
	`exô
 (1);

57 
	`¥ötf
 ("%d\n", 
i
++);

58 
k
 = 0; k < 
TXMETERPTS
; k++)

59 
	`¥ötf
 (" %8.3f", 
txm
[
k
]);

60 
	`putch¨
 ('\n');

63 
	`f˛o£
 (
cmdÂ
);

64 
	`f˛o£
 (
måÂ
);

66 
	`exô
 (0);

67 
	}
}

	@noiseblanker.c

34 
	~<comm⁄.h
>

36 
NB


37 
	$√w_noi£bœnkî
 (
CXB
 
sigbuf
, 
REAL
 
thªshﬁd
)

39 
NB
 
nb
 = (NBË
	`ß„Æloc
 (1,  (
nb°©e
), "newÇbstate");

40 
nb
->
sigbuf
 = sigbuf;

41 
nb
->
thªshﬁd
 =Åhreshold;

42 
nb
->
avîage_mag
 = 1.0;

43 
nb
->
h™gtime
 = 0;

44 
nb
->
sigödex
 = 0;

45 
nb
->
dñayödex
 = 2;

46 
	`mem£t
 (
nb
->
dñay
, 0, 8 *  (
COMPLEX
));

47  
nb
;

48 
	}
}

51 
	$dñ_nb
 (
NB
 
nb
)

53 i‡(
nb
)

55 
	`ß„‰ì
 ((*Ë
nb
);

57 
	}
}

60 
	$noi£bœnkî
 (
NB
 
nb
)

62 
i
;

63 
i
 = 0; i < 
	`CXBsize
 (
nb
->
sigbuf
); i++)

65 
REAL
 
cmag
 = 
	`Cmag
 (
	`CXBd©a
 (
nb
->
sigbuf
, 
i
));

66 
nb
->
dñay
[nb->
sigödex
] = 
	`CXBd©a
 (nb->
sigbuf
, 
i
);

67 
nb
->
avîage_mag
 = (
REAL
Ë(0.999 * (nb->avîage_magË+ 0.001 * 
cmag
);

68 i‡((
nb
->
h™gtime
 =0Ë&& (
cmag
 > (nb->
thªshﬁd
 *Çb->
avîage_mag
)))

69 
nb
->
h™gtime
 = 7;

70 i‡(
nb
->
h™gtime
 > 0)

72 
	`CXBd©a
 (
nb
->
sigbuf
, 
i
Ë
	`Cm∂x
 (0.0, 0.0);

73 
nb
->
h™gtime
--;

76 
	`CXBd©a
 (
nb
->
sigbuf
, 
i
Ënb->
dñay
[nb->
dñayödex
];

77 
nb
->
sigödex
 = (nb->sigindex + 7) & 7;

78 
nb
->
dñayödex
 = (nb->delayindex + 7) & 7;

80 
	}
}

83 
	$SDROMnoi£bœnkî
 (
NB
 
nb
)

85 
i
;

86 
i
 = 0; i < 
	`CXBsize
 (
nb
->
sigbuf
); i++)

88 
REAL
 
cmag
 = 
	`Cmag
 (
	`CXBd©a
 (
nb
->
sigbuf
, 
i
));

89 
nb
->
avîage_sig
 = 
	`Cadd
 (
	`Cs˛
 (nb->average_sig, 0.75),

90 
	`Cs˛
 (
	`CXBd©a
 (
nb
->
sigbuf
, 
i
), 0.25));

91 
nb
->
avîage_mag
 = (
REAL
Ë(0.999 * (nb->avîage_magË+ 0.001 * 
cmag
);

92 i‡(
cmag
 > (
nb
->
thªshﬁd
 *Çb->
avîage_mag
))

93 
	`CXBd©a
 (
nb
->
sigbuf
, 
i
Ënb->
avîage_sig
;

95 
	}
}

	@noiseblanker.h

34 #i‚de‡
_noi£bœnkî_h


35 
	#_noi£bœnkî_h


	)

37 
	~<cx›s.h
>

38 
	~<bufvec.h
>

40 
	s_nb°©e


42 
CXB
 
	msigbuf
;

43 
REAL
 
	mthªshﬁd
;

44 
COMPLEX
 
	mavîage_sig
;

45 
REAL
 
	mavîage_mag
;

46 
COMPLEX
 
	mdñay
[8];

47 
	mdñayödex
;

48 
	msigödex
;

49 
	mh™gtime
;

50 } *
	tNB
, 
	tnb°©e
;

52 
NB
 
√w_noi£bœnkî
 (
CXB
 
sigbuf
, 
REAL
 
thªshﬁd
);

53 
dñ_nb
 (
NB
 
nb
);

54 
noi£bœnkî
 (
NB
 
nb
);

55 
SDROMnoi£bœnkî
 (
NB
 
nb
);

	@oscillator.c

44 
	~<comm⁄.h
>

45 
	#HUGE_PHASE
 1256637061.43593

	)

120 
	$Com∂exOSC
 (
OSC
 
p
)

122 
i
;

123 
COMPLEX
 
z
, 
dñè_z
;

125 i‡(
	`OSCpha£
 (
p
Ë> 
TWOPI
)

126 
	`OSCpha£
 (
p
Ë-
TWOPI
;

127 i‡(
	`OSCpha£
 (
p
Ë< -
TWOPI
)

128 
	`OSCpha£
 (
p
Ë+
TWOPI
;

130 
z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
	`OSCpha£
 (
p
)), (
IMAG
Ë
	`sö
 (OSCphase (p))),

131 
dñè_z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
	`OSC‰eq
 (
p
)), (
IMAG
Ë
	`sö
 (OSCfreq (p)));

133 
i
 = 0; i < 
	`OSCsize
 (
p
); i++)

136 
	`CXBd©a
((
CXB
)
	`OSCba£
(
p
), 
i
Ë
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
	`OSCpha£
 (p)), (
IMAG
Ë
	`sö
 (OSCphase (p))),

137 
	`OSCpha£
 (
p
Ë+
	`OSC‰eq
 (p);

139 
	}
}

141 #ifde‡
nŸdef


143 
	$Com∂exOSC
 (
OSC
 
p
)

145 
i
;

148 
i
 = 0; i < 
	`OSCsize
 (
p
); i++)

150 
	`OSCªÆ
 (
p
, 
i
Ë
	`cos
 (
	`OSCpha£
 (p));

151 
	`OSCimag
 (
p
, 
i
Ë
	`sö
 (
	`OSCpha£
 (p));

152 
	`OSCpha£
 (
p
Ë+
	`OSC‰eq
 (p);

154 
	}
}

157 
PRIVATE
 

158 
	$_pha£mod
 (
™gÀ
)

160 
™gÀ
 >
TWOPI
)

161 
™gÀ
 -
TWOPI
;

162 
™gÀ
 < 0.0)

163 
™gÀ
 +
TWOPI
;

164  
™gÀ
;

165 
	}
}

168 
	$RólOSC
 (
OSC
 
p
)

170 
i
;

171 
i
 = 0; i < 
	`OSCsize
 (
p
); i++)

173 
	`OSCRd©a
 (
p
, 
i
Ë(
REAL
Ë
	`sö
 (
	`OSCpha£
 (p));

174 
	`OSCpha£
 (
p
Ë
	`_pha£mod
 (
	`OSC‰eq
 (p) + OSCphase (p));

176 
	}
}

178 
OSC


179 
	$√wOSC
 (
size
,

180 
OscTy≥
 
Ty≥Osc
,

181 
Fªquícy
, 
Pha£
, 
REAL
 
Sam∂eR©e
, *
èg
)

183 
OSC
 
p
 = (OSCË
	`ß„Æloc
 (1,  (
oscûœt‹
), 
èg
);

184 i‡((
	`OSCty≥
 (
p
Ë
Ty≥Osc
Ë=
Com∂exT⁄e
)

185 
	`OSCba£
 (
p
Ë(*Ë
	`√wCXB
 (
size
,

186 
NULL
,

189 
	`OSCba£
 (
p
Ë(*Ë
	`√wRLB
 (
size
,

190 
NULL
, "real buffer for oscillator output");

191 
	`OSCsize
 (
p
Ë
size
;

192 
	`OSC‰eq
 (
p
Ë2.0 * 
M_PI
 * 
Fªquícy
 / 
Sam∂eR©e
;

193 
	`OSCpha£
 (
p
Ë
Pha£
;

194  
p
;

195 
	}
}

198 
	$dñOSC
 (
OSC
 
p
)

200 i‡(
p
->
Oscûœt‹Ty≥
 =
Com∂exT⁄e
)

201 
	`dñCXB
 ((
CXB
Ë
p
->
sig«Õoöts
);

203 
	`dñRLB
 ((
RLB
Ë
p
->
sig«Õoöts
);

204 i‡(
p
)

205 
	`ß„‰ì
 ((*Ë
p
);

206 
	}
}

	@oscillator.h

35 #i‚de‡
_oscûœt‹_h


36 
	#_oscûœt‹_h


	)

38 
	#Com∂exT⁄e
 1

	)

39 
	#RólT⁄e
 0

	)

40 
	tOscTy≥
;

44 
	s_oscûœt‹


46 
	msize
;

47 *
	msig«Õoöts
;

48 
	mPha£
;

49 
	mFªquícy
;

54 
OscTy≥
 
	mOscûœt‹Ty≥
;

55 } 
	toscûœt‹
, *
	tOSC
;

58 
	#OSCba£
(
p
Ë(’)->
sig«Õoöts
)

	)

59 
	#OSCCba£
(
p
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
)))

	)

60 
	#OSCCd©a
(
p
, 
i
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
))[(i)])

	)

61 
	#OSCªÆ
(
p
, 
i
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
))[(i)].
ª
)

	)

62 
	#OSCimag
(
p
, 
i
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
))[(i)].
im
)

	)

64 
	#OSCRba£
(
p
Ë(
	`RLBba£
((
RLB
)(’)->
sig«Õoöts
)))

	)

65 
	#OSCRd©a
(
p
, 
i
Ë(
	`RLBba£
((
RLB
)(’)->
sig«Õoöts
))[(i)])

	)

67 
	#OSCsize
(
p
Ë(’)->
size
)

	)

71 
	#OSC⁄
(
p
Ë(’)->
⁄
)

	)

72 
	#OSCty≥
(
p
Ë(’)->
Oscûœt‹Ty≥
)

	)

73 
	#OSCpha£
(
p
Ë(’)->
Pha£
)

	)

74 
	#OSC‰eq
(
p
Ë(’)->
Fªquícy
)

	)

76 
Com∂exOSC
 (
OSC
);

77 
RólOSC
 (
OSC
);

78 
OSC
 
√wOSC
 (
size
, 
OscTy≥
 
Ty≥Osc
, 
Fªquícy
,

79 
Pha£
, 
REAL
 
Sam∂eR©e
, *
èg
);

80 
dñOSC
 (
OSC
);

81 
fixOSC
 (
OSC
 
p
, 
Fªquícy
, 
Pha£
, 
REAL
 
Sam∂eR©e
);

82 
ª£tOSC
(
OSC
 
p
, 
Fªquícy
, 
Pha£
, 
REAL
 
Sam∂eR©e
);

	@ovsv.c

34 
	~<ovsv.h
>

40 
	$fûãr_OvSv
(
FûtOvSv
 
pÊt
) {

41 
i
, 
m
 = 
pÊt
->
f·Àn
, 
n
 =ÖÊt->
buÊí
;

42 
COMPLEX
 *
zfvec
 = 
pÊt
->zfvec,

43 *
zivec
 = 
pÊt
->zivec,

44 *
zovec
 = 
pÊt
->zovec,

45 *
zrvec
 = 
pÊt
->zrvec;

46 
REAL
 
s˛
 = 
pÊt
->
sˇÀ
;

50 
	`f·wf_execuã
(
pÊt
->
pfwd
);

53 
i
 = 0; i < 
m
; i++)

54 
zivec
[
i
] = 
	`Cmul
(zivec[i], 
zfvec
[i]);

58 
	`f·wf_execuã
(
pÊt
->
pöv
);

63 
	`mem˝y
((*)
zrvec
,(c⁄° *)&zrvec[
n
],n*(
COMPLEX
));

64 
	}
}

67 
	$ª£t_OvSv
(
FûtOvSv
 
pÊt
)

70 
	`mem£t
((*Ë
pÊt
->
zrvec
, 0,ÖÊt->
f·Àn
 * (
COMPLEX
));

71 
	`mem£t
((*Ë
pÊt
->
zovec
, 0,ÖÊt->
f·Àn
 * (
COMPLEX
));

72 
	}
}

80 
COMPLEX
 *

81 
	$FûtOvSv_öôpoöt
(
FûtOvSv
 
pÊt
) {

82  &(
pÊt
->
zrvec
[pÊt->
buÊí
]);

83 
	}
}

87 
	$FûtOvSv_öôsize
(
FûtOvSv
 
pÊt
) {

88  (
pÊt
->
f·Àn
 -ÖÊt->
buÊí
);

89 
	}
}

92 
COMPLEX
 *

93 
	$FûtOvSv_„tchpoöt
(
FûtOvSv
 
pÊt
) {

94  &(
pÊt
->
zrvec
[pÊt->
buÊí
]);

95 
	}
}

100 
	$FûtOvSv_„tchsize
(
FûtOvSv
 
pÊt
) {

101  (
pÊt
->
f·Àn
 -ÖÊt->
buÊí
);

102 
	}
}

105 #ifde‡
LHS


106 
COMPLEX
 *

107 
	$FûtOvSv_°‹ïoöt
(
FûtOvSv
 
pÊt
) {

108  ((
pÊt
->
zovec
Ë+ÖÊt->
buÊí
);

109 
	}
}

111 
COMPLEX
 *

112 
	$FûtOvSv_°‹ïoöt
(
FûtOvSv
 
pÊt
) {

113  ((
pÊt
->
zovec
));

114 
	}
}

122 
	$FûtOvSv_°‹esize
(
FûtOvSv
 
pÊt
) {

123  (
pÊt
->
f·Àn
 -ÖÊt->
buÊí
);

124 
	}
}

129 
FûtOvSv


130 
	$√wFûtOvSv
(
COMPLEX
 * 
c€fs
, 
nc€f
, 
pbôs
) {

131 
buÊí
, 
f·Àn
;

132 
FûtOvSv
 
p
;

133 
f·wf_∂™
 
pfwd
, 
pöv
;

134 
COMPLEX
 *
zrvec
, *
zfvec
, *
zivec
, *
zovec
;

135 
p
 = (
FûtOvSv
Ë
	`ß„Æloc
(1, (
fût_ov_sv
), "new overlap/save filter");

136 
buÊí
 = 
	`nblock2
(
nc€f
 - 1), 
f·Àn
 = 2 * buflen;

137 
zrvec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "raw signal vec inÇewFiltOvSv");

138 
zfvec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "filter z vec inÇewFiltOvSv");

139 
zivec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "signal in z vec inÇewFiltOvSv");

140 
zovec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "signal out z vec inÇewFiltOvSv");

144 
i
;

145 
COMPLEX
 *
zcvec
;

146 
f·wf_∂™
 
±mp
;

148 
zcvec
 = 
	`√wvec_COMPLEX
(
f·Àn
, "temp filter z vec inÇewFiltOvSv");

150 
±mp
 =

151 
	`f·wf_∂™_d·_1d
(
f·Àn
, (
f·wf_com∂ex
 *Ë
zcvec
,

152 (
f·wf_com∂ex
 *Ë
zfvec
, 
FFTW_FORWARD
, 
pbôs
);

154 #ifde‡
LHS


155 
i
 = 0; i < 
nc€f
; i++)

156 
zcvec
[
i
] = 
c€fs
[i];

158 
i
 = 0; i < 
nc€f
; i++)

159 
zcvec
[
f·Àn
 - 
nc€f
 + 
i
] = 
c€fs
[i];

163 
	`f·wf_execuã
(
±mp
);

164 
	`f·wf_de°roy_∂™
(
±mp
);

165 
	`dñvec_COMPLEX
(
zcvec
);

171 
pfwd
 = 
	`f·wf_∂™_d·_1d
(
f·Àn
, (
f·wf_com∂ex
 *Ë
zrvec
,

172 (
f·wf_com∂ex
 *Ë
zivec
,

173 
FFTW_FORWARD
,

174 
pbôs
);

175 
pöv
 = 
	`f·wf_∂™_d·_1d
(
f·Àn
, (
f·wf_com∂ex
 *Ë
zivec
,

176 (
f·wf_com∂ex
 *Ë
zovec
,

177 
FFTW_BACKWARD
,

178 
pbôs
);

180 
p
->
buÊí
 = buflen;

181 
p
->
f·Àn
 = fftlen;

182 
p
->
zfvec
 = zfvec;

183 
p
->
zivec
 = zivec;

184 
p
->
zovec
 = zovec;

185 
p
->
zrvec
 = zrvec;

186 
p
->
pfwd
 =Öfwd;

187 
p
->
pöv
 =Öinv;

188 
p
->
sˇÀ
 = 1.0‡/ (
REAL
Ë
f·Àn
;

189 
	`n‹mÆize_vec_COMPLEX
 (
p
->
zfvec
,Ö->
f·Àn
,Ö->
sˇÀ
);

190  
p
;

191 
	}
}

195 
	$dñFûtOvSv
(
FûtOvSv
 
p
) {

196 i‡(
p
) {

197 
	`dñvec_COMPLEX_f·w
(
p
->
zfvec
);

198 
	`dñvec_COMPLEX_f·w
(
p
->
zivec
);

199 
	`dñvec_COMPLEX_f·w
(
p
->
zovec
);

200 
	`dñvec_COMPLEX_f·w
(
p
->
zrvec
);

201 
	`f·wf_de°roy_∂™
(
p
->
pfwd
);

202 
	`f·wf_de°roy_∂™
(
p
->
pöv
);

203 
	`ß„‰ì
((*Ë
p
);

205 
	}
}

	@ovsv.h

34 #i‚de‡
_ovsv_h


35 
	#_ovsv_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<•lôfõlds.h
>

40 
	~<d©©y≥s.h
>

41 
	~<bufvec.h
>

42 
	~<cx›s.h
>

43 
	~<upd©e.h
>

44 
	~<lmadf.h
>

45 
	~<f·w3.h
>

46 
	~<f·w3_fix.h
>

48 
	s_fût_ov_ßv
 {

49 
	mbuÊí
, 
	mf·Àn
;

50 
COMPLEX
 *
	mzfvec
, *
	mzivec
, *
	mzovec
, *
	mzrvec
;

51 
f·wf_∂™
 
	mpfwd
, 
	mpöv
;

52 
REAL
 
	msˇÀ
;

53 } 
	tfût_ov_sv
, *
	tFûtOvSv
;

55 
FûtOvSv
 
√wFûtOvSv
(
COMPLEX
 * 
c€fs
, 
nc€f
, 
pbôs
);

56 
dñFûtOvSv
(
FûtOvSv
 
p
);

58 
COMPLEX
 *
FûtOvSv_öôpoöt
(
FûtOvSv
 
pÊt
);

59 
FûtOvSv_öôsize
(
FûtOvSv
 
pÊt
);

61 
COMPLEX
 *
FûtOvSv_„tchpoöt
(
FûtOvSv
 
pÊt
);

62 
FûtOvSv_„tchsize
(
FûtOvSv
 
pÊt
);

64 
COMPLEX
 *
FûtOvSv_°‹ïoöt
(
FûtOvSv
 
pÊt
);

65 
FûtOvSv_°‹esize
(
FûtOvSv
 
pÊt
);

67 
fûãr_OvSv
(
FûtOvSv
 
pÊt
);

68 
ª£t_OvSv
(
FûtOvSv
 
pÊt
);

	@resample.c

36 
	~<comm⁄.h
>

38 
DâSP_EXP
 
ResSt


39 
	$√wPﬁyPha£FIR
 (
fûãrMem‹yBuffLígth
,

40 
ödexfûtMemBuf
,

41 
öãΩFa˘‹
, 
fûãrPha£Num
, 
deciFa˘‹
)

43 
ResSt
 
tmp
;

44 
tmp
 = (
ResSt
Ë
	`ß„Æloc
 (1,  (
ªßm∂î
), "PF Resampler");

45 
tmp
->
ödexfûtMemBuf
 = indexfiltMemBuf;

46 
tmp
->
öãΩFa˘‹
 = interpFactor;

47 
tmp
->
fûãrPha£Num
 = filterPhaseNum;

48 
tmp
->
deciFa˘‹
 = deciFactor;

49 
tmp
->
numFûtT≠s
 = 31 * 
deciFa˘‹
;

50 
tmp
->
fûãrMem‹yBuffLígth
 =

51 
	`nblock2
 (
	`max
 (
fûãrMem‹yBuffLígth
, 
tmp
->
numFûtT≠s
));

52 
tmp
->
MASK
 =Åmp->
fûãrMem‹yBuffLígth
 - 1;

53 
tmp
->
fûãrMem‹yBuff
 =

54 (
COMPLEX
 *Ë
	`ß„Æloc
 (
tmp
->
fûãrMem‹yBuffLígth
,  (COMPLEX),

56 
tmp
->
fûãr
 =

57 
	`√wFIR_Low∑ss_REAL
 (0.45‡/ (
REAL
Ë
deciFa˘‹
, (REALË
öãΩFa˘‹
,

58 31 * 
öãΩFa˘‹
);

59  
tmp
;

60 
	}
}

63 
	$dñPﬁyPha£FIR
 (
ResSt
 
ªs°
)

65 i‡(
ªs°
)

67 
	`dñFIR_Low∑ss_REAL
 (
ªs°
->
fûãr
);

68 
	`ß„‰ì
 ((*Ë
ªs°
->
fûãrMem‹yBuff
);

69 
	`ß„‰ì
 ((*Ë
ªs°
);

71 
	}
}

73 
DâSP_EXP
 

74 
	$PﬁyPha£FIR
 (
ResSt
 
ªs°
)

128 
i
, 
j
, 
k
, 
jj
;

129 
COMPLEX
 *
ouçå
;

131 
ªs°
->
numOuçutSam∂es
 = 0;

134 
i
 = 0; i < 
ªs°
->
öputAºayLígth
; i++)

141 
ªs°
->
fûãrMem‹yBuff
[ªs°->
ödexfûtMemBuf
] =Ñes°->
öput
[
i
];

142 
j
 = 
ªs°
->
ödexfûtMemBuf
;

143 
jj
 = 
j
;

150 
ªs°
->
ödexfûtMemBuf
 = (ªs°->ödexfûtMemBu‡+ 1Ë&Ñes°->
MASK
;

156 
ªs°
->
fûãrPha£Num
 <Ñes°->
öãΩFa˘‹
)

158 
j
 = 
jj
;

160 
ouçå
 = 
ªs°
->
ouçut
 +Ñes°->
numOuçutSam∂es
;

161 *
ouçå
 = 
cxzîo
;

167 
k
 = 
ªs°
->
fûãrPha£Num
; k <Ñes°->
numFûtT≠s
;

168 
k
 +
ªs°
->
öãΩFa˘‹
)

172 *
ouçå
 =

173 
	`Cadd
 (*
ouçå
,

174 
	`Cs˛
 (
ªs°
->
fûãrMem‹yBuff
[
j
],

175 
	`FIRèp
 (
ªs°
->
fûãr
, 
k
)));

182 
j
 = (j + 
ªs°
->
MASK
) &Ñesst->MASK;

190 *
ouçå
 = 
	`Cs˛
 (*ouçå, (
REAL
Ë
ªs°
->
öãΩFa˘‹
);

191 
ªs°
->
numOuçutSam∂es
 += 1;

197 
ªs°
->
fûãrPha£Num
 +‘es°->
deciFa˘‹
);

201 
ªs°
->
fûãrPha£Num
 -ªs°->
öãΩFa˘‹
;

204 
	}
}

	@resample.h

34 #i‚de‡
_RESAMPLE_H


35 
	#_RESAMPLE_H


	)

37 
	~<comm⁄.h
>

38 
	sªßm∂e_°©e


40 
COMPLEX
 *
	möput
, *
	mouçut
, *
	mfûãrMem‹yBuff
;

41 
RólFIR
 
	mfûãr
;

42 
	mfûãrMem‹yBuffLígth
, 
	möputAºayLígth
, 
	mnumFûtT≠s
,

43 
	mödexfûtMemBuf
, 
	möãΩFa˘‹
, 
	mfûãrPha£Num
, 
	mdeciFa˘‹
,

44 
	mnumOuçutSam∂es
;

45 
	mMASK
;

46 } 
	tªßm∂î
, *
	tResSt
;

48 
DâSP_EXP
 
ResSt
 
√wPﬁyPha£FIR
 (
fûãrMem‹yBuffLígth
,

49 
ödexfûtMemBuf
,

50 
öãΩFa˘‹
,

51 
fûãrPha£Num
, 
deciFa˘‹
);

52 
DâSP_EXP
 
PﬁyPha£FIR
 (
ResSt
 
ªs°
);

53 
DâSP_EXP
 
dñpﬁyPha£FIR
 (
ResSt
 
ªs°
);

	@resampleF.c

36 
	~<comm⁄.h
>

38 
DâSP_EXP
 
ResStF


39 
	$√wPﬁyPha£FIRF
 (
fûãrMem‹yBuffLígth
,

40 
ödexfûtMemBuf
,

41 
öãΩFa˘‹
, 
fûãrPha£Num
, 
deciFa˘‹
)

43 
ResStF
 
tmp
;

44 
tmp
 = (
ResStF
Ë
	`ß„Æloc
 (1,  (
ªßm∂îF
), "PF Resampler");

45 
tmp
->
ödexfûtMemBuf
 = indexfiltMemBuf;

46 
tmp
->
öãΩFa˘‹
 = interpFactor;

47 
tmp
->
fûãrPha£Num
 = filterPhaseNum;

48 
tmp
->
deciFa˘‹
 = deciFactor;

49 
tmp
->
numFûtT≠s
 = 19839;

50 
tmp
->
fûãrMem‹yBuffLígth
 =

51 
	`nblock2
 (
	`max
 (
fûãrMem‹yBuffLígth
, 
tmp
->
numFûtT≠s
));

52 
tmp
->
MASK
 =Åmp->
fûãrMem‹yBuffLígth
 - 1;

53 
tmp
->
fûãrMem‹yBuff
 =

54 (*Ë
	`ß„Æloc
 (
tmp
->
fûãrMem‹yBuffLígth
,  (
REAL
),

56 
tmp
->
fûãr
 =

57 
	`√wFIR_Low∑ss_REAL
 (0.45f, (
REAL
Ë
öãΩFa˘‹
, 
tmp
->
numFûtT≠s
);

59  
tmp
;

60 
	}
}

62 
DâSP_EXP
 

63 
	$dñPﬁyPha£FIRF
 (
ResStF
 
ªs°
)

65 i‡(
ªs°
)

67 
	`dñFIR_Low∑ss_REAL
 (
ªs°
->
fûãr
);

68 
	`ß„‰ì
 ((*Ë
ªs°
->
fûãrMem‹yBuff
);

69 
	`ß„‰ì
 ((*Ë
ªs°
);

71 
	}
}

73 
DâSP_EXP
 

74 
	$PﬁyPha£FIRF
 (
ResStF
 
ªs°
)

128 
i
, 
j
, 
k
, 
jj
;

129 *
ouçå
;

131 
ªs°
->
numOuçutSam∂es
 = 0;

134 
i
 = 0; i < 
ªs°
->
öputAºayLígth
; i++)

141 
ªs°
->
fûãrMem‹yBuff
[ªs°->
ödexfûtMemBuf
] =Ñes°->
öput
[
i
];

142 
j
 = 
ªs°
->
ödexfûtMemBuf
;

143 
jj
 = 
j
;

150 
ªs°
->
ödexfûtMemBuf
 = (ªs°->ödexfûtMemBu‡+ 1Ë&Ñes°->
MASK
;

156 
ªs°
->
fûãrPha£Num
 <Ñes°->
öãΩFa˘‹
)

158 
j
 = 
jj
;

160 
ouçå
 = 
ªs°
->
ouçut
 +Ñes°->
numOuçutSam∂es
;

161 *
ouçå
 = 0.0;

167 
k
 = 
ªs°
->
fûãrPha£Num
; k <Ñes°->
numFûtT≠s
;

168 
k
 +
ªs°
->
öãΩFa˘‹
)

170 *
ouçå
 +=

171 (Ë
	`FIRèp
 (
ªs°
->
fûãr
,

172 
k
Ë* 
ªs°
->
fûãrMem‹yBuff
[
j
];

178 
j
 = (j + 
ªs°
->
MASK
) &Ñesst->MASK;

185 *
ouçå
 *(Ë
ªs°
->
öãΩFa˘‹
;

186 
ªs°
->
numOuçutSam∂es
 += 1;

192 
ªs°
->
fûãrPha£Num
 +‘es°->
deciFa˘‹
);

196 
ªs°
->
fûãrPha£Num
 -ªs°->
öãΩFa˘‹
;

199 
	}
}

	@resampleF.h

34 #i‚de‡
_RESAMPLEF_H


35 
	#_RESAMPLEF_H


	)

37 
	~<comm⁄.h
>

38 
	sªßm∂eF_°©e


40 
REAL
 *
	möput
, *
	mouçut
, *
	mfûãrMem‹yBuff
;

41 
RólFIR
 
	mfûãr
;

42 
	mfûãrMem‹yBuffLígth
, 
	möputAºayLígth
, 
	mnumFûtT≠s
,

43 
	mödexfûtMemBuf
, 
	möãΩFa˘‹
, 
	mfûãrPha£Num
, 
	mdeciFa˘‹
,

44 
	mnumOuçutSam∂es
;

45 
	mMASK
;

46 } 
	tªßm∂îF
, *
	tResStF
;

48 
DâSP_EXP
 
ResStF
 
√wPﬁyPha£FIRF
 (
fûãrMem‹yBuffLígth
,

49 
ödexfûtMemBuf
,

50 
öãΩFa˘‹
,

51 
fûãrPha£Num
, 
deciFa˘‹
);

52 
DâSP_EXP
 
PﬁyPha£FIRF
 (
ResStF
 
ªs°
);

53 
DâSP_EXP
 
dñpﬁyPha£FIRF
 (
ResStF
 
ªs°
);

	@ringb.c

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<rögb.h
>

30 
	~<bufvec.h
>

32 
rögb_t
 *

33 
	$rögb_¸óã
 (
size_t
 
sz2
)

35 
rögb_t
 *
rb
 = (rögb_à*Ë
	`ß„Æloc
 (1,  (ringb_t), "Ring creation");

36 
rb
->
buf
 = 
	`ß„Æloc
 (1, 
sz2
, "Ring buffer buf");

37 
rb
->
size
 = 
sz2
;

38 
rb
->
mask
 =Ñb->
size
 - 1;

39 
rb
->
w±r
 =Ñb->
Ωå
 = 0;

40  
rb
;

41 
	}
}

43 
rögb_Êﬂt_t
 *

44 
	$rögb_Êﬂt_¸óã
 (
size_t
 
sz2
)

46 
rögb_Êﬂt_t
 *
rb
 = (rögb_Êﬂt_à*Ë
	`ß„Æloc
 (1,  (ringb_float_t),

48 
rb
->
buf
 =

49 (*Ë
	`ß„Æloc
 (1, 
sz2
 *  (), "Ring buffer float buf");

50 
rb
->
size
 = 
sz2
;

51 
rb
->
mask
 =Ñb->
size
 - 1;

52 
rb
->
w±r
 =Ñb->
Ωå
 = 0;

53  
rb
;

54 
	}
}

56 
rögb_t
 *

57 
	$rögb_¸óã_u£mem
 (*
u£mem
, 
size_t
 
sz2
)

59 
rögb_t
 *
rb
 = (rögb_à*Ë
u£mem
;

60 
rb
->
buf
 = 
u£mem
 +  (
rögb_t
);

61 
rb
->
size
 = 
sz2
;

62 
rb
->
mask
 =Ñb->
size
 - 1;

63 
rb
->
w±r
 =Ñb->
Ωå
 = 0;

64  
rb
;

65 
	}
}

69 
	$rögb_‰ì
 (
rögb_t
 * 
rb
)

71 
	`ß„‰ì
 (
rb
->
buf
);

72 
	`ß„‰ì
 ((*Ë
rb
);

73 
	}
}

76 
	$rögb_Êﬂt_‰ì
 (
rögb_Êﬂt_t
 * 
rb
)

78 
	`ß„‰ì
 ((*Ë
rb
->
buf
);

79 
	`ß„‰ì
 ((*Ë
rb
);

80 
	}
}

83 
	$rögb_ª£t
 (
rögb_t
 * 
rb
)

86 
rb
->
Ωå
 = 0;

87 
rb
->
w±r
 = 0;

88 
	}
}

91 
	$rögb_Êﬂt_ª£t
 (
rögb_Êﬂt_t
 * 
rb
)

94 
rb
->
Ωå
 = 0;

95 
rb
->
w±r
 = 0;

96 
	}
}

99 
	$rögb_˛ór
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
)

101 
size_t
 
i
;

102 
zîo
 = 0;

103 
i
 = 0; i < 
nbyãs
; i++)

104 
	`rögb_wrôe
 (
rb
, &
zîo
, 1);

105 
	}
}

108 
	$rögb_Êﬂt_˛ór
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
)

110 
size_t
 
i
;

111 
zîo
 = 0.0f;

112 
i
 = 0; i < 
nÊﬂts
; i++)

113 
	`rögb_Êﬂt_wrôe
 (
rb
, &
zîo
, 1);

114 
	}
}

117 
	$rögb_ª°¨t
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
)

119 
	`rögb_ª£t
 (
rb
);

120 
	`rögb_˛ór
 (
rb
, 
nbyãs
);

121 
	}
}

124 
	$rögb_Êﬂt_ª°¨t
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
)

126 
	`rögb_Êﬂt_ª£t
 (
rb
);

127 
	`rögb_Êﬂt_˛ór
 (
rb
, 
nÊﬂts
);

128 
	}
}

130 
size_t


131 
	$rögb_ªad_•a˚
 (c⁄° 
rögb_t
 * 
rb
)

133 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

134 i‡(
w
 > 
r
)

135  
w
 - 
r
;

137  (
rb
->
size
 + 
w
 - 
r
 ) &Ñb->
mask
;

138 
	}
}

140 
size_t


141 
	$rögb_Êﬂt_ªad_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
)

143 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

144 i‡(
w
 > 
r
)

145  
w
 - 
r
;

147  (
rb
->
size
 + 
w
 - 
r
 ) &Ñb->
mask
;

148 
	}
}

150 
size_t


151 
	$rögb_wrôe_•a˚
 (c⁄° 
rögb_t
 * 
rb
)

153 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

154 i‡(
w
 > 
r
)

155  ((
rb
->
size
 + 
r
 - 
w
Ë&Ñb->
mask
) - 1;

156 i‡(
w
 < 
r
)

157  
r
 - 
w
 - 1;

159  
rb
->
size
 - 1;

160 
	}
}

162 
size_t


163 
	$rögb_Êﬂt_wrôe_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
)

165 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

166 i‡(
w
 > 
r
)

167  ((
rb
->
size
 + 
r
 - 
w
Ë&Ñb->
mask
) - 1;

168 i‡(
w
 < 
r
)

169  
r
 - 
w
 - 1;

171  
rb
->
size
 - 1;

172 
	}
}

174 
size_t


175 
	$rögb_ªad
 (
rögb_t
 * 
rb
, *
de°
, 
size_t
 
˙t
)

177 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_ªad
, 
n1
, 
n2
;

178 i‡((
‰ì_˙t
 = 
	`rögb_ªad_•a˚
 (
rb
)) == 0)

180 
to_ªad
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

181 i‡((
˙t2
 = 
rb
->
Ωå
 + 
to_ªad
Ë>Ñb->
size
)

182 
n1
 = 
rb
->
size
 -Ñb->
Ωå
, 
n2
 = 
˙t2
 &Ñb->
mask
;

184 
n1
 = 
to_ªad
, 
n2
 = 0;

185 
	`mem˝y
 (
de°
, &(
rb
->
buf
[rb->
Ωå
]), 
n1
);

186 
rb
->
Ωå
 = (rb->Ωå + 
n1
Ë&Ñb->
mask
;

187 i‡(
n2
)

189 
	`mem˝y
 (
de°
 + 
n1
, &(
rb
->
buf
[rb->
Ωå
]), 
n2
);

190 
rb
->
Ωå
 = (rb->Ωå + 
n2
Ë&Ñb->
mask
;

192  
to_ªad
;

193 
	}
}

195 
size_t


196 
	$rögb_Êﬂt_ªad
 (
rögb_Êﬂt_t
 * 
rb
, *
de°
, 
size_t
 
˙t
)

198 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_ªad
, 
n1
, 
n2
;

199 i‡((
‰ì_˙t
 = 
	`rögb_Êﬂt_ªad_•a˚
 (
rb
)) == 0)

201 
to_ªad
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

202 i‡((
˙t2
 = 
rb
->
Ωå
 + 
to_ªad
Ë>Ñb->
size
)

203 
n1
 = 
rb
->
size
 -Ñb->
Ωå
, 
n2
 = 
˙t2
 &Ñb->
mask
;

205 
n1
 = 
to_ªad
, 
n2
 = 0;

206 
	`mem˝y
 (
de°
, &(
rb
->
buf
[rb->
Ωå
]), 
n1
 *  ());

207 
rb
->
Ωå
 = (rb->Ωå + 
n1
Ë&Ñb->
mask
;

208 i‡(
n2
)

210 
	`mem˝y
 (
de°
 + 
n1
, &(
rb
->
buf
[rb->
Ωå
]), 
n2
 *  ());

211 
rb
->
Ωå
 = (rb->Ωå + 
n2
Ë&Ñb->
mask
;

213  
to_ªad
;

214 
	}
}

216 
size_t


217 
	$rögb_≥ek
 (
rögb_t
 * 
rb
, *
de°
, 
size_t
 
˙t
)

219 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_ªad
, 
n1
, 
n2
, 
tmp_Ωå
;

220 
tmp_Ωå
 = 
rb
->
Ωå
;

221 i‡((
‰ì_˙t
 = 
	`rögb_ªad_•a˚
 (
rb
)) == 0)

223 
to_ªad
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

224 i‡((
˙t2
 = 
tmp_Ωå
 + 
to_ªad
Ë> 
rb
->
size
)

225 
n1
 = 
rb
->
size
 - 
tmp_Ωå
, 
n2
 = 
˙t2
 &Ñb->
mask
;

227 
n1
 = 
to_ªad
, 
n2
 = 0;

228 
	`mem˝y
 (
de°
, &(
rb
->
buf
[
tmp_Ωå
]), 
n1
);

229 
tmp_Ωå
 = (tmp_Ωå + 
n1
Ë& 
rb
->
mask
;

230 i‡(
n2
)

231 
	`mem˝y
 (
de°
 + 
n1
, &(
rb
->
buf
[
tmp_Ωå
]), 
n2
);

232  
to_ªad
;

233 
	}
}

235 
size_t


236 
	$rögb_wrôe
 (
rögb_t
 * 
rb
, c⁄° *
§c
, 
size_t
 
˙t
)

238 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_wrôe
, 
n1
, 
n2
;

239 i‡((
‰ì_˙t
 = 
	`rögb_wrôe_•a˚
 (
rb
)) == 0)

241 
to_wrôe
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

242 i‡((
˙t2
 = 
rb
->
w±r
 + 
to_wrôe
Ë>Ñb->
size
)

243 
n1
 = 
rb
->
size
 -Ñb->
w±r
, 
n2
 = 
˙t2
 &Ñb->
mask
;

245 
n1
 = 
to_wrôe
, 
n2
 = 0;

246 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
, 
n1
);

247 
rb
->
w±r
 = (rb->w±∏+ 
n1
Ë&Ñb->
mask
;

248 i‡(
n2
)

250 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
 + 
n1
, 
n2
);

251 
rb
->
w±r
 = (rb->w±∏+ 
n2
Ë&Ñb->
mask
;

253  
to_wrôe
;

254 
	}
}

256 
size_t


257 
	$rögb_Êﬂt_wrôe
 (
rögb_Êﬂt_t
 * 
rb
, c⁄° *
§c
, 
size_t
 
˙t
)

259 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_wrôe
, 
n1
, 
n2
;

260 i‡((
‰ì_˙t
 = 
	`rögb_Êﬂt_wrôe_•a˚
 (
rb
)) == 0)

262 
to_wrôe
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

263 i‡((
˙t2
 = 
rb
->
w±r
 + 
to_wrôe
Ë>Ñb->
size
)

264 
n1
 = 
rb
->
size
 -Ñb->
w±r
, 
n2
 = 
˙t2
 &Ñb->
mask
;

266 
n1
 = 
to_wrôe
, 
n2
 = 0;

267 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
, 
n1
 *  ());

268 
rb
->
w±r
 = (rb->w±∏+ 
n1
Ë&Ñb->
mask
;

269 i‡(
n2
)

271 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
 + 
n1
, 
n2
 *  ());

272 
rb
->
w±r
 = (rb->w±∏+ 
n2
Ë&Ñb->
mask
;

274  
to_wrôe
;

275 
	}
}

278 
	$rögb_ªad_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
)

280 
rb
->
Ωå
 = (rb->Ωå + 
˙t
Ë&Ñb->
mask
;

281 
	}
}

284 
	$rögb_wrôe_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
)

286 
rb
->
w±r
 = (rb->w±∏+ 
˙t
Ë&Ñb->
mask
;

287 
	}
}

290 
	$rögb_Êﬂt_ªad_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
)

292 
rb
->
Ωå
 = (rb->Ωå + 
˙t
Ë&Ñb->
mask
;

293 
	}
}

296 
	$rögb_Êﬂt_wrôe_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
)

298 
rb
->
w±r
 = (rb->w±∏+ 
˙t
Ë&Ñb->
mask
;

299 
	}
}

302 
	$rögb_gë_ªad_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
)

304 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

305 i‡(
w
 > 
r
)

306 
‰ì_˙t
 = 
w
 - 
r
;

308 
‰ì_˙t
 = (
w
 - 
r
 + 
rb
->
size
Ë&Ñb->
mask
;

309 i‡((
˙t2
 = 
r
 + 
‰ì_˙t
Ë> 
rb
->
size
)

311 
vec
[0].
buf
 = &(
rb
->buf[
r
]), vec[0].
Àn
 =Ñb->
size
 -Ñ;

312 
vec
[1].
buf
 = 
rb
->buf, vec[1].
Àn
 = 
˙t2
 &Ñb->
mask
;

316 
vec
[0].
buf
 = &(
rb
->buf[
r
]), vec[0].
Àn
 = 
‰ì_˙t
;

317 
vec
[1].
Àn
 = 0;

319 
	}
}

322 
	$rögb_gë_wrôe_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
)

324 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

325 i‡(
w
 > 
r
)

326 
‰ì_˙t
 = ((
r
 - 
w
 + 
rb
->
size
Ë&Ñb->
mask
) - 1;

327 i‡(
w
 < 
r
)

328 
‰ì_˙t
 = 
r
 - 
w
 - 1;

330 
‰ì_˙t
 = 
rb
->
size
 - 1;

331 i‡((
˙t2
 = 
w
 + 
‰ì_˙t
Ë> 
rb
->
size
)

333 
vec
[0].
buf
 = &(
rb
->buf[
w
]), vec[0].
Àn
 =Ñb->
size
 - w;

334 
vec
[1].
buf
 = 
rb
->buf, vec[1].
Àn
 = 
˙t2
 &Ñb->
mask
;

338 
vec
[0].
buf
 = &(
rb
->buf[
w
]), vec[0].
Àn
 = 
‰ì_˙t
;

339 
vec
[1].
Àn
 = 0;

341 
	}
}

	@ringb.h

27 #i‚de‡
_rögb_h


28 
	#_rögb_h


	)

30 
	~<sys/ty≥s.h
>

34 *
	mbuf
;

35 
size_t
 
	mÀn
;

36 } 
	trögb_d©a_t
;

40 *
	mbuf
;

41 
size_t
 
	mw±r
, 
	mΩå
, 
	msize
, 
	mmask
;

42 } 
	trögb_t
;

46 *
	mbuf
;

47 
size_t
 
	mÀn
;

48 } 
	trögb_Êﬂtd©a_t
;

52 *
	mbuf
;

53 
size_t
 
	mw±r
, 
	mΩå
, 
	msize
, 
	mmask
;

54 } 
	trögb_Êﬂt_t
;

66 
rögb_t
 *
rögb_¸óã_u£mem
 (*
u£mem
, 
size_t
 
sz2
);

78 
rögb_t
 *
rögb_¸óã
 (
size_t
 
sz2
);

79 
rögb_Êﬂt_t
 *
rögb_Êﬂt_¸óã
 (
size_t
 
sz2
);

84 
rögb_‰ì
 (
rögb_t
 * 
rb
);

85 
rögb_Êﬂt_‰ì
 (
rögb_Êﬂt_t
 * 
rb
);

105 
rögb_gë_ªad_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
);

122 
rögb_gë_wrôe_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
);

133 
size_t
 
rögb_ªad
 (
rögb_t
 * 
rb
, *
de°
, size_à
˙t
);

134 
size_t
 
rögb_Êﬂt_ªad
 (
rögb_Êﬂt_t
 * 
rb
, *
de°
, size_à
˙t
);

149 
size_t
 
rögb_≥ek
 (
rögb_t
 * 
rb
, *
de°
, size_à
˙t
);

160 
rögb_ªad_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
);

161 
rögb_Êﬂt_ªad_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
);

167 
size_t
 
rögb_ªad_•a˚
 (c⁄° 
rögb_t
 * 
rb
);

168 
size_t
 
rögb_Êﬂt_ªad_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
);

173 
rögb_ª£t
 (
rögb_t
 * 
rb
);

174 
rögb_Êﬂt_ª£t
 (
rögb_Êﬂt_t
 * 
rb
);

182 
size_t
 
rögb_wrôe
 (
rögb_t
 * 
rb
, c⁄° *
§c
, size_à
˙t
);

183 
size_t
 
rögb_Êﬂt_wrôe
 (
rögb_Êﬂt_t
 * 
rb
, c⁄° *
§c
,

184 
size_t
 
˙t
);

194 
rögb_wrôe_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
);

195 
rögb_Êﬂt_wrôe_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
);

201 
size_t
 
rögb_wrôe_•a˚
 (c⁄° 
rögb_t
 * 
rb
);

202 
size_t
 
rögb_Êﬂt_wrôe_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
);

208 
rögb_˛ór
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
);

209 
rögb_Êﬂt_˛ór
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
);

217 
rögb_ª°¨t
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
);

218 
rögb_Êﬂt_ª°¨t
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
);

	@sdr.c

34 
	~<comm⁄.h
>

35 
	~<w˝AGC.h
>

40 c⁄° 
	gMAX_NOTCHES_IN_PASSBAND
 = 9;

42 
	$ª£t_mëîs
 (
thªad
)

44 i‡(
uni
[
thªad
].
mëî
.
Êag
)

46 
i
, 
k
;

47 
i
 = 0; i < 
RXMETERPTS
; i++)

48 
k
 = 0; k < 
MAXRX
; k++)

49 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
i
] = -200.0;

50 
i
 = 0; i < 
TXMETERPTS
; i++)

51 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
i
] = -200.0;

53 
	}
}

56 
	$ª£t_•e˘rum
 (
thªad
)

58 i‡(
uni
[
thªad
].
•ec
.
Êag
)

59 
	`ªöô_•e˘rum
 (&
uni
[
thªad
].
•ec
);

60 
	}
}

63 
	$ª£t_cou¡îs
 (
thªad
)

65 
k
;

66 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

67 
rx
[
thªad
][
k
].
tick
 = 0;

68 
tx
[
thªad
].
tick
 = 0;

69 
	}
}

77 
PRIVATE
 

78 
	$£tup_Æl
 (
REAL
 
øã
, 
buÊí
, 
SDRMODE
 
mode
, *
wisdom
,

79 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
)

81 
uni
[
thªad
].
ßm∂î©e
 = 
øã
;

82 
uni
[
thªad
].
buÊí
 = buflen;

83 
uni
[
thªad
].
mode
.
sdr
 = mode;

84 i‡(
thªad
 !1Ë
uni
[thªad].
mode
.
åx
 = 
RX
;

85 
uni
[
thªad
].
mode
.
åx
 = 
TX
;

87 
uni
[
thªad
].
wisdom
.
∑th
 = wisdom;

88 
uni
[
thªad
].
wisdom
.
bôs
 = 
FFTW_ESTIMATE
;

90 
FILE
 *
f
 = 
	`f›í
 (
uni
[
thªad
].
wisdom
.
∑th
, "r");

91 i‡(
f
)

93 
wisdom°rög
[32768];

94 
	`‰ód
(
wisdom°rög
,1,32768,
f
);

95 i‡(
	`f·wf_imp‹t_wisdom_‰om_°rög
 (
wisdom°rög
) != 0)

96 
uni
[
thªad
].
wisdom
.
bôs
 = 
FFTW_MEASURE
;

97 
	`f˛o£
 (
f
);

101 i‡(
uni
[
thªad
].
mëî
.
Êag
)

103 
	`ª£t_mëîs
 (
thªad
);

106 
uni
[
thªad
].
•ec
.
rxk
 = 0;

107 
uni
[
thªad
].
•ec
.
buÊí
 = uni[thread].buflen;

108 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

109 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

110 
uni
[
thªad
].
•ec
.
size
 = 
•ecsize
;

111 
uni
[
thªad
].
•ec
.
∂™bôs
 = uni[thªad].
wisdom
.
bôs
;

112 
	`öô_•e˘rum
 (&
uni
[
thªad
].
•ec
);

116 
uni
[
thªad
].
mu…úx
.
lis
 = 0;

117 
uni
[
thªad
].
mu…úx
.
ƒx
 = 
numªcv
;

120 
uni
[
thªad
].
mix
.
rx
.
Êag
 = uni[thªad].mix.
tx
.Êag = 
FALSE
;

121 
uni
[
thªad
].
mix
.
rx
.
gaö
 = uni[thªad].mix.
tx
.gain = 1.0;

123 
uni
[
thªad
].
˝dÀn
 = 
˝dsize
;

125 
uni
[
thªad
].
tick
 = uni[thªad].
ﬁdtick
 = 0;

126 
	}
}

130 
PRIVATE
 

131 
	$£tup_rx
 (
k
, 
thªad
)

133 
i
;

136 i‡(
thªad
 == 0) {

137 
divîsôy
.
gaö
 = 1.0;

138 
divîsôy
.
sˇœr
 = 
	`Cm∂x
(1.0,0);

140 
rx
[
thªad
][
k
].
iqfix
 = 
	`√wC‹ª˘IQ
 (0.0, 1.0, 0.000f);

144 
rx
[
thªad
][
k
].
fût
.
low
 = 150.0;

145 
rx
[
thªad
][
k
].
fût
.
high
 = 2850.0;

148 
rx
[
thªad
][
k
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 ((Ïx[thªad][k].fût.
low
,

149 ()
rx
[
thªad
][
k
].
fût
.
high
, 
uni
[thªad].
ßm∂î©e
, uni[thªad].
buÊí
 + 1);

150 
rx
[
thªad
][
k
].
fût
.
ovsv
 =

151 
	`√wFûtOvSv
 (
	`FIRc€f
 (
rx
[
thªad
][
k
].
fût
.
c€f
), 
	`FIRsize
 (rx[thread][k].filt.coef),

152 
uni
[
thªad
].
wisdom
.
bôs
);

153 
rx
[
thªad
][
k
].
fût
.
ovsv_nŸch
 =

154 
	`√wFûtOvSv
 (
	`FIRc€f
 (
rx
[
thªad
][
k
].
fût
.
c€f
), 
	`FIRsize
 (rx[thread][k].filt.coef),

155 
uni
[
thªad
].
wisdom
.
bôs
);

156 
rx
[
thªad
][
k
].
ªßm∂e
.
Êag
 = 
FALSE
;

157 
	`n‹mÆize_vec_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
ovsv
->
zfvec
,Ñx[thªad][k].fût.ovsv->
f·Àn
,Ñx[thªad][k].fût.ovsv->
sˇÀ
);

158 
	`n‹mÆize_vec_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
ovsv_nŸch
->
zfvec
,Ñx[thªad][k].fût.ovsv_nŸch->
f·Àn
,Ñx[thªad][k].fût.ovsv_nŸch->
sˇÀ
);

160 
rx
[
thªad
][
k
].
ouçut_gaö
=1.0f;

163 
rx
[
thªad
][
k
].
fût
.
ßve
 =

164 
	`√wvec_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
ovsv
->
f·Àn
, "RX filter cache");

165 
	`mem˝y
 ((*Ë
rx
[
thªad
][
k
].
fût
.
ßve
, (*Ërx[thªad][k].fût.
ovsv
->
zfvec
,

166 
rx
[
thªad
][
k
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

171 
rx
[
thªad
][
k
].
buf
.
i
 = 
	`√wCXB
 (
	`FûtOvSv_„tchsize
 (rx[thªad][k].
fût
.
ovsv
),

172 
	`FûtOvSv_„tchpoöt
 (
rx
[
thªad
][
k
].
fût
.
ovsv
),

175 
rx
[
thªad
][
k
].
buf
.
o
 = 
	`√wCXB
 (
	`FûtOvSv_°‹esize
 (rx[thªad][k].
fût
.
ovsv
),

176 
	`FûtOvSv_°‹ïoöt
 (
rx
[
thªad
][
k
].
fût
.
ovsv
),

179 
rx
[
thªad
][
k
].
buf
.
i_nŸch
 = 
	`√wCXB
 (
	`FûtOvSv_„tchsize
 (rx[thªad][k].
fût
.
ovsv_nŸch
),

180 
	`FûtOvSv_„tchpoöt
 (
rx
[
thªad
][
k
].
fût
.
ovsv_nŸch
),

183 
rx
[
thªad
][
k
].
buf
.
o_nŸch
 = 
	`√wCXB
 (
	`FûtOvSv_°‹esize
 (rx[thªad][k].
fût
.
ovsv_nŸch
),

184 
	`FûtOvSv_°‹ïoöt
 (
rx
[
thªad
][
k
].
fût
.
ovsv_nŸch
),

187 
rx
[
thªad
][
k
].
dcb
 = 
	`√wDCBlockî
(
DCB_SINGLE_POLE
,Ñx[thªad][k].
buf
.
i
);

188 
rx
[
thªad
][
k
].
dcb
->
Êag
 = 
FALSE
;

191 
rx
[
thªad
][
k
].
osc
.
‰eq
 = -9000.0;

192 
rx
[
thªad
][
k
].
osc
.
pha£
 = 0.0;

193 
rx
[
thªad
][
k
].
osc
.
gí
 = 
	`√wOSC
 (
uni
[thªad].
buÊí
,

194 
Com∂exT⁄e
,

195 
rx
[
thªad
][
k
].
osc
.
‰eq
,

196 
rx
[
thªad
][
k
].
osc
.
pha£
,

197 
uni
[
thªad
].
ßm∂î©e
, "SDR RX Oscillator");

216 
rx
[
thªad
][
k
].
w˝agc
.
gí
 = 
	`√wW˝AGC
 (

217 
agcMED
,

219 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

220 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

221 
uni
[
thªad
].
ßm∂î©e
,

240 
rx
[
thªad
][
k
].
w˝agc
.
Êag
 = 
TRUE
;

242 
rx
[
thªad
][
k
].
™f
.
gí
 = 
	`√wANF
 (

243 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

244 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

245 
DLINE_SIZE
,

258 
rx
[
thªad
][
k
].
™f
.
Êag
 = 
FALSE
;

259 
rx
[
thªad
][
k
].
™f
.
posôi⁄
 = 0;

261 
rx
[
thªad
][
k
].
™r
.
gí
 = 
	`√wANR
 (

262 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

263 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

264 
DLINE_SIZE
,

277 
rx
[
thªad
][
k
].
™r
.
Êag
 = 
FALSE
;

278 
rx
[
thªad
][
k
].
™r
.
posôi⁄
 = 0;

280 
rx
[
thªad
][
k
].
gøpheq
.
gí
 = 
	`√w_EQ
 (rx[thªad][k].
buf
.
o
, 
uni
[thªad].
ßm∂î©e
, uni[thªad].
wisdom
.
bôs
);

281 
rx
[
thªad
][
k
].
gøpheq
.
Êag
 = 
FALSE
;

284 
rx
[
thªad
][
k
].
amd
.
gí
 = 
	`√wAMD
 (

285 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

286 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

287 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

291 
uni
[
thªad
].
ßm∂î©e
,

314 
rx
[
thªad
][
k
].
fm
.
gí
 = 
	`√wFMD
 (

315 
uni
[
thªad
].
ßm∂î©e
,

320 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

321 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

322 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

335 
rx
[
thªad
][
k
].
b™f
.
gí
 = 
	`√w_blms
(

336 
rx
[
thªad
][
k
].
buf
.
o
,

339 
LMADF_INTERFERENCE
,

340 
uni
->
wisdom
.
bôs
);

341 
rx
[
thªad
][
k
].
b™f
.
Êag
 = 
FALSE
;

352 
rx
[
thªad
][
k
].
b™r
.
gí
 = 
	`√w_blms
(

353 
rx
[
thªad
][
k
].
buf
.
o
,

356 
LMADF_NOISE
,

357 
uni
->
wisdom
.
bôs
);

358 
rx
[
thªad
][
k
].
b™r
.
Êag
 = 
FALSE
;

361 
rx
[
thªad
][
k
].
nb
.
thªsh
 = 3.3f;

362 
rx
[
thªad
][
k
].
nb
.
gí
 = 
	`√w_noi£bœnkî
 (rx[thªad][k].
buf
.
i
,Ñx[thªad][k].nb.
thªsh
);

363 
rx
[
thªad
][
k
].
nb
.
Êag
 = 
FALSE
;

365 
rx
[
thªad
][
k
].
nb_sdrom
.
thªsh
 = 2.5f;

366 
rx
[
thªad
][
k
].
nb_sdrom
.
gí
 = 
	`√w_noi£bœnkî
 (rx[thªad][k].
buf
.
i
,Ñx[thªad][k].nb_sdrom.
thªsh
);

367 
rx
[
thªad
][
k
].
nb_sdrom
.
Êag
 = 
FALSE
;

369 
i
=0; i<
MAX_NOTCHES_IN_PASSBAND
; i++)

371 
rx
[
thªad
][
k
].
nŸch
[
i
].
gí
 = 
	`√w_IIR_2P2Z
(

372 
rx
[
thªad
][
k
].
buf
.
o
,

375 
Q
,

376 
NOTCH
,

377 
uni
[
thªad
].
ßm∂î©e
,

379 
rx
[
thªad
][
k
].
nŸch
[
i
].
gí
->
doCom∂ex
 = 
TRUE
;

382 
rx
[
thªad
][
k
].
•Ÿ
.
gí
 = 
	`√wSpŸT⁄eGí
 (

387 
uni
[
thªad
].
buÊí
,

388 
uni
[
thªad
].
ßm∂î©e
);

390 
	`mem£t
 ((*Ë&
rx
[
thªad
][
k
].
squñch
, 0,  (rx[thread][k].squelch));

391 
rx
[
thªad
][
k
].
squñch
.
thªsh
 = -150.0;

392 
rx
[
thªad
][
k
].
squñch
.
powî
 = 0.0;

393 
rx
[
thªad
][
k
].
squñch
.
Êag
 =Ñx[thªad][k].squñch.
ru¬ög
 =Ñx[thªad][k].squñch.
£t
 = 
FALSE
;

394 
rx
[
thªad
][
k
].
squñch
.
num
 = 
uni
[thªad].
buÊí
 - 48;

396 
rx
[
thªad
][
k
].
˝d
.
gí
 = 
	`√wWSCom∑ndî
 (
uni
[thªad].
˝dÀn
, 0.0,Ñx[thªad][k].
buf
.
o
);

397 
rx
[
thªad
][
k
].
˝d
.
Êag
 = 
FALSE
;

399 
rx
[
thªad
][
k
].
mode
 = 
uni
[thªad].mode.
sdr
;

400 
rx
[
thªad
][
k
].
bö
.
Êag
 = 
FALSE
;

406 
rx
[
thªad
][
k
].
azim
 = 
	`Cm∂x
 (1.0f, 1.0f);

409 
rx
[
thªad
][
k
].
tick
 = 0;

410 
	}
}

414 
PRIVATE
 

415 
	$£tup_tx
 (
thªad
)

418 
tx
[
thªad
].
iqfix
 = 
	`√wC‹ª˘IQ
 (0.0, 1.0, 0.0);

419 
tx
[
thªad
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (300.0, 3000.0,

420 
uni
[
thªad
].
ßm∂î©e
, uni[thªad].
buÊí
 + 1);

421 
tx
[
thªad
].
fût
.
ovsv
 = 
	`√wFûtOvSv
 (
	`FIRc€f
 (tx[thªad].fût.
c€f
),

422 
	`FIRsize
 (
tx
[
thªad
].
fût
.
c€f
), 
uni
[thªad].
wisdom
.
bôs
);

423 
tx
[
thªad
].
fût
.
ovsv_¥e
 = 
	`√wFûtOvSv
 (
	`FIRc€f
 (tx[thªad].fût.
c€f
),

424 
	`FIRsize
 (
tx
[
thªad
].
fût
.
c€f
), 
uni
[thªad].
wisdom
.
bôs
);

425 
	`n‹mÆize_vec_COMPLEX
 (
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,Åx[thªad].fût.ovsv->
f·Àn
,tx[thªad].fût.ovsv->
sˇÀ
);

426 
	`n‹mÆize_vec_COMPLEX
 (
tx
[
thªad
].
fût
.
ovsv_¥e
->
zfvec
,Åx[thªad].fût.ovsv_¥e->
f·Àn
,tx[thªad].fût.ovsv_¥e->
sˇÀ
);

429 
tx
[
thªad
].
fût
.
ßve
 = 
	`√wvec_COMPLEX
 (tx[thªad].fût.
ovsv
->
f·Àn
, "TX filter cache");

430 
	`mem˝y
 ((*Ë
tx
[
thªad
].
fût
.
ßve
,

431 (*Ë
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,

432 
tx
[
thªad
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

435 
tx
[
thªad
].
buf
.
i
 = 
	`√wCXB
 (
	`FûtOvSv_„tchsize
 (tx[thªad].
fût
.
ovsv
),

436 
	`FûtOvSv_„tchpoöt
 (
tx
[
thªad
].
fût
.
ovsv
), "initÅx[thread].buf.i");

437 
tx
[
thªad
].
buf
.
o
 = 
	`√wCXB
 (
	`FûtOvSv_°‹esize
 (tx[thªad].
fût
.
ovsv
),

438 
	`FûtOvSv_°‹ïoöt
 (
tx
[
thªad
].
fût
.
ovsv
), "initÅx[thread].buf.o");

444 
tx
[
thªad
].
buf
.
i_¥e
 = 
	`√wCXB
 (
	`FûtOvSv_„tchsize
 (tx[thªad].
fût
.
ovsv_¥e
),

445 
	`FûtOvSv_„tchpoöt
 (
tx
[
thªad
].
fût
.
ovsv_¥e
), "initÅx[thread].buf.i_pre");

446 
tx
[
thªad
].
buf
.
o_¥e
 = 
	`√wCXB
 (
	`FûtOvSv_°‹esize
 (tx[thªad].
fût
.
ovsv_¥e
),

447 
	`FûtOvSv_°‹ïoöt
 (
tx
[
thªad
].
fût
.
ovsv_¥e
), "initÅx[thread].buf.o_pre");

449 
tx
[
thªad
].
dcb
.
Êag
 = 
FALSE
;

450 
tx
[
thªad
].
dcb
.
gí
 = 
	`√wDCBlockî
 (
DCB_MED
,Åx[thªad].
buf
.
i
);

453 
tx
[
thªad
].
osc
.
‰eq
 = 0.0;

454 
tx
[
thªad
].
osc
.
pha£
 = 0.0;

455 
tx
[
thªad
].
osc
.
gí
 = 
	`√wOSC
 (
uni
[thªad].
buÊí
,

456 
Com∂exT⁄e
,

457 
tx
[
thªad
].
osc
.
‰eq
,

458 
tx
[
thªad
].
osc
.
pha£
, 
uni
[thªad].
ßm∂î©e
, "SDR TX Oscillator");

460 
tx
[
thªad
].
am
.
ˇºõr_Àvñ
 = 0.5f;

463 
tx
[
thªad
].
fm
.
cvtmod2‰eq
 = (
REAL
Ë(5000.0‡* 
TWOPI
 / 
uni
[thªad].
ßm∂î©e
);

464 
tx
[
thªad
].
fm
.
pha£
 = 0.0;

465 
tx
[
thªad
].
fm
.
k_¥ìmphasis
 = (
REAL
)(1.0‡+ 
uni
[thªad].
ßm∂î©e
/(
TWOPI
*3000.0f));

466 
tx
[
thªad
].
fm
.
k_dìmphasis
 = (
REAL
)(1.0‡+ 
uni
[thªad].
ßm∂î©e
/(
TWOPI
*250.0f));

467 
tx
[
thªad
].
fm
.
¥ìmphasis_fûãr
 = 0.0f;

468 
tx
[
thªad
].
fm
.
dìmphasis_out
 = 0.0f;

469 
tx
[
thªad
].
fm
.
˛ù_thªshﬁd
 = 0.75f;

470 
tx
[
thªad
].
fm
.
ouçut_LPF1
 = 
	`√w_IIR_LPF_2P
—x[thªad].
buf
.
i
,
uni
[thªad].
ßm∂î©e
, 3500.0f, 0.25f);

471 
tx
[
thªad
].
fm
.
ouçut_LPF2
 = 
	`√w_IIR_LPF_2P
—x[thªad].
buf
.
i
,
uni
[thªad].
ßm∂î©e
, 3500.0f, 1.75f);

473 
tx
[
thªad
].
fm
.
öput_LPF1
 = 
	`√w_IIR_LPF_2P
—x[thªad].
buf
.
i
,
uni
[thªad].
ßm∂î©e
, 3500.0f, 0.25f);

474 
tx
[
thªad
].
fm
.
öput_LPF2
 = 
	`√w_IIR_LPF_2P
—x[thªad].
buf
.
i
,
uni
[thªad].
ßm∂î©e
, 3500.0f, 1.75f);

475 
tx
[
thªad
].
fm
.
öput_HPF1
 = 
	`√w_IIR_HPF_2P
—x[thªad].
buf
.
i
,
uni
[thªad].
ßm∂î©e
, 150.0f, 0.34f);

476 
tx
[
thªad
].
fm
.
öput_HPF2
 = 
	`√w_IIR_HPF_2P
—x[thªad].
buf
.
i
,
uni
[thªad].
ßm∂î©e
, 150.0f, 0.94f);

478 
tx
[
thªad
].
fm
.
˘css
.
Êag
 = 
FALSE
;

479 
tx
[
thªad
].
fm
.
˘css
.
amp
 = .13f;

480 
tx
[
thªad
].
fm
.
˘css
.
‰eq_hz
 = 100.0;

481 
tx
[
thªad
].
fm
.
˘css
.
osc
 = 
	`√wOSC
 (
uni
[thªad].
buÊí
, 
Com∂exT⁄e
, 100.0, 0.0, uni[thªad].
ßm∂î©e
, "SDR TX CTTS Oscillator");

501 
tx
[
thªad
].
Àvñî
.
gí
 = 
	`√wW˝AGC
 (

504 
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
),

505 
	`CXBsize
 (
tx
[
thªad
].
buf
.
i
),

506 
uni
[
thªad
].
ßm∂î©e
,

523 
tx
[
thªad
].
Àvñî
.
Êag
 = 
TRUE
;

525 
tx
[
thªad
].
gøpheq
.
gí
 = 
	`√w_EQ
 (tx[thªad].
buf
.
i
, 
uni
[thªad].
ßm∂î©e
, uni[thªad].
wisdom
.
bôs
);

526 
tx
[
thªad
].
gøpheq
.
Êag
 = 
FALSE
;

528 
tx
[
thªad
].
com¥ess‹
.
gí
 = 
	`√wCom¥ess‹
 (

529 
	`CXBba£
 (
tx
[
thªad
].
buf
.
o_¥e
),

530 
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
),

531 
	`CXBsize
 (
tx
[
thªad
].
buf
.
i
),

534 
tx
[
thªad
].
com¥ess‹
.
Êag
 = 
FALSE
;

536 
	`mem£t
 ((*Ë&
tx
[
thªad
].
squñch
, 0,  (tx[thread].squelch));

537 
tx
[
thªad
].
squñch
.
thªsh
 = -40.0;

538 
tx
[
thªad
].
squñch
.
©ãn
 = 80.0;

539 
tx
[
thªad
].
squñch
.
powî
 = 0.0;

540 
tx
[
thªad
].
squñch
.
Êag
 = 
FALSE
;

541 
tx
[
thªad
].
squñch
.
ru¬ög
 =Åx[thªad].squñch.
£t
 = 
FALSE
;

542 
tx
[
thªad
].
squñch
.
num
 = 
uni
[thªad].
buÊí
 - 48;

559 
tx
[
thªad
].
Æc
.
gí
 = 
	`√wW˝AGC
 (

562 
	`CXBba£
 (
tx
[
thªad
].
buf
.
o
),

563 
	`CXBsize
 (
tx
[
thªad
].
buf
.
o
),

564 
uni
[
thªad
].
ßm∂î©e
,

581 
tx
[
thªad
].
Æc
.
Êag
 = 
TRUE
;

583 
tx
[
thªad
].
•r
.
gí
 =

584 
	`√wS≥echProc
 (0.4f, 3.0, 
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
), 
	`CXBsize
 (tx[thªad].buf.
o
));

585 
tx
[
thªad
].
•r
.
Êag
 = 
FALSE
;

590 
tx
[
thªad
].
hlb
.
gí
 = 
	`√wHûbîtsim
—x[thªad].
buf
.
i
,Åx[thread].buf.i);

591 
tx
[
thªad
].
hlb
.
Êag
 = 
TRUE
;

595 
tx
[
thªad
].
mode
 = 
uni
[thªad].mode.
sdr
;

597 
tx
[
thªad
].
tick
 = 0;

599 
	}
}

604 
	$£tup_w‹k•a˚
 (
REAL
 
øã
, 
buÊí
, 
SDRMODE
 
mode
,

605 *
wisdom
, 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
)

607 
k
;

609 
	`£tup_Æl
 (
øã
, 
buÊí
, 
mode
, 
wisdom
, 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
);

611 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

613 
	`£tup_rx
 (
k
, 
thªad
);

614 
uni
[
thªad
].
mu…úx
.
a˘
[
k
] = 
FALSE
;

616 
uni
[
thªad
].
mu…úx
.
a˘
[0] = 
TRUE
;

617 
uni
[
thªad
].
mu…úx
.
«c
 = 1;

619 
	`£tup_tx
 (
thªad
);

620 
	}
}

623 
	$de°roy_w‹k•a˚
 (
thªad
)

625 
i
, 
k
;

629 
	`dñHûsim
(
tx
[
thªad
].
hlb
.
gí
);

631 
	`dñS≥echProc
 (
tx
[
thªad
].
•r
.
gí
);

634 
	`dñW˝AGC
 (
tx
[
thªad
].
Àvñî
.
gí
);

635 
	`dñW˝AGC
 (
tx
[
thªad
].
Æc
.
gí
);

636 
	`dñCom¥ess‹
 (
tx
[
thªad
].
com¥ess‹
.
gí
);

637 
	`dñOSC
 (
tx
[
thªad
].
osc
.
gí
);

638 
	`dñDCBlockî
 (
tx
[
thªad
].
dcb
.
gí
);

639 
	`dñvec_COMPLEX
 (
tx
[
thªad
].
fût
.
ßve
);

640 
	`dñFûtOvSv
 (
tx
[
thªad
].
fût
.
ovsv
);

641 
	`dñFûtOvSv
 (
tx
[
thªad
].
fût
.
ovsv_¥e
);

642 
	`dñFIR_B™d∑ss_COMPLEX
 (
tx
[
thªad
].
fût
.
c€f
);

643 
	`dñC‹ª˘IQ
 (
tx
[
thªad
].
iqfix
);

644 
	`dñCXB
 (
tx
[
thªad
].
buf
.
o
);

645 
	`dñCXB
 (
tx
[
thªad
].
buf
.
i
);

646 
	`dñCXB
 (
tx
[
thªad
].
buf
.
o_¥e
);

647 
	`dñCXB
 (
tx
[
thªad
].
buf
.
i_¥e
);

650 
	`dñ_IIR_LPF_2P
(
tx
[
thªad
].
fm
.
ouçut_LPF1
);

651 
	`dñ_IIR_LPF_2P
(
tx
[
thªad
].
fm
.
ouçut_LPF2
);

652 
	`dñ_IIR_LPF_2P
(
tx
[
thªad
].
fm
.
öput_LPF1
);

653 
	`dñ_IIR_LPF_2P
(
tx
[
thªad
].
fm
.
öput_LPF2
);

654 
	`dñ_IIR_HPF_2P
(
tx
[
thªad
].
fm
.
öput_HPF1
);

655 
	`dñ_IIR_HPF_2P
(
tx
[
thªad
].
fm
.
öput_HPF2
);

658 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

660 
	`dñWSCom∑ndî
 (
rx
[
thªad
][
k
].
˝d
.
gí
);

661 
	`dñSpŸT⁄eGí
 (
rx
[
thªad
][
k
].
•Ÿ
.
gí
);

663 
	`dñ_nb
 (
rx
[
thªad
][
k
].
nb_sdrom
.
gí
);

664 
	`dñ_nb
 (
rx
[
thªad
][
k
].
nb
.
gí
);

667 
	`dñ_™f
 (
rx
[
thªad
][
k
].
™f
.
gí
);

668 
	`dñ_™r
 (
rx
[
thªad
][
k
].
™r
.
gí
);

669 
	`dñ_amd
 (
rx
[
thªad
][
k
].
amd
.
gí
);

671 
	`dñFMD
 (
rx
[
thªad
][
k
].
fm
.
gí
);

672 
	`dñOSC
 (
rx
[
thªad
][
k
].
osc
.
gí
);

673 
	`dñvec_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
ßve
);

674 
	`dñFûtOvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv
);

675 
	`dñFûtOvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv_nŸch
);

676 
	`dñFIR_B™d∑ss_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
c€f
);

677 
i
=0; i<
MAX_NOTCHES_IN_PASSBAND
; i++)

678 
	`dñ_IIR_2P2Z
(
rx
[
thªad
][
k
].
nŸch
[
i
].
gí
);

679 
	`dñC‹ª˘IQ
 (
rx
[
thªad
][
k
].
iqfix
);

680 
	`dñCXB
 (
rx
[
thªad
][
k
].
buf
.
o
);

681 
	`dñCXB
 (
rx
[
thªad
][
k
].
buf
.
i
);

682 
	`dñCXB
 (
rx
[
thªad
][
k
].
buf
.
o_nŸch
);

683 
	`dñCXB
 (
rx
[
thªad
][
k
].
buf
.
i_nŸch
);

687 
	`föish_•e˘rum
 (&
uni
[
thªad
].
•ec
);

689 
	}
}

698 
PRIVATE
 

699 
	$CXBs˛
 (
CXB
 
buff
, 
REAL
 
s˛
)

701 
i
;

702 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

703 
	`CXBd©a
 (
buff
, 
i
Ë
	`Cs˛
 (CXBd©®(buff, i), 
s˛
);

704 
	}
}

706 
PRIVATE
 
REAL


707 
	$CXBn‹m
 (
CXB
 
buff
)

709 
i
;

710 
REAL
 
sum
 = 0.0;

711 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

712 
sum
 +
	`Csqrmag
 (
	`CXBd©a
 (
buff
, 
i
));

713  (
REAL
Ë
	`sqπ
 (
sum
);

714 
	}
}

716 
PRIVATE
 
REAL


717 
	$CXBn‹msqr
 (
CXB
 
buff
)

719 
i
;

720 
REAL
 
sum
 = 0.0;

721 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

722 
sum
 +
	`Csqrmag
 (
	`CXBd©a
 (
buff
, 
i
));

723  (
REAL
Ë(
sum
);

724 
	}
}

726 
PRIVATE
 
REAL


727 
	$CXB≥ak
 (
CXB
 
buff
)

729 
i
;

730 
REAL
 
maxßm
 = 0.0;

731 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

732 
maxßm
 = 
	`max
 (
	`Cmag
 (
	`CXBd©a
 (
buff
, 
i
)), maxsam);

733  
maxßm
;

734 
	}
}

736 
PRIVATE
 
REAL
 
	$≥akl
(
CXB
 
buff
)

738 
i
;

739 
REAL
 
maxpwr
 = 0.0;

740 
i
=0; i<
	`CXBhave
(
buff
); i++)

741 
maxpwr
 = 
	`max
(
	`CXBªÆ
(
buff
, 
i
), maxpwr);

742  
maxpwr
;

743 
	}
}

745 
PRIVATE
 
REAL
 
	$≥akr
(
CXB
 
buff
)

747 
i
;

748 
REAL
 
maxpwr
 = 0.0;

749 
i
=0; i<
	`CXBhave
(
buff
); i++)

750 
maxpwr
 = 
	`max
(
	`CXBimag
(
buff
, 
i
), maxpwr);

751  
maxpwr
;

752 
	}
}

754 
PRIVATE
 
REAL


755 
	$CXB≥akpwr
 (
CXB
 
buff
)

757 
i
;

758 
REAL
 
maxpwr
 = 0.0;

759 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

760 
maxpwr
 = 
	`max
 (
	`Csqrmag
 (
	`CXBd©a
 (
buff
, 
i
)), maxpwr);

761  
maxpwr
;

762 
	}
}

770 
PRIVATE
 

771 
	$do_rx_mëî
 (
k
, 
thªad
, 
CXB
 
buf
, 
èp
)

773 
COMPLEX
 *
vec
 = 
	`CXBba£
 (
buf
);

774 
i
, 
Àn
 = 
	`CXBhave
 (
buf
);

775 
REAL
 
tmp
;

777 
èp
)

779 
RXMETER_PRE_CONV
:

780 
tmp
 = -10000.0f;

781 
i
 = 0; i < 
Àn
; i++)

782 
tmp
 = (
REAL
Ë
	`max
 (
	`Ábs
 (
vec
[
i
].
ª
),Åmp);

784 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
ADC_REAL
] = (
REAL
Ë(20.0 * 
	`log10
 (
tmp
 + 1e-10));

785 
tmp
 = -10000.0f;

786 
i
 = 0; i < 
Àn
; i++)

787 
tmp
 = (
REAL
Ë
	`max
 (
	`Ábs
 (
vec
[
i
].
im
),Åmp);

788 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
ADC_IMAG
] = (
REAL
Ë(20.0 * 
	`log10
 (
tmp
 + 1e-10));

790 
RXMETER_POST_FILT
:

791 
tmp
 = 0;

792 
i
 = 0; i < 
Àn
; i++)

793 
tmp
 +
	`Csqrmag
 (
vec
[
i
]);

794 
rx
[
thªad
][
k
].
n‹m
 = 
tmp
 / (
REAL
Ë
Àn
;

795 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
SIGNAL_STRENGTH
] =

796 (
REAL
Ë(10.0 * 
	`log10
 (
tmp
 + 1e-20));

797 i‡(
uni
[
thªad
].
mëî
.
rx
.
mode
[
k
] =
SIGNAL_STRENGTH
)

798 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AVG_SIGNAL_STRENGTH
] = uni[thªad].mëî.rx.vÆ[k][
SIGNAL_STRENGTH
];

799 
tmp
 = 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AVG_SIGNAL_STRENGTH
];

800 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AVG_SIGNAL_STRENGTH
] =

801 (
REAL
Ë(0.95 * 
tmp
 +

802 0.05 *
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
SIGNAL_STRENGTH
]);

804 
RXMETER_POST_AGC
:

807 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AGC_GAIN
] =

808 (
REAL
)(20.0*
	`log10
(1.0 / (
rx
[
thªad
][
k
].
w˝agc
.
gí
->
vﬁts
 + 1e-16)));

815 
	}
}

818 
PRIVATE
 

819 
	$do_rx_•e˘rum
 (
k
, 
thªad
, 
CXB
 
buf
, 
ty≥
)

821 i‡(
uni
[
thªad
].
•ec
.
Êag
 && 
k
 =uni[thªad].•ec.
rxk
 && 
ty≥
 == uni[thread].spec.type)

823 i‡((
uni
[
thªad
].
•ec
.
ty≥
 =
SPEC_POST_DET
Ë&& (!
rx
[thªad][
k
].
bö
.
Êag
))

825 
i
;

826 
i
=0; i<
	`CXBhave
(
rx
[
thªad
][
k
].
buf
.
o
);i++)

827 
	`CXBd©a
(
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
+
i
Ë
	`Cm∂x
(
	`CXBªÆ
(
rx
[thªad][
k
].
buf
.
o
, i)*1.414f, 0.0);

831 
	`mem˝y
 ((*Ë&
	`CXBd©a
 (
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
),

832 (*Ë
	`CXBba£
 (
buf
), 
	`CXBsize
 (bufË*  (
COMPLEX
));

834 
uni
[
thªad
].
•ec
.
fûl
 = (uni[thªad].•ec.fû»+ 
	`CXBsize
 (
buf
)Ë& uni[thªad].•ec.
mask
;

836 
	}
}

838 
PRIVATE
 

839 
	$do_tx_•e˘rum
 (
thªad
, 
CXB
 
buf
)

841 i‡(
uni
[
thªad
].
•ec
.
ty≥
 =
SPEC_PREMOD
)

843 
i
;

844 
i
=0; i<
	`CXBhave
(
tx
[
thªad
].
buf
.i);i++)

845 
	`CXBd©a
(
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
+
i
Ë
	`Cm∂x
(
	`CXBªÆ
(
tx
[thªad].
buf
.i, i), 0.0);

849 
	`mem˝y
 ((*Ë&
	`CXBd©a
 (
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
),

850 (*Ë
	`CXBba£
 (
buf
), 
	`CXBsize
 (bufË*  (
COMPLEX
));

852 
uni
[
thªad
].
•ec
.
fûl
 = (uni[thªad].•ec.fû»+ 
	`CXBsize
 (
buf
)Ë& uni[thªad].•ec.
mask
;

853 
	}
}

858 
PRIVATE
 

859 
	$should_do_rx_squñch
 (
k
, 
thªad
)

861 i‡(
rx
[
thªad
][
k
].
squñch
.
Êag
)

863 
i
, 
n
 = 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
);

864 
rx
[
thªad
][
k
].
squñch
.
powî
 = 0.0;

866 
i
 = 0; i < 
n
; i++)

867 
rx
[
thªad
][
k
].
squñch
.
powî
 +
	`Csqrmag
 (
	`CXBd©a
 (rx[thªad][k].
buf
.
o
, 
i
));

869 if(10.0 * 
	`log10
 (
rx
[
thªad
][
k
].
squñch
.
powî
 + 1e-17Ë<Ñx[thªad][k].squñch.
thªsh
)

870 
rx
[
thªad
][
k
].
squñch
.
£t
 = 
TRUE
;

872 
rx
[
thªad
][
k
].
squñch
.
£t
 = 
FALSE
;

876 
rx
[
thªad
][
k
].
squñch
.
£t
 = 
FALSE
;

878 
	}
}

880 
PRIVATE
 

881 
	$should_do_tx_squñch
 (
thªad
)

883 i‡(
tx
[
thªad
].
squñch
.
Êag
)

885 
i
, 
n
 = 
	`CXBsize
 (
tx
[
thªad
].
buf
.i);

886 
tx
[
thªad
].
squñch
.
powî
 = 0.0;

888 
i
 = 0; i < 
n
; i++)

889 
tx
[
thªad
].
squñch
.
powî
 +
	`Csqrmag
 (
	`CXBd©a
 (tx[thªad].
buf
.
i
, i));

891 if((-30 + 10.0 * 
	`log10
 (
tx
[
thªad
].
squñch
.
powî
 + 1e-17)Ë<Åx[thªad].squñch.
thªsh
)

892 
tx
[
thªad
].
squñch
.
£t
 = 
TRUE
;

894 
tx
[
thªad
].
squñch
.
£t
 = 
FALSE
;

899 
tx
[
thªad
].
squñch
.
£t
 = 
FALSE
;

901 
	}
}

906 
PRIVATE
 

907 
	$do_squñch
 (
k
, 
thªad
)

909 i‡(!
rx
[
thªad
][
k
].
squñch
.
ru¬ög
)

911 
i
, 
m
 = 
rx
[
thªad
][
k
].
squñch
.
num
, 
n
 = 
	`CXBhave
 (rx[thªad][k].
buf
.
o
) - m;

913 
i
 = 0; i < 
m
; i++)

915 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
) =

916 
	`Cs˛
 (
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
), (
REAL
Ë(1.0 - (REALËò/ 
m
));

919 
	`mem£t
 ((*Ë(
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
Ë+ 
m
), 0, 
n
 *  (
COMPLEX
));

920 
rx
[
thªad
][
k
].
squñch
.
ru¬ög
 = 
TRUE
;

924 
	`mem£t
 ((*Ë
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

925 0, 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
Ë*  (
COMPLEX
));

927 
	}
}

929 
PRIVATE
 

930 
	$do_tx_squñch
 (
thªad
)

932 
i
, 
m
 = 
tx
[
thªad
].
squñch
.
num
, 
n
 = 
	`CXBhave
 (tx[thªad].
buf
.i);

933 
l
 = (()
tx
[
thªad
].
squñch
.
©ãn
 * 
m
) / 100;

935 i‡(!
tx
[
thªad
].
squñch
.
ru¬ög
)

937 
i
 = 0; i < 
n
; i++)

939 
REAL
 
sˇÀ
 = (REALË(1.0 - (REALË(
i
 < 
l
 ? i :ÜË/ 
m
);

940 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

941 
	`Cs˛
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i), 
sˇÀ
);

943 
tx
[
thªad
].
squñch
.
ru¬ög
 = 
TRUE
;

945 i‡(
l
 !
m
)

947 
REAL
 
sˇÀ
 = (REALË(1.0 - (REALË
l
 / 
m
);

948 
i
 = 0; i < 
n
; i++)

950 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

951 
	`Cs˛
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i), 
sˇÀ
);

956 
	`mem£t
 ((*Ë
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
),

957 0, 
	`CXBhave
 (
tx
[
thªad
].
buf
.
i
Ë*  (
COMPLEX
));

959 
	}
}

964 
PRIVATE
 

965 
	$no_squñch
 (
k
, 
thªad
)

967 i‡(
rx
[
thªad
][
k
].
squñch
.
ru¬ög
)

969 
i
, 
m
 = 
rx
[
thªad
][
k
].
squñch
.
num
;

971 
i
 = 0; i < 
m
; i++)

973 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
) =

974 
	`Cs˛
 (
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
), (
REAL
Ëò/ 
m
);

976 
rx
[
thªad
][
k
].
squñch
.
ru¬ög
 = 
FALSE
;

978 
	}
}

980 
PRIVATE
 

981 
	$no_tx_squñch
 (
thªad
)

983 
i
, 
m
 = 
tx
[
thªad
].
squñch
.
num
, 
n
 = 
	`CXBhave
 (tx[thªad].
buf
.i);

984 
l
 = (((Ë
tx
[
thªad
].
squñch
.
©ãn
Ë* 
m
) / 100;

986 i‡(
tx
[
thªad
].
squñch
.
ru¬ög
)

988 
i
 = 0; i < 
m
; i++)

990 
REAL
 
sˇÀ
 = (REALË(
i
 < 
l
 ?Ü : iË/ 
m
;

991 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

992 
	`Cs˛
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i), 
sˇÀ
);

994 
tx
[
thªad
].
squñch
.
ru¬ög
 = 
FALSE
;

996 
	}
}

1001 
	$do_rx_divîsôy_comböe
()

1003 
i
, 
n
=
	`CXBhave
 (
rx
[0][0].
buf
.i);

1004 
i
=0;i<
n
;i++)

1006 
	`CXBd©a
(
rx
[0][0].
buf
.
i
,iË
	`Cs˛
(
	`Cadd
(CXBd©a‘x[0][0].buf.i,i),
	`Cmul
(CXBd©a‘x[2][0].buf.i,i),
divîsôy
.
sˇœr
)),divîsôy.
gaö
);

1008 
	}
}

1011 
PRIVATE
 

1012 
	$do_rx_¥e
 (
k
, 
thªad
)

1014 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.i), 
uni
[thªad].
buÊí
);

1017 
	`do_rx_mëî
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
i
, 
RXMETER_PRE_CONV
);

1019 i‡(
rx
[
thªad
][
k
].
dcb
->
Êag
Ë
	`DCBlock
(rx[thread][k].dcb);

1021 i‡(
rx
[
thªad
][
k
].
nb
.
Êag
)

1022 
	`noi£bœnkî
 (
rx
[
thªad
][
k
].
nb
.
gí
);

1023 i‡(
rx
[
thªad
][
k
].
nb_sdrom
.
Êag
)

1024 
	`SDROMnoi£bœnkî
 (
rx
[
thªad
][
k
].
nb_sdrom
.
gí
);

1026 
	`c‹ª˘IQ
 (
rx
[
thªad
][
k
].
buf
.
i
,Ñx[thªad][k].
iqfix
, 
FALSE
, k);

1038 i‡(
rx
[
thªad
][
k
].
osc
.
gí
->
Fªquícy
 != 0.0)

1040 
	`Com∂exOSC
 (
rx
[
thªad
][
k
].
osc
.
gí
);

1041 
i
 = 0; i < 
n
; i++)

1042 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
i
, iË
	`Cmul
 (CXBdata (rx[thread][k].buf.i, i),

1043 
	`OSCCd©a
 (
rx
[
thªad
][
k
].
osc
.
gí
, 
i
));

1048 
	`do_rx_•e˘rum
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
i
, 
SPEC_PRE_FILT
);

1050 i‡(
rx
[
thªad
][
k
].
mode
 !
SPEC
)

1052 i‡(
rx
[
thªad
][
k
].
ªßm∂e
.
Êag
) {

1053 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí1r
);

1054 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí1i
);

1056 i‡(
rx
[
thªad
][
k
].
tick
 == 0)

1057 
	`ª£t_OvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv
);

1059 
	`fûãr_OvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv
);

1063 
	`mem˝y
 (
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
), CXBba£ (rx[thªad][k].buf.
i
),

1064  (
COMPLEX
Ë* 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
i
));

1067 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
ËCXBhavê‘x[thªad][k].buf.
i
);

1069 
	`do_rx_mëî
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
RXMETER_POST_FILT
);

1070 
	`do_rx_•e˘rum
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
SPEC_POST_FILT
);

1072 i‡(
rx
[
thªad
][
k
].
˝d
.
Êag
)

1073 
	`WSCom∑nd
 (
rx
[
thªad
][
k
].
˝d
.
gí
);

1075 
	`should_do_rx_squñch
 (
k
, 
thªad
);

1077 
	}
}

1079 
PRIVATE
 

1080 
	$do_rx_po°
 (
k
, 
thªad
)

1082 
i
, 
n
 = 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
);

1084 if(
rx
[
thªad
][
k
].
mode
 !
FM
)

1086 if(
rx
[
thªad
][
k
].
squñch
.
£t
)

1088 
	`do_squñch
 (
k
, 
thªad
);

1090 
	`no_squñch
 (
k
, 
thªad
);

1093 i‡(
rx
[
thªad
][
k
].
gøpheq
.
Êag
)

1095 
rx
[
thªad
][
k
].
mode
)

1097 
DRM
:

1098 
DIGL
:

1099 
DIGU
:

1102 
	`gøphi˚q
 (
rx
[
thªad
][
k
].
gøpheq
.
gí
);

1107 
	`do_rx_•e˘rum
(
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
SPEC_POST_DET
);

1111 if((
rx
[
thªad
][
k
].
™f
.
posôi⁄
 =1Ë&&Ñx[thªad][k].
mode
 !
FM
)

1112 
	`W˝AGC
 (
rx
[
thªad
][
k
].
w˝agc
.
gí
);

1114 i‡(
rx
[
thªad
][
k
].
™f
.
Êag
)

1116 
rx
[
thªad
][
k
].
mode
)

1118 
DRM
:

1119 
DIGL
:

1120 
DIGU
:

1121 
CWL
:

1122 
CWU
:

1126 
	`nŸch
 (
rx
[
thªad
][
k
].
™f
.
gí
);

1132 i‡(
rx
[
thªad
][
k
].
™r
.
Êag
)

1133 
	`noi£_ªdu˚
(
rx
[
thªad
][
k
].
™r
.
gí
);

1135 i‡(
rx
[
thªad
][
k
].
tick
 == 0)

1136 
	`ª£t_OvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv_nŸch
);

1137 if(
rx
[
thªad
][
k
].
™f
.
Êag
 ||Ñx[thªad][k].
™r
.Êag || (rx[thªad][k].
mode
 =
AM
Ë|| (rx[thªad][k].modê=
SAM
))

1139 
i
 = 0; i < 
	`CXBhave
(
rx
[
thªad
][
k
].
buf
.
o
); i++)

1140 
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
i_nŸch
, 
i
Ë
	`Cm∂x
 (2.0‡* 
	`CXBªÆ
‘x[thªad][k].buf.
o
, i), 0.0f);

1141 
	`fûãr_OvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv_nŸch
);

1142 
	`mem˝y
 (
	`CXBba£
(
rx
[
thªad
][
k
].
buf
.
o
), CXBba£‘x[thªad][k].buf.
o_nŸch
), (
COMPLEX
Ë* 
	`CXBhave
(rx[thread][k].buf.o));

1145 
i
=0; i<
MAX_NOTCHES_IN_PASSBAND
; i++)

1148 i‡(
rx
[
thªad
][
k
].
nŸch
[
i
].
Êag
)

1149 
	`do_IIR_2P2Z
(
rx
[
thªad
][
k
].
nŸch
[
i
].
gí
);

1153 if((
rx
[
thªad
][
k
].
™f
.
posôi⁄
 =0Ë&&Ñx[thªad][k].
mode
 !
FM
)

1154 
	`W˝AGC
 (
rx
[
thªad
][
k
].
w˝agc
.
gí
);

1161 i‡(
divîsôy
.
Êag
 && (
k
==0Ë&& (
thªad
==2))

1162 
i
 = 0; i < 
n
; i++Ë
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
,iË
cxzîo
;

1173 
	`do_rx_mëî
(
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
RXMETER_POST_AGC
);

1174 
	`do_rx_•e˘rum
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
SPEC_POST_AGC
);

1176 i‡(!
rx
[
thªad
][
k
].
bö
.
Êag
)

1177 
i
 = 0; i < 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
); i++)

1178 
	`CXBimag
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
	`CXBªÆ
 (rx[thread][k].buf.o, i);

1180 if(
uni
[
thªad
].
mu…úx
.
«c
 == 1)

1182 
i
 = 0; i < 
n
; i++)

1183 
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
	`Cs˛
(
	`Cm∂x
‘x[thªad][k].
azim
.
ª
*
	`CXBªÆ
(rx[thread][k].buf.o, i),

1184 
rx
[
thªad
][
k
].
azim
.
im
*
	`CXBimag
‘x[thªad][k].
buf
.
o
, 
i
)),1.414f);

1188 
i
 = 0; i < 
n
; i++)

1189 
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
	`Cm∂x
‘x[thªad][k].
azim
.
ª
*
	`CXBªÆ
(rx[thread][k].buf.o, i),

1190 
rx
[
thªad
][
k
].
azim
.
im
*
	`CXBimag
‘x[thªad][k].
buf
.
o
, 
i
));

1193 i‡((
thªad
 =2Ë&& (
divîsôy
.
Êag
))

1194 
i
=0;i< 
n
; i++Ë
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
,iË
cxzîo
;

1196 i‡(
rx
[
thªad
][
k
].
ouçut_gaö
 != 1.0)

1197 
i
 = 0; i < 
n
; i++Ë
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
,iË
	`Cs˛
(CXBd©a‘x[thªad][k].buf.o,i),rx[thªad][k].
ouçut_gaö
);

1198 i‡(
rx
[
thªad
][
k
].
ªßm∂e
.
Êag
) {

1199 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí2r
);

1200 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí2i
);

1203 
	}
}

1207 
PRIVATE
 

1208 
	$do_rx_SBCW
 (
k
, 
thªad
)

1211 
	}
}

1213 
PRIVATE
 

1214 
	$do_rx_AM
 (
k
, 
thªad
)

1216 
	`am_demod
 (
rx
[
thªad
][
k
].
amd
.
gí
);

1217 
	}
}

1219 
PRIVATE
 

1220 
	$do_rx_FM
 (
k
, 
thªad
)

1222 
	`FMDemod
 (
rx
[
thªad
][
k
].
fm
.
gí
);

1223 
	}
}

1225 
PRIVATE
 

1226 
	$do_rx_DRM
 (
k
, 
thªad
)

1229 
	}
}

1231 
PRIVATE
 

1232 
	$do_rx_SPEC
 (
k
, 
thªad
)

1235 
	}
}

1237 
PRIVATE
 

1238 
	$do_rx_NIL
 (
k
, 
thªad
)

1240 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.i), 
uni
[thªad].
buÊí
);

1241 
i
 = 0; i < 
n
; i++)

1242 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
cxzîo
;

1243 
	}
}

1247 
PRIVATE
 

1248 
	$do_rx
 (
k
, 
thªad
)

1250 
	`do_rx_¥e
 (
k
, 
thªad
);

1251 
rx
[
thªad
][
k
].
mode
)

1253 
DIGU
:

1254 
DIGL
:

1255 
USB
:

1256 
LSB
:

1257 
CWU
:

1258 
CWL
:

1259 
DSB
:

1260 
	`do_rx_SBCW
 (
k
, 
thªad
);

1262 
AM
:

1263 
SAM
:

1264 
	`do_rx_AM
 (
k
, 
thªad
);

1266 
FM
:

1267 
	`do_rx_FM
 (
k
, 
thªad
);

1269 
DRM
:

1270 
	`do_rx_DRM
 (
k
, 
thªad
);

1272 
SPEC
:

1274 
	`do_rx_SPEC
 (
k
, 
thªad
);

1277 
	`do_rx_po°
 (
k
, 
thªad
);

1278 
	}
}

1282 
PRIVATE
 
REAL
 
	gmic_avg
 = 0.0f, 
	gmic_pk
 = 0.0f,

1283 
	gÆc_avg
 = 0.0f, 
	gÆc_pk
 = 0.0f,

1284 
	gÀv_avg
 = 0.0f, 
	gÀv_pk
 = 0.0f,

1285 
	geq_avg
 = 0.0f, 
	geq_pk
 = 0.0f,

1286 
	gcomp_avg
 = 0.0f, 
	gcomp_pk
 = 0.0f,

1287 
	g˝dr_avg
 = 0.0f, 
	g˝dr_pk
 = 0.0f;

1290 
PRIVATE
 
REAL
 
	g≥aksmoŸh
 = 0.0;

1291 
PRIVATE
 

1292 
	$do_tx_mëî
 (
thªad
, 
CXB
 
buf
, 
TXMETERTYPE
 
mt
)

1294 
COMPLEX
 *
vec
 = 
	`CXBba£
 (
buf
);

1295 
i
, 
Àn
 = 
	`CXBhave
 (
buf
);

1296 
REAL
 
tmp
 = 0.0f;

1298 
mt
)

1300 
TX_MIC
:

1301 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1302 
mic_avg
 = (
REAL
) (0.9995 * mic_avg +

1303 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1304 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC
] = (
REAL
Ë(-10.0 * 
	`log10
 (
mic_avg
 + 1e-16));

1306 
mic_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1307 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
mic_pk
 + 1e-16));

1310 
TX_PWR
:

1311 
i
 = 0, 
tmp
 = 0.0000001f;

1312 
i
 < 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
); i++)

1313 
tmp
 +
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
o
, 
i
));

1314 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_PWR
] = 
tmp
/(
REAL
Ë
Àn
;

1317 
TX_ALC
:

1318 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1319 
Æc_avg
 = (
REAL
) (0.9995 *álc_avg +

1320 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1321 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC
] = (
REAL
Ë(-10.0 * 
	`log10
 (
Æc_avg
 + 1e-16));

1323 
Æc_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1324 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
Æc_pk
+ 1e-16));

1325 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_G
] = (
REAL
)(20.0*
	`log10
(1.0 / (tx[thªad].
Æc
.
gí
->
vﬁts
 +1e-16)));

1330 
TX_EQ
:

1331 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1332 
eq_avg
 = (
REAL
) (0.9995 *Éq_avg +

1333 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1334 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ
] = (
REAL
Ë(-10.0 * 
	`log10
 (
eq_avg
 + 1e-16));

1336 
eq_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1337 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
eq_pk
 + 1e-16));

1340 
TX_LVL
:

1341 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1342 
Àv_avg
 = (
REAL
) (0.9995 *Üev_avg +

1343 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1344 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL
] = (
REAL
Ë(-10.0 * 
	`log10
 (
Àv_avg
 + 1e-16));

1346 
Àv_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1347 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
Àv_pk
 + 1e-16));

1349 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_G
] = (
REAL
)(20.0*
	`log10
(1.0 / (tx[thªad].
Àvñî
.
gí
->
vﬁts
 + 1e-16)));

1352 
TX_COMP
:

1353 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1354 
comp_avg
 = (
REAL
) (0.9995 * comp_avg +

1355 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1356 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP
] = (
REAL
Ë(-10.0 * 
	`log10
 (
comp_avg
 + 1e-16));

1358 
comp_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1359 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
comp_pk
 + 1e-16));

1362 
TX_CPDR
:

1363 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1364 
˝dr_avg
 = (
REAL
) (0.9995 * cpdr_avg +

1365 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1366 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR
] = (
REAL
Ë(-10.0 * 
	`log10
 (
˝dr_avg
 + 1e-16));

1368 
˝dr_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1369 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
˝dr_pk
 + 1e-16));

1375 
	}
}

1377 
PRIVATE
 

1378 
	$do_tx_¥e
 (
thªad
)

1380 
i
, 
n
 = 
	`CXBhave
 (
tx
[
thªad
].
buf
.i);

1381 
i
 = 0; i < 
n
; i++)

1382 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, iË
	`Cm∂x
 (
	`CXBimag
 (tx[thread].buf.i, i), 0.0);

1385 i‡(
tx
[
thªad
].
dcb
.
Êag
)

1386 
	`DCBlock
 (
tx
[
thªad
].
dcb
.
gí
);

1388 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_MIC
);

1391 
	`should_do_tx_squñch
(
thªad
);

1392 if(
tx
[
thªad
].
squñch
.
£t
)

1393 
	`do_tx_squñch
 (
thªad
);

1395 
	`no_tx_squñch
 (
thªad
);

1397 
tx
[
thªad
].
mode
)

1399 
DIGU
:

1400 
DIGL
:

1401 
DRM
:

1402 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_EQ
);

1403 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_LVL
);

1404 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_COMP
);

1410 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_CPDR
);

1413 i‡(
tx
[
thªad
].
gøpheq
.
Êag
)

1414 
	`gøphi˚q
 (
tx
[
thªad
].
gøpheq
.
gí
);

1415 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_EQ
);

1420 i‡(
tx
[
thªad
].
Àvñî
.
Êag
)

1421 
	`W˝AGC
 (
tx
[
thªad
].
Àvñî
.
gí
);

1422 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_LVL
);

1430 i‡(
tx
[
thªad
].
•r
.
Êag
)

1431 
	`S≥echPro˚ss‹
 (
tx
[
thªad
].
•r
.
gí
);

1432 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_COMP
);

1439 if(
tx
[
thªad
].
mode
 !
FM
)

1441 i‡(
tx
[
thªad
].
com¥ess‹
.
Êag
)

1443 
i
 = 0; i < 
	`CXBhave
(
tx
[
thªad
].
buf
.i); i++)

1444 
	`CXBd©a
(
tx
[
thªad
].
buf
.
i_¥e
, 
i
Ë
	`Cm∂x
 (2.0‡* 
	`CXBªÆ
(tx[thread].buf.i, i), 0.0);

1446 
	`CXBhave
(
tx
[
thªad
].
buf
.
i_¥e
ËCXBhave—x[thªad].buf.
i
);

1447 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o_¥e
ËCXBhavê—x[thªad].buf.
i_¥e
);

1449 i‡(
tx
[
thªad
].
tick
 == 0)

1450 
	`ª£t_OvSv
 (
tx
[
thªad
].
fût
.
ovsv_¥e
);

1452 
	`fûãr_OvSv
 (
tx
[
thªad
].
fût
.
ovsv_¥e
);

1455 
	`Com¥ess‹
 (
tx
[
thªad
].
com¥ess‹
.
gí
);

1462 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_CPDR
);

1467 
	}
}

1469 
PRIVATE
 

1470 
	$do_tx_po°
 (
thªad
)

1472 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
ËCXBhavê—x[thªad].buf.
i
);

1474 i‡(
tx
[
thªad
].
tick
 == 0)

1475 
	`ª£t_OvSv
 (
tx
[
thªad
].
fût
.
ovsv
);

1478 
	`fûãr_OvSv
 (
tx
[
thªad
].
fût
.
ovsv
);

1496 i‡(
tx
[
thªad
].
Æc
.
Êag
 || (tx[thªad].
mode
 =
AM
Ë|| (tx[thªad].modê=
SAM
))

1497 
	`W˝AGC
 (
tx
[
thªad
].
Æc
.
gí
);

1499 i‡((
tx
[
thªad
].
mode
 =
AM
Ë|| (tx[thªad].modê=
SAM
))

1501 
i
;

1502 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
); i++)

1504 
	`CXBªÆ
(
tx
[
thªad
].
buf
.
o
, 
i
) =

1505 
tx
[
thªad
].
am
.
ˇºõr_Àvñ
 + (1.0‡-Åx[thªad].am.ˇºõr_ÀvñË* 
	`CXBªÆ
—x[thªad].
buf
.
o
, 
i
);

1506 
	`CXBimag
(
tx
[
thªad
].
buf
.
o
, 
i
) = 0.0f;

1511 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
o
, 
TX_ALC
);

1513 i‡(
uni
[
thªad
].
•ec
.
Êag
)

1514 
	`do_tx_•e˘rum
 (
thªad
, 
tx
[thªad].
buf
.
o
);

1516 i‡(
tx
[
thªad
].
osc
.
gí
->
Fªquícy
 != 0.0)

1518 
i
;

1519 
	`Com∂exOSC
 (
tx
[
thªad
].
osc
.
gí
);

1520 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
); i++)

1522 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
o
, 
i
) =

1523 
	`Cmul
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
o
, 
i
), 
	`OSCCd©a
 (tx[thªad].
osc
.
gí
, i));

1527 
	`c‹ª˘IQ
 (
tx
[
thªad
].
buf
.
o
,Åx[thªad].
iqfix
, 
TRUE
,0);

1528 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
o
, 
TX_PWR
);

1532 
	}
}

1536 
PRIVATE
 

1537 
	$do_tx_SBCW
 (
thªad
)

1539 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.
i
), 
uni
[thªad].
buÊí
);

1542 i‡(
tx
[
thªad
].
mode
 !
DSB
)

1543 
	`CXBs˛
 (
tx
[
thªad
].
buf
.
i
, 2.0f);

1544 
	}
}

1546 
PRIVATE
 

1547 
	$do_tx_AM
 (
thªad
)

1549 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.i), 
uni
[thªad].
buÊí
);

1552 
i
 = 0; i < 
n
; i++)

1554 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, iË
	`Cm∂x
 ((
REAL
)

1555 (
tx
[
thªad
].
am
.
ˇºõr_Àvñ
 +

1556 (1.0‡- 
tx
[
thªad
].
am
.
ˇºõr_Àvñ
Ë* 
	`CXBªÆ
 (tx[thªad].
buf
.
i
, i)), 0.0);

1558 
	}
}

1560 
PRIVATE
 

1561 
	$do_tx_FM
 (
thªad
)

1563 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.i), 
uni
[thªad].
buÊí
);

1566 
i
 = 0; i < 
n
; i++)

1568 
tx
[
thªad
].
osc
.
pha£
 +
	`CXBªÆ
 (tx[thªad].
buf
.
i
, iË*Åx[thªad].
fm
.
cvtmod2‰eq
;

1569 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

1570 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
tx
[
thªad
].
osc
.
pha£
), (
IMAG
Ë
	`sö
 (tx[thread].osc.phase));

1572 
	}
}

1574 
PRIVATE
 

1575 
	$do_tx_NIL
 (
thªad
)

1577 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.i), 
uni
[thªad].
buÊí
);

1578 
i
 = 0; i < 
n
; i++)

1579 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, iË
cxzîo
;

1580 
	}
}

1584 
PRIVATE
 

1585 
	$do_tx
 (
thªad
)

1587 
	`do_tx_¥e
 (
thªad
);

1588 
tx
[
thªad
].
mode
)

1590 
USB
:

1591 
LSB
:

1592 
CWU
:

1593 
CWL
:

1594 
DIGU
:

1595 
DIGL
:

1596 
DRM
:

1597 
DSB
:

1598 
	`do_tx_SBCW
 (
thªad
);

1600 
AM
:

1601 
SAM
:

1602 
	`do_tx_AM
 (
thªad
);

1604 
FM
:

1605 
	`do_tx_FM
 (
thªad
);

1607 
SPEC
:

1609 
	`do_tx_NIL
 (
thªad
);

1612 
	`do_tx_po°
 (
thªad
);

1614 
	}
}

1621 
	$¥o˚ss_ßm∂es
 (*
buÊ
, *
bu‰
, *
auxl
, *
auxr
, 
n
, 
thªad
)

1623 
i
, 
k
;

1625 
uni
[
thªad
].
mode
.
åx
)

1627 
RX
:

1630 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

1632 
BOOLEAN
 
kd⁄e
=
FALSE
;

1633 
k⁄e
 = -1;

1634 i‡(
uni
[
thªad
].
mu…úx
.
a˘
[
k
])

1636 i‡(!
kd⁄e
) {

1637 
kd⁄e
 = 
TRUE
;

1638 
k⁄e
 = 
k
;

1639 
i
 = 0; i < 
n
; i++)

1641 
	`CXBimag
 (
rx
[
thªad
][
k
].
buf
.
i
, i) =

1642 
buÊ
[
i
], 
	`CXBªÆ
 (
rx
[
thªad
][
k
].
buf
.i, iË
bu‰
[i];

1644 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
i
Ë
n
;

1645 } 
	`mem˝y
(
rx
[
thªad
][
k
].
buf
.
i
,rx[thªad][
k⁄e
].buf.i,
	`CXBhave
‘x[thªad][
kd⁄e
].buf.i)*(
COMPLEX
));

1650 
	`mem£t
 ((*Ë
buÊ
, 0, 
n
 *  ());

1651 
	`mem£t
 ((*Ë
bu‰
, 0, 
n
 *  ());

1654 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

1656 i‡(
uni
[
thªad
].
mu…úx
.
a˘
[
k
])

1658 
	`do_rx
 (
k
, 
thªad
), 
rx
[thªad][k].
tick
++;

1660 
i
 = 0; i < 
n
; i++)

1662 
buÊ
[
i
] +(Ë
	`CXBimag
 (
rx
[
thªad
][
k
].
buf
.
o
, i);

1663 
bu‰
[
i
] +(Ë
	`CXBªÆ
 (
rx
[
thªad
][
k
].
buf
.
o
, i);

1665 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
Ë
n
;

1671 i‡(
uni
[
thªad
].
mix
.
rx
.
Êag
)

1673 
i
 = 0; i < 
n
; i++)

1675 
buÊ
[
i
] +(Ë(
auxl
[i] * 
uni
[
thªad
].
mix
.
rx
.
gaö
),

1676 
bu‰
[
i
] +(Ë(
auxr
[i] * 
uni
[
thªad
].
mix
.
rx
.
gaö
);

1682 
TX
:

1685 i‡(
uni
[
thªad
].
mix
.
tx
.
Êag
)

1687 
i
 = 0; i < 
n
; i++)

1689 
buÊ
[
i
] +(Ë(
auxl
[i] * 
uni
[
thªad
].
mix
.
tx
.
gaö
),

1690 
bu‰
[
i
] +(Ë(
auxr
[i] * 
uni
[
thªad
].
mix
.
tx
.
gaö
);

1694 
i
 = 0; i < 
n
; i++)

1696 
	`CXBimag
 (
tx
[
thªad
].
buf
.
i
, iË
buÊ
[i];

1697 
	`CXBªÆ
 (
tx
[
thªad
].
buf
.
i
, iË
bu‰
[i];

1700 
	`CXBhave
 (
tx
[
thªad
].
buf
.
i
Ë
n
;

1701 
tx
[
thªad
].
n‹m
 = 
	`CXB≥ak
 (tx[thªad].
buf
.
i
);

1703 
	`do_tx
 (
thªad
), 
tx
[thªad].
tick
++;

1705 
i
 = 0; i < 
n
; i++)

1706 
buÊ
[
i
] = (Ë
	`CXBimag
 (
tx
[
thªad
].
buf
.
o
, i),

1707 
bu‰
[
i
] = (Ë
	`CXBªÆ
 (
tx
[
thªad
].
buf
.
o
, i);

1708 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
Ë
n
;

1713 
uni
[
thªad
].
tick
++;

1714 
	}
}

	@sdrexport.c

34 
	~<comm⁄.h
>

36 
_uni
 
	guni
[3];

37 
_rx
 
	grx
[3][
MAXRX
];

38 
_tx
 
	gtx
[3];

39 
_t›
 
	gt›
[3];

	@sdrexport.h

34 #i‚de‡
_sdªxp‹t_h


35 
	#_sdªxp‹t_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<rögb.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

51 
	~<dâ•agc.h
>

53 
	~<fm_demod.h
>

54 
	~<noi£bœnkî.h
>

55 
	~<c‹ª˘IQ.h
>

56 
	~<•ìch¥oc.h
>

57 
	~<•Ÿt⁄e.h
>

58 
	~<hûbît.h
>

59 
	~<upd©e.h
>

60 
	~<loˇl.h
>

61 
	~<mëî.h
>

62 
	~<•e˘rum.h
>

63 
	~<divîsôy.h
>

64 
	~<com¥ess.h
>

65 
	~<w˝AGC.h
>

66 
	~<™f.h
>

67 
	~<™r.h
>

68 
	~<amd.h
>

72 #i‚de‡
MAXRX


73 
	#MAXRX
 (4)

	)

82 
DivîsôyC⁄åﬁ
 
	gdivîsôy
;

84 
	s_uni


86 
REAL
 
ßm∂î©e
;

87 
buÊí
;

91 
SDRMODE
 
sdr
;

92 
TRXMODE
 
åx
;

93 } 
mode
;

95 
METERBlock
 
mëî
;

96 
S≥cBlock
 
•ec
;

100 
BOOLEAN
 
Êag
;

101 
FILE
 *
Â
;

102 
•lôÊd
 
•…
;

103 } 
upd©e
;

107 *
∑th
;

108 
bôs
;

109 } 
wisdom
;

113 
BOOLEAN
 
a˘
[
MAXRX
];

114 
lis
, 
«c
, 
ƒx
;

115 } 
mu…úx
;

121 
BOOLEAN
 
Êag
;

122 
REAL
 
gaö
;

123 } 
rx
, 
tx
;

124 } 
mix
;

125 
˝dÀn
;

126 
tick
,
ﬁdtick
;

127 
WBIR_STATE
 
wbú_°©e
;

128 } 
uni
[3];

134 
	s_rx


138 
CXB
 
i
, 
o
, 
i_nŸch
, 
o_nŸch
;

139 } 
buf
;

140 
IQ
 
iqfix
;

144 
‰eq
, 
pha£
;

145 
OSC
 
gí
;

146 } 
osc
;

150 
decim
;

151 
BOOLEAN
 
Êag
;

152 
ResStF
 
gí1r
,
gí1i
,
gí2r
,
gí2i
;

153 } 
ªßm∂e
;

155 
ouçut_gaö
;

158 
Com∂exFIR
 
c€f
;

159 
FûtOvSv
 
ovsv
, 
ovsv_nŸch
;

160 
COMPLEX
 *
ßve
;

161 
low
;

162 
high
;

163 } 
fût
,
fût2
;

165 
DCBlockî
 
dcb
;

169 
REAL
 
thªsh
;

170 
NB
 
gí
;

171 
BOOLEAN
 
Êag
;

172 } 
nb
;

175 
REAL
 
thªsh
;

176 
NB
 
gí
;

177 
BOOLEAN
 
Êag
;

178 } 
nb_sdrom
;

188 
BLMS
 
gí
;

189 
BOOLEAN
 
Êag
;

190 } 
b™r
, 
b™f
;

194 
ANF
 
gí
;

195 
BOOLEAN
 
Êag
;

196 
posôi⁄
;

197 } 
™f
;

201 
ANR
 
gí
;

202 
BOOLEAN
 
Êag
;

203 
posôi⁄
;

204 } 
™r
;

208 
DTTSPAGC
 
gí
;

209 
BOOLEAN
 
Êag
;

210 } 
dâ•agc
;

214 
WCPAGC
 
gí
;

215 
BOOLEAN
 
Êag
;

216 } 
w˝agc
;

220 
AMD
 
gí
;

221 } 
am
;

225 
AMD
 
gí
;

226 } 
amd
;

230 
FMD
 
gí
;

231 } 
fm
;

235 
BOOLEAN
 
Êag
;

236 
SpŸT⁄eGí
 
gí
;

237 } 
•Ÿ
;

241 
REAL
 
thªsh
, 
©ãn
, 
powî
;

242 
BOOLEAN
 
Êag
, 
ru¬ög
, 
£t
;

243 
num
;

244 
pha£
;

245 } 
squñch
;

249 
BOOLEAN
 
Êag
;

250 
WSCom∑ndî
 
gí
;

251 } 
˝d
;

255 
EQ
 
gí
;

256 
BOOLEAN
 
Êag
;

257 } 
gøpheq
;

261 
IIR_2P2Z
 
gí
;

262 
BOOLEAN
 
Êag
;

263 } 
nŸch
[9];

265 
SDRMODE
 
mode
;

268 
BOOLEAN
 
Êag
;

269 } 
bö
;

270 
REAL
 
n‹m
;

271 
COMPLEX
 
azim
;

272 
tick
;

273 } 
rx
[3][
MAXRX
];

278 
	s_tx


282 
CXB
 
i
, 
ic
, 
o
, 
oc
, 
i_¥e
, 
o_¥e
;

283 } 
buf
;

284 
IQ
 
iqfix
;

288 
BOOLEAN
 
Êag
;

289 
DCBlockî
 
gí
;

290 } 
dcb
;

294 
‰eq
, 
pha£
;

295 
OSC
 
gí
;

296 } 
osc
;

299 
Com∂exFIR
 
c€f
;

300 
FûtOvSv
 
ovsv
, 
ovsv_¥e
;

301 
COMPLEX
 *
ßve
;

302 } 
fût
;

306 
REAL
 
ˇºõr_Àvñ
;

307 } 
am
;

311 
REAL
 
cvtmod2‰eq
;

312 
pha£
;

313 
REAL
 
¥ìmphasis_fûãr
;

314 
REAL
 
dìmphasis_out
;

315 
REAL
 
k_¥ìmphasis
;

316 
REAL
 
k_dìmphasis
;

317 
REAL
 
˛ù_thªshﬁd
;

318 
IIR_BPF_2P
 
öput_BPF
;

319 
IIR_LPF_2P
 
ouçut_LPF1
;

320 
IIR_LPF_2P
 
ouçut_LPF2
;

321 
IIR_LPF_2P
 
öput_BPF1
;

322 
IIR_LPF_2P
 
öput_BPF2
;

323 
IIR_LPF_2P
 
öput_BPF3
;

324 
IIR_LPF_2P
 
öput_BPF4
;

325 
IIR_LPF_2P
 
öput_LPF1
;

326 
IIR_LPF_2P
 
öput_LPF2
;

327 
IIR_HPF_2P
 
öput_HPF1
;

328 
IIR_HPF_2P
 
öput_HPF2
;

332 
‰eq_hz
;

333 
OSC
 
osc
;

334 
REAL
 
amp
;

335 
BOOLEAN
 
Êag
;

336 }
˘css
;

337 } 
fm
;

341 
REAL
 
thªsh
, 
©ãn
, 
powî
;

342 
BOOLEAN
 
Êag
, 
ru¬ög
, 
£t
;

343 
num
;

344 } 
squñch
;

355 
WCPAGC
 
gí
;

356 
BOOLEAN
 
Êag
;

357 } 
Àvñî
, 
Æc
;

361 
COMPRESSOR
 
gí
;

362 
BOOLEAN
 
Êag
;

363 } 
com¥ess‹
;

367 
EQ
 
gí
;

368 
BOOLEAN
 
Êag
;

369 } 
gøpheq
;

374 
S≥echProc
 
gí
;

375 
BOOLEAN
 
Êag
;

376 } 
•r
;

381 
BOOLEAN
 
Êag
;

382 
WSCom∑ndî
 
gí
;

383 } 
˝d
;

387 
BOOLEAN
 
Êag
;

388 
Hûsim
 
gí
;

389 } 
hlb
;

391 
SDRMODE
 
mode
;

393 
tick
;

394 
REAL
 
n‹m
;

395 } 
tx
[3];

399 
	e_runmode


401 
	mRUN_MUTE
, 
	mRUN_PASS
, 
	mRUN_PLAY
, 
	mRUN_SWCH


402 } 
	tRUNMODE
;

404 
	s_t›


407 
pid
;

408 
uid_t
 
uid
;

410 
timevÆ
 
°¨t_tv
;

412 
BOOLEAN
 
ru¬ög
, 
vîbo£
;

413 
RUNMODE
 
°©e
;

420 *
l
, *
r
;

421 } 
aux
, 
buf
;

424 
‰ames
, 
byãs
;

425 } 
size
;

426 } 
hﬁd
;

430 *
∑th
;

431 
HANDLE
 
fd
;

432 
HANDLE
 
Â
;

433 
buff
[4096];

434 } 
∑rm
;

440 *
∑th
;

441 
HANDLE
 
Â
, 
fd
;

442 } 
må
, 
•ec
;

443 } 
mós
;

447 
«me
[256];

453 
rögb_Êﬂt_t
 *
l
, *
r
;

454 } 
i
, 
o
;

455 } 
rög
;

461 
rögb_Êﬂt_t
 *
l
, *
r
;

462 } 
i
, 
o
;

463 } 
auxr
;

466 
size_t
 
ª£t_size
;

468 
size_t
 
size
;

472 
cb
;

475 
i
, 
o
;

476 } 
rb
;

477 
xr
;

478 } 
blow
;

479 } 
jack
;

487 
±hªad_t
 
id
;

488 } 
åx
, 
upd
, 
updrx
, 
m⁄
, 
pws
, 
må
, 
sc›e
;

489 } 
thrd
;

495 
£m_t
 
£m
;

496 } 
buf
, 
upd
, 
m⁄
, 
pws
, 
må
, 
sc›e
;

497 } 
sync
;

505 
w™t
, 
have
;

506 } 
bf˘
;

509 
TRXMODE
 
√xt
;

510 } 
åx
;

513 
RUNMODE
 
œ°
;

514 } 
run
;

515 
Áde
, 
èû
;

516 } 
swch
;

524 
SWCHSTATE
 
ty≥
;

525 
˙t
;

526 
REAL
 
vÆ
;

527 } 
cuº
;

529 
size
;

530 
REAL
 
ö¸
;

531 } 
ÁŒ
, 
ri£
, 
°dy
;

532 } 
ív
;

534 
TRXMODE
 
√xt
;

535 } 
åx
;

537 
RUNMODE
 
œ°
;

538 } 
run
;

541 
BOOLEAN
 
Êag
;

542 
cou¡
;

543 
cou¡_limô
;

544 
thªshﬁd
;

545 } 
ri£_thªsh
;

547 
BOOLEAN
 
Êag
;

549 } 
swch
;

552 
BOOLEAN
 
su•
;

553 
off£t
;

555 } 
t›
[3];

	@spectrum.c

35 
	~<•e˘rum.h
>

36 
	~<bufvec.h
>

37 
	~<f·w3.h
>

38 
	~<f·w3_fix.h
>

41 
	$¢≠_•e˘rum
 (
S≥cBlock
 * 
sb
, 
œbñ
)

43 
i
, 
j
;

46 
j
 = 
sb
->
fûl
;

50 i‡(!
sb
->
pﬁypha£
)

52 
i
 = 0; i < 
sb
->
size
; i++)

54 
	`CXBd©a
 (
sb
->
timebuf
, 
i
) =

55 
	`Cs˛
 (
	`CXBd©a
 (
sb
->
accum
, 
j
), sb->
wödow
[
i
]);

56 
j
 = ((j+1Ë& 
sb
->
mask
);

61 
k
;

62 
i
 = 0; i < 
sb
->
size
; i++)

64 
	`CXBªÆ
 (
sb
->
timebuf
, 
i
ËCXBªÆ (sb->
accum
, 
j
Ë* sb->
wödow
[i];

65 
	`CXBimag
 (
sb
->
timebuf
, 
i
ËCXBimag (sb->
accum
, 
j
Ë* sb->
wödow
[i];

66 
k
 = 1; k < 8; k++)

68 
accumidx
 = (
j
 + 
k
 * 
sb
->
size
Ë& sb->
mask
;

69 
wöidx
 = 
i
 + 
k
 * 
sb
->
size
;

70 
	`CXBªÆ
 (
sb
->
timebuf
, 
i
) +=

71 
	`CXBªÆ
 (
sb
->
accum
, 
accumidx
Ë* sb->
wödow
[
wöidx
];

72 
	`CXBimag
 (
sb
->
timebuf
, 
i
) +=

73 
	`CXBimag
 (
sb
->
accum
, 
accumidx
Ë* sb->
wödow
[
wöidx
];

75 
j
 = ((j+1Ë& 
sb
->
mask
);

79 
sb
->
œbñ
 =Üabel;

80 
	}
}

83 
	$¢≠_sc›e
 (
S≥cBlock
 * 
sb
, 
œbñ
)

85 
i
, 
j
;

88 
j
 = 
sb
->
fûl
;

91 
i
 = 0; i < 
sb
->
size
; i++)

93 
	`CXBd©a
 (
sb
->
timebuf
, 
i
ËCXBd©®(sb->
accum
, 
j
);

94 
j
 = ((j+1Ë& 
sb
->
mask
);

97 
sb
->
œbñ
 =Üabel;

98 
	}
}

101 
	$compuã_com∂ex_•e˘rum
(
S≥cBlock
 * 
sb
)

103 
i
, 
j
, 
hÆf
 = 
sb
->
size
 / 2;

107 
	`f·wf_execuã
 (
sb
->
∂™
);

109 
i
 = 0, 
j
 = 
hÆf
; i < half; i++, j++) {

110 
sb
->
couçut
[
i
] = 
	`CXBd©a
 (sb->
‰eqbuf
, 
j
);

111 
sb
->
couçut
[
j
] = 
	`CXBd©a
 (sb->
‰eqbuf
, 
i
);

113 
	}
}

117 
	$compuã_•e˘rum
 (
S≥cBlock
 * 
sb
)

119 
i
, 
j
, 
hÆf
 = 
sb
->
size
 / 2;

124 
	`f·wf_execuã
 (
sb
->
∂™
);

126 i‡(
sb
->
sˇÀ
 =
SPEC_MAG
)

128 
i
 = 0, 
j
 = 
hÆf
; i < half; i++, j++)

130 
sb
->
ouçut
[
i
] = (Ë
	`Cmag
 (
	`CXBd©a
 (sb->
‰eqbuf
, 
j
));

131 
sb
->
ouçut
[
j
] = (Ë
	`Cmag
 (
	`CXBd©a
 (sb->
‰eqbuf
, 
i
));

136 
i
 = 0, 
j
 = 
hÆf
; i < half; i++, j++)

138 
sb
->
ouçut
[
i
] =

140 
	`log10
 (
	`Csqrmag
 (
	`CXBd©a
 (
sb
->
‰eqbuf
, 
j
)) + 1e-60));

141 
sb
->
ouçut
[
j
] =

143 
	`log10
 (
	`Csqrmag
 (
	`CXBd©a
 (
sb
->
‰eqbuf
, 
i
)) + 1e-60));

146 
	}
}

149 
	$öô_•e˘rum
 (
S≥cBlock
 * 
sb
)

151 
COMPLEX
 *
p
;

152 
sb
->
fûl
 = 0;

154 
p
 = 
	`√wvec_COMPLEX_f·w
(
sb
->
size
*16,"spectrumáccum");

155 
sb
->
accum
 = 
	`√wCXB
 (sb->
size
 * 16, 
p
, "spectrumáccum");

156 
p
 = 
	`√wvec_COMPLEX_f·w
(
sb
->
size
, "spectrumÅimebuf");

157 
sb
->
timebuf
 = 
	`√wCXB
 (sb->
size
, 
p
, "spectrumÅimebuf");

158 
p
 = 
	`√wvec_COMPLEX_f·w
(
sb
->
size
, "spectrumÅimebuf");

159 
sb
->
‰eqbuf
 = 
	`√wCXB
 (sb->
size
, 
p
, "spectrum freqbuf");

160 
sb
->
wödow
 = 
	`√wvec_REAL
 (sb->
size
 * 16, "spectrum window");

161 
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
sb
->
size
, sb->
wödow
);

162 
sb
->
mask
 = sb->
size
 - 1;

163 
sb
->
pﬁypha£
 = 
FALSE
;

164 
sb
->
ouçut
 =

165 (*Ë
	`ß„Æloc
 (
sb
->
size
,  (), "spectrum output");

166 
sb
->
couçut
 = (
COMPLEX
 *)
	`ß„Æloc
 (sb->
size
,  (COMPLEX), "spectrum output");;

167 
sb
->
∂™
 =

168 
	`f·wf_∂™_d·_1d
 (
sb
->
size
, (
f·wf_com∂ex
 *Ë
	`CXBba£
 (sb->
timebuf
),

169 (
f·wf_com∂ex
 *Ë
	`CXBba£
 (
sb
->
‰eqbuf
),

170 
FFTW_FORWARD
, 
sb
->
∂™bôs
);

171 
	}
}

174 
	$ªöô_•e˘rum
 (
S≥cBlock
 * 
sb
)

176 
size_t
 
pﬁysize
 = 1;

177 
sb
->
fûl
 = 0;

178 i‡(
sb
->
pﬁypha£
)

179 
pﬁysize
 = 8;

180 
	`mem£t
 ((*Ë
	`CXBba£
 (
sb
->
accum
), 0,

181 
pﬁysize
 * 
sb
->
size
 *  (
REAL
));

182 
	`mem£t
 ((*Ë
sb
->
ouçut
, 0, sb->
size
 *  ());

183 
	`mem£t
 ((*Ë
sb
->
couçut
, 0, sb->
size
 * (
COMPLEX
));

184 
	}
}

187 
	$föish_•e˘rum
 (
S≥cBlock
 * 
sb
)

189 i‡(
sb
)

191 
	`dñvec_COMPLEX_f·w
(
sb
->
accum
->
d©a
);

192 
	`dñCXB
 (
sb
->
accum
);

193 
	`dñvec_COMPLEX_f·w
(
sb
->
timebuf
->
d©a
);

194 
	`dñCXB
 (
sb
->
timebuf
);

195 
	`dñvec_COMPLEX_f·w
(
sb
->
‰eqbuf
->
d©a
);

196 
	`dñCXB
 (
sb
->
‰eqbuf
);

197 
	`dñvec_REAL
 (
sb
->
wödow
);

198 
	`ß„‰ì
 ((*Ë
sb
->
ouçut
);

199 
	`ß„‰ì
 ((*Ë
sb
->
couçut
);

200 
	`f·wf_de°roy_∂™
 (
sb
->
∂™
);

202 
	}
}

	@spectrum.h

34 #i‚de‡
_•e˘rum_h


35 
	#_•e˘rum_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<rögb.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

51 
	~<dâ•agc.h
>

53 
	~<amd.h
>

54 
	~<fm_demod.h
>

55 
	~<noi£bœnkî.h
>

56 
	~<c‹ª˘IQ.h
>

57 
	~<•ìch¥oc.h
>

58 
	~<•Ÿt⁄e.h
>

59 
	~<upd©e.h
>

60 
	~<wödow.h
>

62 
	#SPEC_MAG
 (0)

	)

63 
	#SPEC_PWR
 (1)

	)

65 
	#SPEC_SEMI_RAW
 (0)

	)

66 
	#SPEC_PRE_FILT
 (1)

	)

67 
	#SPEC_POST_FILT
 (2)

	)

68 
	#SPEC_POST_AGC
 (3)

	)

69 
	#SPEC_POST_DET
 (4)

	)

70 
	#SPEC_PREMOD
 (4)

	)

72 
	s_•ec_block


74 
BOOLEAN
 
	mÊag
;

75 
	mœbñ
;

76 
CXB
 
	maccum
, 
	mtimebuf
, 
	m‰eqbuf
;

77 
	mfûl
, 
	mbuÊí
, 
	mrxk
, 
	msˇÀ
, 
	msize
, 
	mty≥
, 
	mmask
;

78 
Wödowty≥
 
	mwöty≥
;

79 
REAL
 *
	mwödow
;

80 *
	mouçut
, *
	mosc›e
;

81 
COMPLEX
 *
	mcouçut
;

82 
	m∂™bôs
;

83 
f·wf_∂™
 
	m∂™
;

84 
BOOLEAN
 
	mpﬁypha£
;

85 } 
	tS≥cBlock
;

87 
öô_•e˘rum
 (
S≥cBlock
 * 
sb
);

88 
ªöô_•e˘rum
 (
S≥cBlock
 * 
sb
);

89 
¢≠_•e˘rum
 (
S≥cBlock
 * 
sb
, 
œbñ
);

90 
¢≠_sc›e
 (
S≥cBlock
 * 
sb
, 
œbñ
);

91 
compuã_•e˘rum
 (
S≥cBlock
 * 
sb
);

92 
compuã_com∂ex_•e˘rum
(
S≥cBlock
 * 
sb
);

93 
föish_•e˘rum
 (
S≥cBlock
 * 
sb
);

	@speechproc.c

35 
	~<•ìch¥oc.h
>

37 
S≥echProc


38 
	$√wS≥echProc
 (
REAL
 
K
, REAL 
MaxCom¥essi⁄
, 
COMPLEX
 * 
•d©
, 
size
)

40 
S≥echProc
 
•
 = (S≥echProcË
	`ß„Æloc
 (1,  (
•ìch_¥oc
),

42 
•
->
CG
 = 
	`√wRLB
 (
size
 + 1, 
NULL
, "CG buffer in Speech Processor");

43 
•
->
K
 = K;

44 
•
->
MaxGaö
 = (
REAL
Ë
	`pow
 (10.0, 
MaxCom¥essi⁄
 * 0.05);

45 
•
->
Ác
 =

46 (
REAL
Ë((((0.0000401002 * 
MaxCom¥essi⁄
) -

47 0.0032093390Ë* 
MaxCom¥essi⁄
 +

48 0.0612862687Ë* 
MaxCom¥essi⁄
 + 0.9759745718);

49 
•
->
La°CG
 = 1.0;

50 
•
->
S≥echPro˚ss‹Buf„r
 = 
	`√wCXB
 (
size
, 
•d©
, "speechÖrocessor data");

51 
•
->
size
 = size;

52  
•
;

53 
	}
}

56 
	$dñS≥echProc
 (
S≥echProc
 
•
)

58 i‡(
•
)

60 
	`dñRLB
 (
•
->
CG
);

61 
	`dñCXB
 (
•
->
S≥echPro˚ss‹Buf„r
);

62 
	`ß„‰ì
 ((*Ë
•
);

64 
	}
}

67 
	$S≥echPro˚ss‹
 (
S≥echProc
 
•
)

69 
i
;

70 
REAL
 
r
 = 0.0, 
Mag
;

72 i‡(
•
->
MaxGaö
 == 1.0)

75 
i
 = 0; i < 
•
->
size
; i++)

76 
r
 = 
	`max
 (r, 
	`Cmag
 (
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
)));

78 
	`RLBd©a
 (
•
->
CG
, 0Ë•->
La°CG
;

79 
i
 = 1; i <
•
->
size
; i++)

81 
Mag
 = 
	`Cmag
 (
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
 - 1));

82 i‡(
Mag
 != 0.0)

84 
	`RLBd©a
(
•
->
CG
, 
i
ËRLBd©a(•->CG, i - 1Ë* (1 - sp->
K
Ë+ (•->K * 
r
 / 
Mag
);

85 i‡(
	`RLBd©a
 (
•
->
CG
, 
i
Ë> sp->
MaxGaö
)

86 
	`RLBd©a
 (
•
->
CG
, 
i
Ë•->
MaxGaö
;

89 
	`RLBd©a
 (
•
->
CG
, 
i
Ë•->
MaxGaö
;

91 
•
->
La°CG
 = 
	`RLBd©a
 (•->
CG
, sp->
size
);

94 
i
 = 0; i < 
•
->
size
; i++)

95 
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
) =

96 
	`Cs˛
 (
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
),

97 (
REAL
Ë(
	`RLBd©a
 (
•
->
CG
, 
i
) /

98 (
•
->
Ác
 * 
	`pow
 (•->
MaxGaö
, 0.25))));

99 
	}
}

	@speechproc.h

34 #i‚de‡
_•ìch¥oc_h


35 
	#_•ìch¥oc_h


	)

37 
	~<‰omsys.h
>

38 
	~<d©©y≥s.h
>

39 
	~<bufvec.h
>

40 
	~<cx›s.h
>

41 
	~<b™Æ.h
>

43 
	s_•ìch¥o˚ss‹


45 
	msize
;

46 
RLB
 
	mCG
;

47 
CXB
 
	mS≥echPro˚ss‹Buf„r
;

48 
REAL
 
	mLa°CG
, 
	mK
, 
	mMaxGaö
, 
	mÁc
;

49 } 
	t•ìch_¥oc
, *
	tS≥echProc
;

51 
S≥echProc
 
√wS≥echProc
 (
REAL
, REAL, 
COMPLEX
 *, );

52 
dñS≥echProc
 (
S≥echProc
);

53 
S≥echPro˚ss‹
 (
S≥echProc
);

	@splitfields.c

34 
	~<•lôfõlds.h
>

36 *
	g_whôe
 = " \t\n";

38 
SPLIT


39 
	$√wSPLIT
 ()

41  (
SPLIT
Ë
	`ß„Æloc
 (1,  (
•lôÊd
), "splitfield");

42 
	}
}

45 
	$dñSPLIT
 (
SPLIT
 
s
)

47 i‡(
s
)

48 
	`‰ì
 ((*Ë
s
);

49 
	}
}

52 
	$F
 (
SPLIT
 
s
, 
i
)

54  
s
->
f
[
i
];

55 
	}
}

58 
	$F±r
 (
SPLIT
 
s
, 
i
)

60  &(
s
->
f
[
i
]);

61 
	}
}

64 
	$NF
 (
SPLIT
 
s
)

66  
s
->
n
;

67 
	}
}

70 
	$•lô⁄to
 (
SPLIT
 
s
, *
°r
, *
dñim
, **
Êd
, 
fmx
)

72 
i
 = 0;

73 *
p
 = 
	`°πok
 (
°r
, 
dñim
);

74 
p
)

76 
Êd
[
i
] = 
p
;

77 i‡(++
i
 >
fmx
)

79 
p
 = 
	`°πok
 (0, 
dñim
);

81  
i
;

82 
	}
}

85 
	$•lô⁄
 (
SPLIT
 
s
, *
°r
, *
dñim
)

87  (
s
->
n
 = 
	`•lô⁄to
 (s, 
°r
, 
dñim
, s->
f
, 
MAXFLD
));

88 
	}
}

91 
	$•lô
 (
SPLIT
 
s
, *
°r
)

93 
	`•lô⁄
 (
s
, 
°r
, 
_whôe
);

94 
	}
}

	@splitfields.h

34 #i‚de‡
_•lôfõlds_h


35 
	#_•lôfõlds_h


	)

37 
	~<‰omsys.h
>

38 
	~<bufvec.h
>

39 
	~<b™Æ.h
>

41 
	#MAXFLD
 16384

	)

43 
	s_•lôÊd


45 *
	mf
[
MAXFLD
];

46 
	mn
;

47 } 
	t•lôÊd
, *
	tSPLIT
;

49 *
F
 (
SPLIT
, );

50 **
F±r
 (
SPLIT
, );

51 
NF
 (
SPLIT
);

53 
•lô⁄to
 (
SPLIT
, *, *, **, );

54 
•lô⁄
 (
SPLIT
, *, *);

55 
•lô
 (
SPLIT
, *);

	@spottone.c

35 
	~<•Ÿt⁄e.h
>

43 
BOOLEAN


44 
	$SpŸT⁄e
 (
SpŸT⁄eGí
 
°
)

46 
i
, 
n
 = 
°
->
size
;

48 
	`Com∂exOSC
 (
°
->
osc
.
gí
);

50 
i
 = 0; i < 
n
; i++)

55 i‡(
°
->
°age
 =
SpŸT⁄e_RISE
)

59 i‡(
°
->
ri£
.
have
++ < st->ri£.
w™t
)

61 
°
->
cuº
 +°->
ri£
.
ö¸
;

62 
°
->
mul
 = (
REAL
Ë(°->
s˛
 * 
	`sö
 (°->
cuº
 * 
M_PI
 / 2.0));

67 
°
->
cuº
 = 1.0;

68 
°
->
mul
 = st->
s˛
;

69 
°
->
°age
 = 
SpŸT⁄e_STDY
;

75 i‡(
°
->
°age
 =
SpŸT⁄e_FALL
)

79 i‡(
°
->
ÁŒ
.
have
++ < st->ÁŒ.
w™t
)

81 
°
->
cuº
 -°->
ÁŒ
.
ö¸
;

82 
°
->
mul
 = (
REAL
Ë(°->
s˛
 * 
	`sö
 (°->
cuº
 * 
M_PI
 / 2.0));

87 
°
->
cuº
 = 0.0;

88 
°
->
mul
 = 0.0;

89 
°
->
°age
 = 
SpŸT⁄e_HOLD
;

95 
	`CXBd©a
 (
°
->
buf
, 
i
Ë
	`Cs˛
 (CXBd©®(°->buf, i), st->
mul
);

101  
°
->
°age
 !
SpŸT⁄e_HOLD
;

102 
	}
}

108 
	$SpŸT⁄eOn
 (
SpŸT⁄eGí
 
°
)

113 
°
->
s˛
 = (
REAL
Ë
	`pow
 (10.0, st->
gaö
 / 20.0);

114 
°
->
cuº
 = st->
mul
 = 0.0;

118 
°
->
ri£
.
w™t
 = (Ë(0.5 + st->
§
 * (°->ri£.
dur
 / 1e3));

119 
°
->
ri£
.
have
 = 0;

120 i‡(
°
->
ri£
.
w™t
 <= 1)

121 
°
->
ri£
.
ö¸
 = 1.0;

123 
°
->
ri£
.
ö¸
 = (
REAL
Ë(1.0 / (°->ri£.
w™t
 - 1));

125 
°
->
ÁŒ
.
w™t
 = (Ë(0.5 + st->
§
 * (°->ÁŒ.
dur
 / 1e3));

126 
°
->
ÁŒ
.
have
 = 0;

127 i‡(
°
->
ÁŒ
.
w™t
 <= 1)

128 
°
->
ÁŒ
.
ö¸
 = 1.0;

130 
°
->
ÁŒ
.
ö¸
 = (
REAL
Ë(1.0 / (°->ÁŒ.
w™t
 - 1));

135 
	`OSC‰eq
 (
°
->
osc
.
gí
Ë2.0 * 
M_PI
 * st->osc.
‰eq
 / st->
§
;

136 
	`OSCpha£
 (
°
->
osc
.
gí
) = 0.0;

138 
°
->
°age
 = 
SpŸT⁄e_RISE
;

139 
	}
}

145 
	$SpŸT⁄eOff
 (
SpŸT⁄eGí
 
°
)

147 
°
->
°age
 = 
SpŸT⁄e_FALL
;

148 
	}
}

153 
	$£tSpŸT⁄eGíVÆs
 (
SpŸT⁄eGí
 
°
,

154 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
)

156 
°
->
gaö
 = gain;

157 
°
->
osc
.
‰eq
 = freq;

158 
°
->
ri£
.
dur
 =Ñise;

159 
°
->
ÁŒ
.
dur
 = fall;

160 
	}
}

162 
SpŸT⁄eGí


163 
	$√wSpŸT⁄eGí
 (
REAL
 
gaö
,

164 
REAL
 
‰eq
, REAL 
ri£
,

165 
REAL
 
ÁŒ
,

166 
size
, 
REAL
 
ßm∂î©e
)

169 
SpŸT⁄eGí
 
°
 = (SpŸT⁄eGíË
	`ß„Æloc
 (1,

170  (
SpŸT⁄eGíDesc
),

173 
	`£tSpŸT⁄eGíVÆs
 (
°
, 
gaö
, 
‰eq
, 
ri£
, 
ÁŒ
);

174 
°
->
size
 = size;

175 
°
->
§
 = 
ßm∂î©e
;

177 
°
->
osc
.
gí
 = 
	`√wOSC
 (°->
size
,

178 
Com∂exT⁄e
,

179 
°
->
osc
.
‰eq
, 0.0, st->
§
, "SpotTone osc");

182 
°
->
buf
 = 
	`√wCXB
 (°->
size
, 
	`OSCCba£
 (°->
osc
.
gí
), "SpotToneGen buf");

184  
°
;

185 
	}
}

188 
	$dñSpŸT⁄eGí
 (
SpŸT⁄eGí
 
°
)

190 i‡(
°
)

192 
	`dñCXB
 (
°
->
buf
);

193 
	`dñOSC
 (
°
->
osc
.
gí
);

194 
	`ß„‰ì
 ((*Ë
°
);

196 
	}
}

	@spottone.h

34 #i‚de‡
_•Ÿt⁄e_h


35 
	#_•Ÿt⁄e_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<cx›s.h
>

42 
	~<oscûœt‹.h
>

44 
	#SpŸT⁄e_IDLE
 (0)

	)

45 
	#SpŸT⁄e_WAIT
 (1)

	)

46 
	#SpŸT⁄e_RISE
 (2)

	)

47 
	#SpŸT⁄e_STDY
 (3)

	)

48 
	#SpŸT⁄e_FALL
 (4)

	)

49 
	#SpŸT⁄e_HOLD
 (5)

	)

51 
	s_•Ÿ_t⁄e_gí


53 
REAL
 
	mcuº
, 
	mgaö
, 
	mmul
, 
	ms˛
, 
	m§
;

56 
REAL
 
	m‰eq
;

57 
OSC
 
	mgí
;

58 } 
	mosc
;

61 
REAL
 
	mdur
, 
	mö¸
;

62 
	mw™t
, 
	mhave
;

63 } 
	mri£
, 
	mÁŒ
;

64 
	msize
, 
	m°age
;

65 
CXB
 
	mbuf
;

66 } 
	tSpŸT⁄eGíDesc
, *
	tSpŸT⁄eGí
;

68 
SpŸT⁄eGí
 
√wSpŸT⁄eGí
 (
REAL
 
gaö
,

69 
REAL
 
‰eq
,

70 
REAL
 
ri£
,

71 
REAL
 
ÁŒ
,

72 
size
,

73 
REAL
 
ßm∂î©e
);

74 
dñSpŸT⁄eGí
 (
SpŸT⁄eGí
 
gí
);

75 
£tSpŸT⁄eGíVÆs
 (
SpŸT⁄eGí
 
gí
,

76 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
);

77 
SpŸT⁄eOn
 (
SpŸT⁄eGí
 
gí
);

78 
SpŸT⁄eOff
 (
SpŸT⁄eGí
 
gí
);

79 
BOOLEAN
 
SpŸT⁄e
 (
SpŸT⁄eGí
 
gí
);

	@update.c

36 
	~<comm⁄.h
>

40 
	gthªadno
=2;

41 
	gthªad_com
;

43 
	#RL
 (
uni
[
thªad
].
mu…úx
.
lis
)

	)

44 
	#asöh
(
vÆue
Ë(
R™EAL
)
	`log
(vÆuê+ 
	`sqπ
(vÆuê* vÆuê+ 1))

	)

48 
PRIVATE
 
REAL
 
INLINE


49 
	$dB2lö
 (
REAL
 
dB
)

51  (
REAL
Ë
	`pow
 (10.0, (REALË
dB
 / 20.0);

52 
	}
}

54 
PRIVATE
 
REAL
 
INLINE


55 
	$gmón
 (
REAL
 
x
, REAL 
y
)

57  (
REAL
)
	`sqπ
(
x
*
y
);

58 
	}
}

60 
DâSP_EXP
 

61 
	$Sëup_SDR
 (*
≠p_d©a_∑th
)

63 
	`£tup
 (*);

64 
	`£tup
 (
≠p_d©a_∑th
);

65 
	}
}

67 
DâSP_EXP
 

68 
	$De°roy_SDR
 ()

70 
	`˛o£up
 ();

71 
	`˛o£up
 ();

72 
	}
}

75 
DâSP_EXP
 

76 
	$SëThªadNo
(
£tô
)

78 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

79 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

80 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

81 i‡((
£tô
 > 0Ë&& (£tô<4)Ë
thªadno
 = setit;

82 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

83 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

84 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

85 
	}
}

87 
DâSP_EXP
 

88 
	$SëThªadCom
(
thªad
)

90 i‡(
thªad
 < 3)

92 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

93 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

94 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

95 
thªad_com
 = 
thªad
;

96 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

97 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

98 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

100 
	}
}

124 
DâSP_EXP
 

125 
	$SëSwchFœg
(
thªad
, 
vÆ
)

129 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

130 
t›
[
thªad
].
swch
.
Êag
 = 
vÆ
;

131 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

132 
	}
}

134 
DâSP_EXP
 

135 
	$SëSwchRi£Thªsh
(
thªad
, 
REAL
 
vÆ
)

139 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

140 
t›
[
thªad
].
swch
.
ri£_thªsh
.
thªshﬁd
 = 
vÆ
;

141 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

142 
	}
}

144 
DâSP_EXP
 

145 
	$SëThªadPro˚ssögMode
(
thªad
, 
RUNMODE
 
runmode
)

147 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

150 if(
t›
[
thªad
].
swch
.
Êag
 &&Å›[thªad].
°©e
 =
RUN_MUTE
 && 
runmode
 =
RUN_PLAY
)

152 
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 = 
SWCH_RISE
;

153 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

154 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

155 
t›
[
thªad
].
swch
.
ri£_thªsh
.
Êag
 = 
FALSE
;

156 
t›
[
thªad
].
swch
.
ri£_thªsh
.
cou¡
 = 0;

157 
t›
[
thªad
].
swch
.
ri£_thªsh
.
cou¡_limô
 = ()(
uni
[thªad].
ßm∂î©e
 * 0.050);

159 
t›
[
thªad
].
swch
.
run
.
œ°
 = 
RUN_PLAY
;

160 
t›
[
thªad
].
°©e
 = 
RUN_SWCH
;

164 
t›
[
thªad
].
°©e
 = 
runmode
;

178 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

180 
	}
}

182 
DâSP_EXP
 

183 
	$SëMode
 (
thªad
, 
subrx
, 
SDRMODE
 
m
)

185 
πn
=0;

186 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

187 
tx
[
thªad
].
mode
 = 
m
;

188 i‡(
tx
[
thªad
].
mode
 =
LSB
Ëtx[thªad].
hlb
.
gí
->
övît
 = 
TRUE
;

189 
tx
[
thªad
].
hlb
.
gí
->
övît
 = 
FALSE
;

190 
rx
[
thªad
][
subrx
].
mode
 = 
m
;

191 i‡(
m
 =
SAM
Ë
rx
[
thªad
][
subrx
].
amd
.
gí
->
mode
 = 1;

192 i‡(
m
 =
AM
Ë
rx
[
thªad
][
subrx
].
amd
.
gí
->
mode
 = 0;

193 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

194  
πn
;

195 
	}
}

197 
DâSP_EXP
 

198 
	$AudioRe£t
 ()

200 
BOOLEAN
 
ª£t_em
;

202 
ª£t_em
 = 
TRUE
;

203 
	}
}

205 
DâSP_EXP
 

206 
	$SëRXM™uÆNŸchE«bÀ
(
thªad
, 
subrx
, 
ödex
, 
BOOLEAN
 
£tô
)

208 
	`Ârötf
(
°dîr
, "DâSP::SëRXM™uÆNŸchE«bÀ(%u, %u, %u, %u)\n", 
thªad
, 
subrx
, 
ödex
, 
£tô
);

209 
	`fÊush
(
°dîr
);

211 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

212 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
Êag
 = 
£tô
;

213 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

214 
	}
}

216 
DâSP_EXP
 

217 
	$SëRXM™uÆNŸchBW
(
thªad
, 
subrx
, 
ödex
, 
BW
)

220 
	`Ârötf
(
°dîr
, "DâSP::SëRXM™uÆNŸchBW(%u, %u, %u, %lf)\n", 
thªad
, 
subrx
, 
ödex
, 
BW
);

221 
	`fÊush
(
°dîr
);

230 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

239 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
BW
 = (
REAL
)BW;

241 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

243 
	}
}

244 
DâSP_EXP
 

245 
	$SëRXM™uÆNŸchFªq
(
thªad
, 
subrx
, 
ödex
, 
F0
)

247 
REAL
 
w0
,
sw
,
cw
,
Æpha
;

248 
	`Ârötf
(
°dîr
, "DâSP::SëRXM™uÆNŸchFªq(%u, %u, %u, %lf)\n", 
thªad
, 
subrx
, 
ödex
, 
F0
);

249 
	`fÊush
(
°dîr
);

251 
w0
 = (
REAL
)(2*
M_PI
*
F0
/
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
Fs
);

252 
sw
 = (
REAL
)
	`sö
(
w0
);

253 
cw
 = (
REAL
)
	`cos
(
w0
);

255 
Æpha
 = (
REAL
)(
sw
/(2*
F0
/
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
BW
));

257 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

259 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
B
[0] = 1/(1+
Æpha
);

260 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
B
[1] = -2*
cw
/(1+
Æpha
);

261 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
B
[2] = 1/(1+
Æpha
);

262 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
A
[0] = 1;

263 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
A
[1] = -2*
cw
/(1+
Æpha
);

264 
rx
[
thªad
][
subrx
].
nŸch
[
ödex
].
gí
->
A
[2] = (1 - 
Æpha
)/(1+alpha);

266 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

267 
	}
}

269 
DâSP_EXP
 

270 
	$SëRXDCBlock
(
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

273 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

274 
rx
[
thªad
][
subrx
].
dcb
->
Êag
 = 
£tô
;

275 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

276 
	}
}

278 
DâSP_EXP
 

279 
	$SëRXDCBlockGaö
(
thªad
, 
subrx
, 
REAL
 
gaö
)

281 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

282 
rx
[
thªad
][
subrx
].
dcb
->
gaö
 = gain;

283 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

284 
	}
}

286 
DâSP_EXP
 

287 
	$SëTXDCBlock
 (
thªad
, 
BOOLEAN
 
£tô
)

289 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

290 
tx
[
thªad
].
dcb
.
Êag
 = 
£tô
;

291 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

292 
	}
}

294 
DâSP_EXP
 

295 
	$SëTXFMDevüti⁄
(
thªad
, 
devüti⁄
)

297 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

298 
tx
[
thªad
].
fm
.
cvtmod2‰eq
 = (
REAL
Ë(
devüti⁄
 * 
TWOPI
 / 
uni
[thªad].
ßm∂î©e
);

299 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

301 
	}
}

303 
DâSP_EXP
 

304 
	$SëRXFMDevüti⁄
(
thªad
, 
k
, 
devüti⁄
)

306 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

307 
rx
[
thªad
][
k
].
fm
.
gí
->
devüti⁄
 = (
REAL
)deviation;

308 
rx
[
thªad
][
k
].
fm
.
gí
->
cvt
 = (
REAL
)(
uni
[thªad].
ßm∂î©e
 / (
devüti⁄
 * 
TWOPI
));

309 
	`Ârötf
(
°dîr
, "dâ• SëRXFMDevüti⁄: %f\n", 
devüti⁄
);

310 
	`fÊush
(
°dîr
);

311 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

312 
	}
}

314 
DâSP_EXP
 

315 
	$SëCTCSSFªq
(
thªad
, 
‰eq_hz
)

317 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

319 
	`OSC‰eq
(
tx
[
thªad
].
fm
.
˘css
.
osc
Ë
TWOPI
 * (
REAL
)
‰eq_hz
 / 
uni
[thªad].
ßm∂î©e
;

320 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

322 
	}
}

324 
DâSP_EXP
 

325 
	$SëCTCSSFœg
(
thªad
, 
BOOLEAN
 
Êag
)

327 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

329 
tx
[
thªad
].
fm
.
˘css
.
Êag
 = flag;

332 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

334 
	}
}

336 
DâSP_EXP
 

337 
	$SëFMSquñchThªshﬁd
(
thªad
, 
k
, 
REAL
 
thªshﬁd
)

339 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

340 
rx
[
thªad
][
k
].
fm
.
gí
->
squñch_thªshﬁd_wók
 = 
thªshﬁd
;

341 
rx
[
thªad
][
k
].
fm
.
gí
->
squñch_thªshﬁd_unmuã
 = 
thªshﬁd
*0.9f;

342 
rx
[
thªad
][
k
].
fm
.
gí
->
squñch_thªshﬁd_°r⁄g
 = 
thªshﬁd
*0.5f;

345 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

346 
	}
}

349 
DâSP_EXP
 

350 
	$SëTXFûãr
 (
thªad
, 
low_‰equícy
, 
high_‰equícy
)

352 
nc€f
 = 
uni
[
thªad
].
buÊí
 + 1;

353 
i
, 
f·Àn
 = 2 * 
uni
[
thªad
].
buÊí
, 
πn
=0;

354 
f·wf_∂™
 
±mp
, 
±mp_¥e
;

355 
COMPLEX
 *
zcvec
;

357 i‡(
	`Ábs
 (
low_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

358 
πn
 = -1;

359 i‡(
	`Ábs
 (
high_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

360 
πn
 = -2;

361 i‡((
low_‰equícy
 + 10Ë>
high_‰equícy
)

362 
πn
 = -3;

364 i‡(
πn
 == 0)

366 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

367 
	`dñFIR_COMPLEX
 (
tx
[
thªad
].
fût
.
c€f
);

369 
tx
[
thªad
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 ((
REAL
)
low_‰equícy
,

370 (
REAL
)
high_‰equícy
,

371 
uni
[
thªad
].
ßm∂î©e
, 
nc€f
);

373 
zcvec
 = 
	`√wvec_COMPLEX
 (
f·Àn
, "filter z vec in setFilter");

374 
±mp
 = 
	`f·wf_∂™_d·_1d
 (
f·Àn
,

375 (
f·wf_com∂ex
 *Ë
zcvec
,

376 (
f·wf_com∂ex
 *Ë
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,

377 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

378 
±mp_¥e
 = 
	`f·wf_∂™_d·_1d
 (
f·Àn
,

379 (
f·wf_com∂ex
 *Ë
zcvec
,

380 (
f·wf_com∂ex
 *Ë
tx
[
thªad
].
fût
.
ovsv_¥e
->
zfvec
,

381 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

382 #ifde‡
LHS


383 
i
 = 0; i < 
nc€f
; i++)

384 
zcvec
[
i
] = 
tx
[
thªad
].
fût
.
c€f
->coef[i];

386 
i
 = 0; i < 
nc€f
; i++)

387 
zcvec
[
f·Àn
 - 
nc€f
 + 
i
] = 
tx
[
thªad
].
fût
.
c€f
->coef[i];

389 
	`f·wf_execuã
 (
±mp
);

390 
	`f·wf_execuã
 (
±mp_¥e
);

391 
	`f·wf_de°roy_∂™
 (
±mp
);

392 
	`f·wf_de°roy_∂™
 (
±mp_¥e
);

393 
	`dñvec_COMPLEX
 (
zcvec
);

394 
	`n‹mÆize_vec_COMPLEX
 (
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,Åx[thªad].fût.ovsv->
f·Àn
,tx[thªad].fût.ovsv->
sˇÀ
);

395 
	`n‹mÆize_vec_COMPLEX
 (
tx
[
thªad
].
fût
.
ovsv_¥e
->
zfvec
,Åx[thªad].fût.ovsv_¥e->
f·Àn
,tx[thªad].fût.ovsv_¥e->
sˇÀ
);

396 
	`mem˝y
 ((*Ë
tx
[
thªad
].
fût
.
ßve
, (*Ëtx[thªad].fût.
ovsv
->
zfvec
,

397 
tx
[
thªad
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

399 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

401  
πn
;

402 
	}
}

404 
DâSP_EXP
 

405 
	$SëRXFûãr
 (
thªad
, 
subrx
, 
low_‰equícy
, 
high_‰equícy
)

407 
nc€f
 = 
uni
[
thªad
].
buÊí
 + 1;

408 
i
, 
f·Àn
 = 2 * 
uni
[
thªad
].
buÊí
,
πn
=0;

409 
f·wf_∂™
 
±mp
, 
±mp_nŸch
;

410 
COMPLEX
 *
zcvec
;

415 
rx
[
thªad
][
subrx
].
fût
.
low
 = 
low_‰equícy
;

416 
rx
[
thªad
][
subrx
].
fût
.
high
 = 
high_‰equícy
;

418 i‡(
	`Ábs
 (
low_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

419 
πn
 = -1;

420 i‡(
	`Ábs
 (
high_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

421 
πn
 = -2;

422 i‡((
low_‰equícy
 + 10Ë>
high_‰equícy
)

423 
πn
 = -3;

425 i‡(
πn
 == 0)

427 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

428 
	`dñFIR_COMPLEX
 (
rx
[
thªad
][
subrx
].
fût
.
c€f
);

430 
rx
[
thªad
][
subrx
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 ((
REAL
)
low_‰equícy
,

431 (
REAL
)
high_‰equícy
,

432 
uni
[
thªad
].
ßm∂î©e
, 
nc€f
);

434 
zcvec
 = 
	`√wvec_COMPLEX
 (
f·Àn
, "filter z vec in setFilter");

435 
±mp
 = 
	`f·wf_∂™_d·_1d
 (
f·Àn
,

436 (
f·wf_com∂ex
 *Ë
zcvec
,

437 (
f·wf_com∂ex
 *Ë
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
zfvec
,

438 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

439 
±mp_nŸch
 = 
	`f·wf_∂™_d·_1d
 (
f·Àn
,

440 (
f·wf_com∂ex
 *Ë
zcvec
,

441 (
f·wf_com∂ex
 *Ë
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
->
zfvec
,

442 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

443 #ifde‡
LHS


444 
i
 = 0; i < 
nc€f
; i++)

445 
zcvec
[
i
] = 
rx
[
thªad
][
subrx
].
fût
.
c€f
->coef[i];

447 
i
 = 0; i < 
nc€f
; i++)

448 
zcvec
[
f·Àn
 - 
nc€f
 + 
i
] = 
rx
[
thªad
][
subrx
].
fût
.
c€f
->coef[i];

450 
	`f·wf_execuã
 (
±mp
);

451 
	`f·wf_execuã
 (
±mp_nŸch
);

452 
	`f·wf_de°roy_∂™
 (
±mp
);

453 
	`f·wf_de°roy_∂™
 (
±mp_nŸch
);

454 
	`dñvec_COMPLEX
 (
zcvec
);

455 
	`n‹mÆize_vec_COMPLEX
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
zfvec
,Ñx[thªad][subrx].fût.ovsv->
f·Àn
,

456 
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
sˇÀ
);

457 
	`n‹mÆize_vec_COMPLEX
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
->
zfvec
,Ñx[thªad][subrx].fût.ovsv_nŸch->
f·Àn
,

458 
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
->
sˇÀ
);

459 
	`mem˝y
 ((*Ë
rx
[
thªad
][
subrx
].
fût
.
ßve
, (*Ërx[thªad][subrx].fût.
ovsv
->
zfvec
,

460 
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

462 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

464  
πn
;

465 
	}
}

467 
DâSP_EXP
 

468 
	$Rñó£_Upd©e
 ()

470 
	`£m_po°
 (&
t›
[0].
sync
.
upd
.
£m
);

471 
	`£m_po°
 (&
t›
[1].
sync
.
upd
.
£m
);

472 
	`£m_po°
 (&
t›
[2].
sync
.
upd
.
£m
);

473 
	}
}

475 
DâSP_EXP
 

476 
	$SëRXOuçutGaö
(
thªad
, 
subrx
, 
g
)

478 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

479 
rx
[
thªad
][
subrx
].
ouçut_gaö
 = (
REAL
)
g
;

480 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

481 
	}
}

483 
DâSP_EXP
 

484 
	$SëOscPha£
(
pha£
)

486 
i
,
j
;

487 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

488 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

489 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

490 
i
=0;i<3;i++) {

491 
j
=0;j<
uni
[
i
].
mu…úx
.
ƒx
;j++Ë
rx
[i][j].
osc
.
pha£
 =Öhase;

492 
tx
[
i
].
osc
.
pha£
 =Öhase;

494 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

495 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

496 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

497 
	}
}

499 
DâSP_EXP
 

500 
	$SëRXOsc
 (
thªad
, 
subrx
, 
√w‰eq
)

502 i‡(
	`Ábs
 (
√w‰eq
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

505 
√w‰eq
 *2.0 * 
M_PI
 / 
uni
[
thªad
].
ßm∂î©e
;

506 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

507 
rx
[
thªad
][
subrx
].
osc
.
gí
->
Fªquícy
 = (
REAL
)
√w‰eq
;

509 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

511 
	}
}

513 
DâSP_EXP
 

514 
	$SëTXOsc
 (
thªad
, 
√w‰eq
)

516 i‡(
	`Ábs
 (
√w‰eq
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

519 
√w‰eq
 *2.0 * 
M_PI
 / 
uni
[
thªad
].
ßm∂î©e
;

520 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

521 
tx
[
thªad
].
osc
.
gí
->
Fªquícy
 = (
REAL
)
√w‰eq
;

523 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

525 
	}
}

527 
DâSP_EXP
 

528 
	$SëSam∂eR©e
 (
√wSam∂eR©e
)

530 
	`ª£t_f‹_ßm∂î©e
 (
REAL
);

531 
πn
 = -1;

533 
thªad
;

534 
REAL
 
ßm∂î©e
 = (REAL)
√wSam∂eR©e
;

537 
thªad
 = 0;thread < 3;Åhread++)

539 
t›
[
thªad
].
su•
 = 
TRUE
;

540 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

542 i‡(
ßm∂î©e
 !
uni
[0].samplerate)

544 i‡(
	`ª£t_f‹_ßm∂î©e
 (
ßm∂î©e
) != -1)

545 
πn
 = 0;

547 
thªad
 = 0;thread < 3;Åhread++)

548 
t›
[
thªad
].
su•
 = 
FALSE
;

549 
	`£m_po°
 (&
t›
[2].
sync
.
upd
.
£m
);

550 
	`£m_po°
 (&
t›
[1].
sync
.
upd
.
£m
);

551 
	`£m_po°
 (&
t›
[0].
sync
.
upd
.
£m
);

552  
πn
;

553 
	}
}

578 
DâSP_EXP
 

579 
	$SëTXCom∑ndSt
 (
thªad
, 
BOOLEAN
 
£tô
)

581 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

582 
tx
[
thªad
].
˝d
.
Êag
 = 
£tô
;

583 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

584 
	}
}

587 
DâSP_EXP
 

588 
	$SëTXCom¥ess‹St
 (
thªad
, 
BOOLEAN
 
£tô
)

590 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

591 
tx
[
thªad
].
com¥ess‹
.
Êag
 = 
£tô
;

592 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

593 
	}
}

595 
DâSP_EXP
 

596 
	$SëTXCom¥ess‹
 (
thªad
, 
£tô
)

598 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

599 
tx
[
thªad
].
com¥ess‹
.
gí
->
gaö
 = ()
	`pow
 (10.0, 
£tô
 / 20.0);

600 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

601 
	}
}

604 
DâSP_EXP
 

605 
	$SëTXCom∑nd
 (
thªad
, 
£tô
)

607 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

608 
	`WSCRe£t
 (
tx
[
thªad
].
˝d
.
gí
, -(
REAL
)
£tô
);

609 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

610 
	}
}

612 
DâSP_EXP
 

613 
	$SëTXSquñchSt
 (
thªad
, 
BOOLEAN
 
£tô
)

615 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

616 
tx
[
thªad
].
squñch
.
Êag
 = 
£tô
;

617 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

618 
	}
}

620 
DâSP_EXP
 

621 
	$SëTXSquñchVÆ
 (
thªad
, 
£tô
)

623 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

624 
tx
[
thªad
].
squñch
.
thªsh
 = 
£tô
;

625 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

626 
	}
}

628 
DâSP_EXP
 

629 
	$SëTXSquñchAâ
 (
thªad
, 
£tô
)

631 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

632 
tx
[
thªad
].
squñch
.
©ãn
 = 
£tô
;

633 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

634 
	}
}

661 
DâSP_EXP
 

662 
	$SëANF
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

664 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

665 
rx
[
thªad
][
subrx
].
™f
.
Êag
 = 
£tô
;

666 
	`mem£t
(
rx
[
thªad
][
subrx
].
™f
.
gí
->
w
, 0, (Ë* 
DLINE_SIZE
);

667 
	`mem£t
(
rx
[
thªad
][
subrx
].
™f
.
gí
->
d
, 0, (Ë* 
DLINE_SIZE
);

668 
	`ª£t_OvSv
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
);

669 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

670 
	}
}

673 
DâSP_EXP
 

674 
	$SëANFvÆs
 (
thªad
, 
subrx
, 
èps
, 
dñay
, 
gaö
, 
Àakage
)

676 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

677 
rx
[
thªad
][
subrx
].
™f
.
gí
->
n_èps
 = 
èps
;

678 
rx
[
thªad
][
subrx
].
™f
.
gí
->
dñay
 = delay;

679 
rx
[
thªad
][
subrx
].
™f
.
gí
->
two_mu
 = 
gaö
;

680 
rx
[
thªad
][
subrx
].
™f
.
gí
->
gamma
 = 
Àakage
;

681 
	`mem£t
 (
rx
[
thªad
][
subrx
].
™f
.
gí
->
w
, 0, (Ë* 
DLINE_SIZE
);

682 
	`mem£t
(
rx
[
thªad
][
subrx
].
™f
.
gí
->
d
, 0, (Ë* 
DLINE_SIZE
);

683 
	`ª£t_OvSv
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
);

684 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

685 
	}
}

687 
DâSP_EXP
 

688 
	$SëANFposôi⁄
 (
thªad
, 
subrx
, 
posôi⁄
)

690 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

691 
rx
[
thªad
][
subrx
].
™f
.
posôi⁄
 =Öosition;

692 
	`mem£t
 (
rx
[
thªad
][
subrx
].
™f
.
gí
->
w
, 0, (Ë* 
DLINE_SIZE
);

693 
	`mem£t
(
rx
[
thªad
][
subrx
].
™f
.
gí
->
d
, 0, (Ë* 
DLINE_SIZE
);

694 
	`ª£t_OvSv
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
);

695 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

696 
	}
}

698 
DâSP_EXP
 

699 
	$SëANR
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

701 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

702 
rx
[
thªad
][
subrx
].
™r
.
Êag
 = 
£tô
;

703 
	`mem£t
(
rx
[
thªad
][
subrx
].
™r
.
gí
->
w
, 0, (Ë* 
DLINE_SIZE
);

704 
	`mem£t
(
rx
[
thªad
][
subrx
].
™r
.
gí
->
d
, 0, (Ë* 
DLINE_SIZE
);

705 
	`ª£t_OvSv
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
);

706 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

707 
	}
}

709 
DâSP_EXP
 

710 
	$SëANRvÆs
 (
thªad
, 
subrx
, 
èps
, 
dñay
, 
gaö
, 
Àakage
)

712 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

713 
rx
[
thªad
][
subrx
].
™r
.
gí
->
n_èps
 = 
èps
;

714 
rx
[
thªad
][
subrx
].
™r
.
gí
->
dñay
 = delay;

715 
rx
[
thªad
][
subrx
].
™r
.
gí
->
two_mu
 = 
gaö
;

716 
rx
[
thªad
][
subrx
].
™r
.
gí
->
gamma
 = 
Àakage
;

717 
	`mem£t
 (
rx
[
thªad
][
subrx
].
™r
.
gí
->
w
, 0, (Ë* 
DLINE_SIZE
);

718 
	`mem£t
(
rx
[
thªad
][
subrx
].
™r
.
gí
->
d
, 0, (Ë* 
DLINE_SIZE
);

719 
	`ª£t_OvSv
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
);

720 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

721 
	}
}

723 
DâSP_EXP
 

724 
	$SëANRposôi⁄
 (
thªad
, 
subrx
, 
posôi⁄
)

726 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

727 
rx
[
thªad
][
subrx
].
™r
.
posôi⁄
 =Öosition;

728 
	`mem£t
 (
rx
[
thªad
][
subrx
].
™r
.
gí
->
w
, 0, (Ë* 
DLINE_SIZE
);

729 
	`mem£t
(
rx
[
thªad
][
subrx
].
™r
.
gí
->
d
, 0, (Ë* 
DLINE_SIZE
);

730 
	`ª£t_OvSv
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv_nŸch
);

731 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

732 
	}
}

734 
DâSP_EXP
 

735 
	$SëNB
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

737 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

739 
rx
[
thªad
][
subrx
].
nb
.
Êag
 = 
£tô
;

741 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

742 
	}
}

744 
DâSP_EXP
 

745 
	$SëNBvÆs
 (
thªad
, 
subrx
, 
thªshﬁd
)

747 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

749 
rx
[
thªad
][
subrx
].
nb
.
gí
->
thªshﬁd
 = (
REAL
)threshold;

751 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

752 
	}
}

754 
DâSP_EXP
 

755 
	$SëSDROM
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

757 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

759 
rx
[
thªad
][
subrx
].
nb_sdrom
.
Êag
 = 
£tô
;

761 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

762 
	}
}

764 
DâSP_EXP
 

765 
	$SëSDROMvÆs
 (
thªad
, 
subrx
, 
thªshﬁd
)

767 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

769 
rx
[
thªad
][
subrx
].
nb_sdrom
.
gí
->
thªshﬁd
 = (
REAL
)threshold;

771 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

772 
	}
}

774 
DâSP_EXP
 

775 
	$SëBIN
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

777 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

779 
rx
[
thªad
][
subrx
].
bö
.
Êag
 = 
£tô
;

781 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

782 
	}
}

784 
DâSP_EXP
 

785 
	$SëRXAGC
 (
thªad
, 
subrx
, 
AGCMODE
 
£tô
)

787 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

798 
£tô
)

800 
agcOFF
:

803 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mode
 = 
agcOFF
;

804 
rx
[
thªad
][
subrx
].
w˝agc
.
Êag
 = 
TRUE
;

805 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

808 
agcLONG
:

818 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mode
 = 
agcLONG
;

819 
rx
[
thªad
][
subrx
].
w˝agc
.
Êag
 = 
TRUE
;

820 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™gtime
 = 2.000;

821 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
èu_deˇy
 = 2.000;

822 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

825 
agcSLOW
:

836 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mode
 = 
agcSLOW
;

837 
rx
[
thªad
][
subrx
].
w˝agc
.
Êag
 = 
TRUE
;

838 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™gtime
 = 1.000;

839 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
èu_deˇy
 = 0.500;

840 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

843 
agcMED
:

854 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mode
 = 
agcMED
;

855 
rx
[
thªad
][
subrx
].
w˝agc
.
Êag
 = 
TRUE
;

856 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™g_thªsh
 = 1.0;

857 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™gtime
 = 0.000;

858 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
èu_deˇy
 = 0.250;

859 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

862 
agcFAST
:

873 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mode
 = 
agcSLOW
;

874 
rx
[
thªad
][
subrx
].
w˝agc
.
Êag
 = 
TRUE
;

875 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™g_thªsh
 = 1.0;

876 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™gtime
 = 0.000;

877 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
èu_deˇy
 = 0.050;

878 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

883 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mode
 = 5;

884 
rx
[
thªad
][
subrx
].
w˝agc
.
Êag
 = 
TRUE
;

888 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

889 
	}
}

891 
DâSP_EXP
 

892 
	$SëRXAGCAâack
 (
thªad
, 
subrx
, 
©èck
)

894 
REAL
 
tmp
 = (REAL)
©èck
;

895 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

906 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
èu_©èck
 = ()
©èck
 / 1000.0;

907 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

909 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

910 
	}
}

912 
DâSP_EXP
 

913 
	$SëRXAGCDeˇy
 (
thªad
, 
subrx
, 
deˇy
)

916 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

923 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
èu_deˇy
 = ()
deˇy
 / 1000.0;

924 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

926 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

927 
	}
}

929 
DâSP_EXP
 

930 
	$SëRXAGCH™g
 (
thªad
, 
subrx
, 
h™g
)

932 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

938 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™gtime
 = ()
h™g
 / 1000.0;

939 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

941 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

942 
	}
}

944 
DâSP_EXP
 

945 
	$SëRXAGCSl›e
 (
thªad
, 
subrx
, 
¶›e
)

947 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

952 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
v¨_gaö
 = 
	`pow
 (10.0, ()
¶›e
 / 20.0 / 10.0);

953 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

955 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

956 
	}
}

959 
DâSP_EXP
 

960 
	$GëRXAGCH™gLevñ
(
thªad
, 
subrx
, *
h™gLevñ
)

963 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

964 *
h™gLevñ
 = 20.0 * 
	`log10
–
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™g_Àvñ
 / 0.637 );

965 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

966 
	}
}

968 
DâSP_EXP
 

969 
	$SëRXAGCH™gLevñ
(
thªad
, 
subrx
, 
h™gLevñ
)

972 
c⁄vît
, 
tmp
;

973 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

974 i‡(
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
max_öput
 >Ñx[thªad][subrx].w˝agc.gí->
mö_vﬁts
)

976 
c⁄vît
 = 
	`pow
 (10.0, 
h™gLevñ
 / 20.0);

977 
tmp
 = 
	`max
(1e-8, (
c⁄vît
 - 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mö_vﬁts
) /

978 (
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
max_öput
 -Ñx[thªad][subrx].w˝agc.gí->
mö_vﬁts
));

979 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™g_thªsh
 = 1.0 + 0.125 * 
	`log10
 (
tmp
);

982 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™g_thªsh
 = 1.0;

983 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

984 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

985 
	}
}

987 
DâSP_EXP
 

988 
	$GëRXAGCH™gThªshﬁd
(
thªad
, 
subrx
, *
h™gthªshﬁd
)

991 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

992 *
h™gthªshﬁd
 = ()(100.0 * 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™g_thªsh
);

993 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

994 
	}
}

996 
DâSP_EXP
 

997 
	$SëRXAGCH™gThªshﬁd
 (
thªad
, 
subrx
, 
h™gthªshﬁd
)

999 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1005 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
h™g_thªsh
 = ()
h™gthªshﬁd
 / 100.0;

1006 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

1008 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1009 
	}
}

1011 
DâSP_EXP
 

1012 
	$GëRXAGCThªsh
(
thªad
, 
subrx
, *
thªsh
)

1015 
noi£_off£t
 = 10.0 * 
	`log10
((
rx
[
thªad
][
subrx
].
fût
.
high
 -Ñx[thªad][subrx].fût.
low
)

1016 * 
uni
[
thªad
].
•ec
.
size
 / uni[thªad].
ßm∂î©e
);

1017 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1018 *
thªsh
 = 20.0 * 
	`log10
–
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
mö_vﬁts
 ) - 
noi£_off£t
;

1019 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1020 
	}
}

1022 
DâSP_EXP
 

1023 
	$SëRXAGCThªsh
(
thªad
, 
subrx
, 
thªsh
)

1026 
noi£_off£t
 = 10.0 * 
	`log10
((
rx
[
thªad
][
subrx
].
fût
.
high
 -Ñx[thªad][subrx].fût.
low
)

1027 * 
uni
[
thªad
].
•ec
.
size
 / uni[thªad].
ßm∂î©e
);

1028 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1029 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
max_gaö
 =Ñx[thªad][subrx].w˝agc.gí->
out_èrgë
 /

1030 (
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
v¨_gaö
 * 
	`pow
 (10.0, (
thªsh
 + 
noi£_off£t
) / 20.0));

1031 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

1032 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1033 
	}
}

1035 
DâSP_EXP
 

1036 
	$GëRXAGCT›
(
thªad
, 
subrx
, *
max_agc
)

1039 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1040 *
max_agc
 = 20 * 
	`log10
 (
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
max_gaö
);

1041 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1042 
	}
}

1044 
DâSP_EXP
 

1045 
	$SëRXAGCT›
 (
thªad
, 
subrx
, 
max_agc
)

1048 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1053 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
max_gaö
 = 
	`pow
 (10.0, ()
max_agc
 / 20.0);

1054 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

1056 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1057 
	}
}

1060 
DâSP_EXP
 

1061 
	$SëTXALCAâack
 (
thªad
, 
©èck
)

1064 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1073 
tx
[
thªad
].
Æc
.
gí
->
èu_©èck
 = ()
©èck
 / 1000.0;

1074 
	`lﬂdW˝AGC
(
tx
[
thªad
].
Æc
.
gí
);

1086 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1087 
	}
}

1089 
DâSP_EXP
 

1090 
	$SëTXAMC¨rõrLevñ
 (
thªad
, 
£tô
)

1092 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1094 
tx
[
thªad
].
am
.
ˇºõr_Àvñ
 = (
REAL
)
£tô
;

1096 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1097 
	}
}

1099 
DâSP_EXP
 

1100 
	$SëTXALCDeˇy
 (
thªad
, 
deˇy
)

1103 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1110 
tx
[
thªad
].
Æc
.
gí
->
èu_deˇy
 = ()
deˇy
 / 1000.0;

1111 
	`lﬂdW˝AGC
(
tx
[
thªad
].
Æc
.
gí
);

1113 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1114 
	}
}

1116 
DâSP_EXP
 

1117 
	$SëTXALCBŸ
 (
thªad
, 
max_agc
)

1119 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1123 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1124 
	}
}

1126 
DâSP_EXP
 

1127 
	$SëTXALCH™g
 (
thªad
, 
deˇy
)

1129 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1133 
tx
[
thªad
].
Æc
.
gí
->
h™gtime
 = ()
deˇy
 / 1000.0;

1134 
	`lﬂdW˝AGC
(
tx
[
thªad
].
Æc
.
gí
);

1136 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1137 
	}
}

1139 
DâSP_EXP
 

1140 
	$SëTXLevñîSt
 (
thªad
, 
BOOLEAN
 
°©e
)

1142 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1144 
tx
[
thªad
].
Àvñî
.
Êag
 = 
°©e
;

1146 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1147 
	}
}

1149 
DâSP_EXP
 

1150 
	$SëTXALCSt
 (
thªad
, 
BOOLEAN
 
°©e
)

1152 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1154 
tx
[
thªad
].
Æc
.
Êag
 = 
°©e
;

1156 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1157 
	}
}

1159 
DâSP_EXP
 

1160 
	$SëTXLevñîAâack
 (
thªad
, 
©èck
)

1162 
REAL
 
tmp
 = (REALË
©èck
;

1163 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1171 
tx
[
thªad
].
Àvñî
.
gí
->
èu_©èck
 = ()
©èck
 / 1000.0;

1172 
	`lﬂdW˝AGC
(
tx
[
thªad
].
Àvñî
.
gí
);

1185 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1186 
	}
}

1188 
DâSP_EXP
 

1189 
	$SëTXLevñîDeˇy
 (
thªad
, 
deˇy
)

1191 
REAL
 
tmp
 = (REALË
deˇy
;

1192 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1199 
tx
[
thªad
].
Àvñî
.
gí
->
èu_deˇy
 = ()
deˇy
 / 1000.0;

1200 
	`lﬂdW˝AGC
(
tx
[
thªad
].
Àvñî
.
gí
);

1201 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1202 
	}
}

1204 
DâSP_EXP
 

1205 
	$SëTXLevñîH™g
 (
thªad
, 
deˇy
)

1207 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1209 
tx
[
thªad
].
Àvñî
.
gí
->
h™gtime
 = ()
deˇy
 / 1000.0;

1210 
	`lﬂdW˝AGC
(
tx
[
thªad
].
Àvñî
.
gí
);

1211 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1212 
	}
}

1214 
DâSP_EXP
 

1215 
	$SëTXLevñîT›
 (
thªad
, 
maxgaö
)

1217 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1220 
tx
[
thªad
].
Àvñî
.
gí
->
max_gaö
 = 
	`pow
 (10.0,()
maxgaö
 / 20.0);

1221 
	`lﬂdW˝AGC
(
tx
[
thªad
].
Àvñî
.
gí
);

1223 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1224 
	}
}

1226 
DâSP_EXP
 

1227 
	$SëFixedAGC
 (
thªad
, 
subrx
, 
fixed_agc
)

1229 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1231 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
->
fixed_gaö
 = 
	`pow
 (10.0, ()
fixed_agc
 / 20.0);

1232 
	`lﬂdW˝AGC
 ( 
rx
[
thªad
][
subrx
].
w˝agc
.
gí
 );

1234 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1235 
	}
}

1273 
DâSP_EXP
 

1274 
	$SëC‹ª˘IQ
 (
thªad
, 
subrx
, 
pha£
, 
gaö
)

1276 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1277 
rx
[
thªad
][
subrx
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

1278 
rx
[
thªad
][
subrx
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

1279 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1280 
	}
}

1282 
DâSP_EXP
 

1283 
	$SëC‹ª˘IQGaö
 (
thªad
, 
subrx
, 
gaö
)

1285 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1286 
rx
[
thªad
][
subrx
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

1287 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1288 
	}
}

1290 
DâSP_EXP
 

1291 
	$SëC‹ª˘IQPha£
 (
thªad
, 
subrx
, 
pha£
)

1293 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1294 
rx
[
thªad
][
subrx
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

1295 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1296 
	}
}

1298 
DâSP_EXP
 

1299 
	$SëC‹ª˘IQE«bÀ
(
£tô
)

1301 
IQdoô
;

1302 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

1304 
IQdoô
 = 
£tô
;

1306 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

1307 
	}
}

1309 
DâSP_EXP
 

1310 
	$SëC‹ª˘IQMëhod
(
£tô
)

1312 
RXIQ_mëhod
;

1313 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

1315 
RXIQ_mëhod
 = 
£tô
;

1317 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

1318 
	}
}

1320 
DâSP_EXP
 

1321 
	$SëC‹ª˘TXIQE«bÀ
(
£tô
)

1323 
TXIQdoô
;

1324 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

1325 
TXIQdoô
 = 
£tô
;

1326 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

1327 
	}
}

1329 
DâSP_EXP
 

1330 
	$SëC‹ª˘RXIQMu
 (
thªad
, 
subrx
, 
mu
)

1332 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1333 
rx
[
thªad
][
subrx
].
iqfix
->
mu
 = (
REAL
)mu;

1337 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1338 
	}
}

1340 
DâSP_EXP
 

1341 
	$SëC‹ª˘WBIRSèã
(
thªad
,
WBIR_STATE
 
wbú
)

1343 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1344 
uni
[
thªad
].
wbú_°©e
 = 
wbú
;

1345 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1346 
	}
}

1348 
DâSP_EXP
 
REAL


1349 
	$GëC‹ª˘RXIQMu
(
thªad
, 
subrx
)

1351  
rx
[
thªad
][
subrx
].
iqfix
->
mu
;

1352 
	}
}

1354 
DâSP_EXP
 

1355 
	$SëC‹ª˘RXIQw
 (
thªad
, 
subrx
, 
REAL
 
wr
, REAL 
wi
, 
ödex
)

1357 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1358 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
] = 
	`Cm∂x
((
REAL
)
wr
,(REAL)
wi
);

1359 i‡(
ödex
 =0Ë
	`mem£t
((*)&
rx
[
thªad
][
subrx
].
iqfix
->
w
[1],0,15*(
COMPLEX
));

1360 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1361 
	}
}

1363 
DâSP_EXP
 

1364 
	$GëC‹ª˘RXIQw
(
thªad
, 
subrx
, 
REAL
 *
ªÆw
, REAL *
imagw
, 
ödex
)

1366 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1367 *
ªÆw
 = 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
ª
;

1368 *
imagw
 = 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
im
;

1369 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1370 
	}
}

1372 
DâSP_EXP
 

1373 
	$SëC‹ª˘RXIQwRól
 (
thªad
, 
subrx
, 
REAL
 
wr
, 
ödex
)

1375 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1376 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
ª
 = (
REAL
)
wr
;

1377 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1378 
	}
}

1380 
DâSP_EXP
 

1381 
	$SëC‹ª˘RXIQwImag
 (
thªad
, 
subrx
, 
REAL
 
wi
, 
ödex
)

1383 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1384 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
im
 = (
REAL
)
wi
;

1385 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1386 
	}
}

1388 
DâSP_EXP
 

1389 
	$SëC‹ª˘TXIQ
 (
thªad
, 
pha£
, 
gaö
)

1391 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1392 
tx
[
thªad
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

1393 
tx
[
thªad
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

1394 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1395 
	}
}

1397 
DâSP_EXP
 

1398 
	$SëC‹ª˘TXIQGaö
 (
thªad
, 
gaö
)

1400 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1401 
tx
[
thªad
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

1402 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1403 
	}
}

1405 
DâSP_EXP
 

1406 
	$SëC‹ª˘TXIQPha£
 (
thªad
, 
pha£
)

1408 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1409 
tx
[
thªad
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

1410 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1411 
	}
}

1413 
DâSP_EXP
 

1414 
	$SëC‹ª˘TXIQMu
 (
thªad
, 
mu
)

1416 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1417 
tx
[
thªad
].
iqfix
->
mu
 = (
REAL
)mu;

1418 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1419 
	}
}

1421 
DâSP_EXP
 

1422 
	$SëC‹ª˘TXIQW
 (
thªad
, 
wr
, 
wi
)

1424 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1425 
tx
[
thªad
].
iqfix
->
w
[0] = 
	`Cm∂x
((
REAL
)
wr
,(REAL)
wi
);

1426 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1427 
	}
}

1429 
DâSP_EXP
 

1430 
	$SëPWSmode
 (
thªad
, 
subrx
, 
£tô
)

1432 i‡(
rx
[
thªad
][
subrx
].
mode
 =
SPEC
)

1433 
£tô
 = 
SPEC_SEMI_RAW
;

1435 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1436 
£tô
)

1439 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

1442 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_PRE_FILT
;

1445 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_SEMI_RAW
;

1448 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_DET
;

1453 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1454 
	}
}

1456 
DâSP_EXP
 

1457 
	$SëWödow
 (
thªad
, 
Wödowty≥
 
wödow
)

1459 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1460 i‡(!
uni
[
thªad
].
•ec
.
pﬁypha£
)

1461 
	`makewödow
 (
wödow
, 
uni
[
thªad
].
•ec
.
size
, uni[thread].spec.window);

1462 
uni
[
thªad
].
•ec
.
wöty≥
 = 
wödow
;

1463 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1464 
	}
}

1466 
DâSP_EXP
 

1467 
	$SëS≥˘rumPﬁypha£
 (
thªad
, 
BOOLEAN
 
£tô
)

1469 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1470 i‡(
uni
[
thªad
].
•ec
.
pﬁypha£
 !
£tô
)

1472 i‡(
£tô
)

1474 
uni
[
thªad
].
•ec
.
pﬁypha£
 = 
TRUE
;

1475 
uni
[
thªad
].
•ec
.
mask
 = (8 * uni[thªad].•ec.
size
) - 1;

1477 
RólFIR
 
WOLAfú
;

1478 
REAL
 
MaxT≠
 = 0;

1479 
i
;

1480 
WOLAfú
 =

1481 
	`√wFIR_Low∑ss_REAL
 (1.0, (
REAL
Ë
uni
[
thªad
].
•ec
.
size
,

1482 8 * 
uni
[
thªad
].
•ec
.
size
 - 1);

1483 
	`mem£t
 (
uni
[
thªad
].
•ec
.
wödow
, 0, 8 *  (
REAL
Ë* uni[thªad].•ec.
size
);

1484 
	`mem˝y
 (
uni
[
thªad
].
•ec
.
wödow
, 
	`FIRc€f
 (
WOLAfú
),

1485  (
REAL
Ë* (8 * 
uni
[
thªad
].
•ec
.
size
 - 1));

1486 
i
 = 0; i < 8 * 
uni
[
thªad
].
•ec
.
size
; i++)

1487 
MaxT≠
 = 
	`max
 (MaxT≠, (
REAL
Ë
	`Ábs
 (
uni
[
thªad
].
•ec
.
wödow
[
i
]));

1488 
MaxT≠
 = 0.707107f / MaxTap;

1489 
i
 = 0; i < 8 * 
uni
[
thªad
].
•ec
.
size
; i++)

1490 
uni
[
thªad
].
•ec
.
wödow
[
i
] *
MaxT≠
;

1491 
	`dñFIR_REAL
 (
WOLAfú
);

1496 
uni
[
thªad
].
•ec
.
pﬁypha£
 = 
FALSE
;

1497 
uni
[
thªad
].
•ec
.
mask
 = uni[thªad].•ec.
size
 - 1;

1498 
	`mem£t
 (
uni
[
thªad
].
•ec
.
wödow
, 0,  (
REAL
Ë* uni[thªad].•ec.
size
);

1499 
	`makewödow
 (
uni
[
thªad
].
•ec
.
wöty≥
, uni[thªad].•ec.
size
 - 1, uni[thªad].•ec.
wödow
);

1501 
	`ªöô_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1503 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1504 
	}
}

1506 
DâSP_EXP
 

1507 
	$SëGΩhTXEQ
 (
thªad
, *
txeq
)

1509 
i
;

1510 
f·wf_∂™
 
±mp
;

1511 
COMPLEX
 *
fûtc€f
, *
tmpc€f
;

1512 
Com∂exFIR
 
tmpfût
;

1513 
REAL
 
¥ómp
, 
gaö
[3];

1515 
fûtc€f
 = 
	`√wvec_COMPLEX
 (512, "filter for EQ");

1516 
tmpc€f
 = 
	`√wvec_COMPLEX
 (257, "tmp filter for EQ");

1517 
¥ómp
 = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[0]) * 0.5f;

1518 
gaö
[0] = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[1]Ë* 
¥ómp
;

1519 
gaö
[1] = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[2]Ë* 
¥ómp
;

1520 
gaö
[2] = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[3]Ë* 
¥ómp
;

1522 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1524 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-400, 400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1525 
i
 = 0; i < 257; i++)

1526 
tmpc€f
[
i
] = 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[0]);

1527 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1529 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (400, 1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1530 
i
 = 0; i < 257; i++)

1531 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1532 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1534 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-1500, -400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1535 
i
 = 0; i < 257; i++)

1536 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1537 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1539 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (1500, 6000, 
uni
[
thªad
].
ßm∂î©e
, 257);

1540 
i
 = 0; i < 257; i++)

1541 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1542 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1544 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-6000, -1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1545 
i
 = 0; i < 257; i++)

1546 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1547 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1548 
i
 = 0; i < 257; i++)

1549 
fûtc€f
[255 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));

1550 
±mp
 =

1551 
	`f·wf_∂™_d·_1d
 (512, (
f·wf_com∂ex
 *Ë
fûtc€f
,

1552 (
f·wf_com∂ex
 *Ë
tx
[
thªad
].
gøpheq
.
gí
->
p
->
zfvec
,

1553 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

1555 
	`f·wf_execuã
 (
±mp
);

1556 
	`f·wf_de°roy_∂™
 (
±mp
);

1557 
	`dñvec_COMPLEX
 (
fûtc€f
);

1558 
	`dñvec_COMPLEX
(
tmpc€f
);

1560 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1561 
	}
}

1563 
DâSP_EXP
 

1564 
	$SëGΩhTXEQ10
(
thªad
, *
txeq
)

1576 
i
,
j
,
b™d
;

1577 
f·wf_∂™
 
±mp
;

1578 
COMPLEX
 *
fûtc€f
 = 
	`√wvec_COMPLEX
(512, "filter for EQ"),

1579 *
tmpc€f
 = 
	`√wvec_COMPLEX
(257, "tmp filter for EQ");

1580 
Com∂exFIR
 
tmpfût
;

1581 
REAL
 
¥ómp
;

1584 
¥ómp
 = 
	`dB2lö
((
REAL
Ë
txeq
[0]) * 0.5f;

1586 
j
 = 1, 
b™d
 = 15; j <= 10; j++, band += 3)

1588 
REAL
 
f_hîe
 = 
	`ISOb™d_gë_nomöÆ
(
b™d
),

1589 
f_bñow
 = 
	`gmón
(
f_hîe
 / 2.0f, f_here),

1590 
f_above
 = 
	`gmón
(
f_hîe
, f_here * 2.0f),

1591 
g_hîe
 = 
	`dB2lö
((
REAL
Ë
txeq
[
j
]Ë* 
¥ómp
;

1593 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(-
f_above
, -
f_bñow
, 
uni
->
ßm∂î©e
, 257);

1594 
i
 = 0; i < 257; i++)

1595 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1596 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1598 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(
f_bñow
, 
f_above
, 
uni
->
ßm∂î©e
, 257);

1599 
i
 = 0; i < 257; i++)

1600 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1601 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1604 
i
 = 0; i < 257; i++)

1605 
fûtc€f
[254 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));

1607 
±mp
 = 
	`f·wf_∂™_d·_1d
(512,

1608 (
f·wf_com∂ex
 *Ë
fûtc€f
,

1609 (
f·wf_com∂ex
 *Ë
tx
[
thªad
].
gøpheq
.
gí
->
p
->
zfvec
,

1610 
FFTW_FORWARD
,

1611 
uni
->
wisdom
.
bôs
);

1613 
	`f·wf_execuã
(
±mp
);

1614 
	`f·wf_de°roy_∂™
(
±mp
);

1615 
	`dñvec_COMPLEX
(
fûtc€f
);

1616 
	`dñvec_COMPLEX
(
tmpc€f
);

1617 
	}
}

1620 
DâSP_EXP
 

1621 
	$SëGΩhTXEQcmd
 (
thªad
, 
BOOLEAN
 
°©e
)

1623 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1624 
tx
[
thªad
].
gøpheq
.
Êag
 = 
°©e
;

1625 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1626 
	}
}

1629 
DâSP_EXP
 

1630 
	$SëNŸch160
 (
thªad
, 
BOOLEAN
 
°©e
)

1633 
	}
}

1635 
DâSP_EXP
 

1636 
	$SëGΩhRXEQ
 (
thªad
, 
subrx
, *
rxeq
)

1638 
i
;

1639 
f·wf_∂™
 
±mp
;

1640 
COMPLEX
 *
fûtc€f
, *
tmpc€f
;

1641 
Com∂exFIR
 
tmpfût
;

1642 
REAL
 
¥ómp
, 
gaö
[3];

1644 
fûtc€f
 = 
	`√wvec_COMPLEX
 (512, "filter for EQ");

1645 
tmpc€f
 = 
	`√wvec_COMPLEX
 (257, "tmp filter for EQ");

1646 
¥ómp
 = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[0]) * 0.5f;

1647 
gaö
[0] = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[1]Ë* 
¥ómp
;

1648 
gaö
[1] = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[2]Ë* 
¥ómp
;

1649 
gaö
[2] = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[3]Ë* 
¥ómp
;

1652 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1654 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-400, 400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1655 
i
 = 0; i < 257; i++)

1656 
tmpc€f
[
i
] = 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[0]);

1657 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1659 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (400, 1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1660 
i
 = 0; i < 257; i++)

1661 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1662 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1664 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-1500, -400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1665 
i
 = 0; i < 257; i++)

1666 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1667 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1669 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (1500, 6000, 
uni
[
thªad
].
ßm∂î©e
, 257);

1670 
i
 = 0; i < 257; i++)

1671 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1672 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1674 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-6000, -1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1675 
i
 = 0; i < 257; i++)

1676 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1677 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1678 
i
 = 0; i < 257; i++)

1679 
fûtc€f
[255 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));

1680 
±mp
 =

1681 
	`f·wf_∂™_d·_1d
 (512, (
f·wf_com∂ex
 *Ë
fûtc€f
,

1682 (
f·wf_com∂ex
 *Ë
rx
[
thªad
][
subrx
].
gøpheq
.
gí
->
p
->
zfvec
,

1683 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

1685 
	`f·wf_execuã
 (
±mp
);

1686 
	`f·wf_de°roy_∂™
 (
±mp
);

1687 
	`dñvec_COMPLEX
 (
fûtc€f
);

1688 
	`dñvec_COMPLEX
(
tmpc€f
);

1690 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1692 
	}
}

1694 
DâSP_EXP
 

1695 
	$SëGΩhRXEQ10
(
thªad
, 
subrx
, *
rxeq
)

1707 
i
,
j
,
b™d
;

1708 
f·wf_∂™
 
±mp
;

1709 
COMPLEX
 *
fûtc€f
 = 
	`√wvec_COMPLEX
(512, "filter for EQ"),

1710 *
tmpc€f
 = 
	`√wvec_COMPLEX
(257, "tmp filter for EQ");

1711 
Com∂exFIR
 
tmpfût
;

1712 
REAL
 
¥ómp
;

1714 
¥ómp
 = 
	`dB2lö
((
REAL
Ë
rxeq
[0]) * 0.5f;

1716 
j
 = 1, 
b™d
 = 15; j <= 10; j++, band += 3)

1718 
REAL
 
f_hîe
 = 
	`ISOb™d_gë_nomöÆ
(
b™d
),

1719 
f_bñow
 = 
	`gmón
(
f_hîe
 / 2.0f, f_here),

1720 
f_above
 = 
	`gmón
(
f_hîe
, f_here * 2.0f),

1721 
g_hîe
 = 
	`dB2lö
((
REAL
Ë
rxeq
[
j
]Ë* 
¥ómp
;

1723 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(-
f_above
, -
f_bñow
, 
uni
->
ßm∂î©e
, 257);

1724 
i
 = 0; i < 257; i++)

1725 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1726 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1728 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(
f_bñow
, 
f_above
, 
uni
->
ßm∂î©e
, 257);

1729 
i
 = 0; i < 257; i++)

1730 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1731 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1734 
i
 = 0; i < 257; i++)

1735 
fûtc€f
[254 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));;

1737 
±mp
 = 
	`f·wf_∂™_d·_1d
(512,

1738 (
f·wf_com∂ex
 *Ë
fûtc€f
,

1739 (
f·wf_com∂ex
 *Ë
rx
[
thªad
][
subrx
].
gøpheq
.
gí
->
p
->
zfvec
,

1740 
FFTW_FORWARD
,

1741 
uni
->
wisdom
.
bôs
);

1743 
	`f·wf_execuã
(
±mp
);

1744 
	`f·wf_de°roy_∂™
(
±mp
);

1745 
	`dñvec_COMPLEX
(
fûtc€f
);

1746 
	`dñvec_COMPLEX
(
tmpc€f
);

1747 
	}
}

1749 
DâSP_EXP
 

1750 
	$SëGΩhRXEQcmd
 (
thªad
, 
subrx
,
BOOLEAN
 
°©e
)

1752 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1753 
rx
[
thªad
][
subrx
].
gøpheq
.
Êag
 = 
°©e
;

1754 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1755 
	}
}

1757 
DâSP_EXP
 

1758 
	$SëTXAGCFF
 (
thªad
, 
BOOLEAN
 
£tô
)

1760 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1761 
tx
[
thªad
].
•r
.
Êag
 = 
£tô
;

1762 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1763 
	}
}

1765 
DâSP_EXP
 

1766 
	$SëTXAGCFFCom¥essi⁄
 (
thªad
, 
txcom¥essi⁄
)

1768 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1769 
tx
[
thªad
].
•r
.
gí
->
MaxGaö
 = (
REAL
Ë
	`pow
 (10.0, 
txcom¥essi⁄
 * 0.05);

1770 
tx
[
thªad
].
•r
.
gí
->
Ác
 = (
REAL
)

1771 ((((0.0000401002 * 
txcom¥essi⁄
) - 0.0032093390) *Åxcompression +

1772 0.0612862687Ë* 
txcom¥essi⁄
 + 0.9759745718);

1773 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1774 
	}
}

1776 
DâSP_EXP
 

1777 
	$SëSquñchVÆ
 (
thªad
, 
subrx
, 
£tô
)

1779 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1780 
rx
[
thªad
][
subrx
].
squñch
.
thªsh
 = 
£tô
;

1781 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1782 
	}
}

1784 
DâSP_EXP
 

1785 
	$SëSquñchSèã
 (
thªad
, 
subrx
,
BOOLEAN
 
£tô
)

1787 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1788 
rx
[
thªad
][
subrx
].
squñch
.
Êag
 = 
£tô
;

1789 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1790 
	}
}

1792 
DâSP_EXP
 

1793 
	$SëTRX
 (
thªad
, 
TRXMODE
 
£tô
)

1796 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1797 
uni
[
thªad
].
mode
.
åx
 = 
£tô
;

1800 if(
£tô
 =
RX
)

1802 
i
=0; i<
uni
[
thªad
].
mu…úx
.
ƒx
; i++)

1803 
	`ª£t_OvSv
(
rx
[
thªad
][
i
].
fût
.
ovsv
);

1806 
	`ª£t_OvSv
(
tx
[
thªad
].
fût
.
ovsv
);

1809 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1810 
	}
}

1812 
DâSP_EXP
 

1813 
	$FlushAŒBufs
 (
thªad
, 
BOOLEAN
 
åx
)

1815 
i
;

1816 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1818 if(
åx
)

1820 
	`ª£t_OvSv
(
tx
[
thªad
].
fût
.
ovsv
);

1821 
	`ª£t_OvSv
(
tx
[
thªad
].
fût
.
ovsv_¥e
);

1822 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
l
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1823 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
r
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1826 
	`W˝AGC_Êushbuf
(
tx
[
thªad
].
Àvñî
.
gí
);

1827 
	`W˝AGC_Êushbuf
(
tx
[
thªad
].
Æc
.
gí
);

1832 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
l
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1833 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
r
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1834 
i
=0; i<
uni
[
thªad
].
mu…úx
.
ƒx
; i++)

1836 
	`ª£t_OvSv
(
rx
[
thªad
][
i
].
fût
.
ovsv
);

1838 
	`W˝AGC_Êushbuf
(
rx
[
thªad
][
i
].
w˝agc
.
gí
);

1839 
	`ª£tDCBlockî
(
rx
[
thªad
][
i
].
dcb
, 
DCB_SINGLE_POLE
);

1843 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1846 
	}
}

1848 
DâSP_EXP
 

1849 
	$SëDSPBuÊí
 (
thªad
, 
√wBuffSize
)

1851 
	`ª£t_f‹_buÊí
 (, );

1852 
BOOLEAN
 
ª£t_em
;

1853 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1854 
t›
[0].
su•
 = 
TRUE
;

1855 
	`ª£t_f‹_buÊí
 (
thªad
, 
√wBuffSize
);

1857 
ª£t_em
 = 
TRUE
;

1858 
t›
[0].
su•
 = 
FALSE
;

1859 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1860 
	}
}

1862 
DâSP_EXP
 

1863 
	$SëAudioSize
 (
size
)

1865 
thªad
;

1866 
thªad
 = 0;thread < 3;Åhread++)

1868 
t›
[
thªad
].
su•
 = 
TRUE
;

1869 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1871 
thªad
=0;Åhread < 3;Åhread++)

1873 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

1874 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

1875 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
l
);

1876 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
);

1877 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

1878 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

1880 
thªad
 = 0;thread < 3;Åhread++)

1882 
t›
[
thªad
].
su•
 = 
FALSE
;

1883 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1885 
	}
}

1894 
DâSP_EXP
 

1895 
	$SëTXAGCCom¥essi⁄
 (
thªad
, 
txcom¥essi⁄
)

1898 
	}
}

1900 
DâSP_EXP
 

1901 
	$Pro˚ss_Com∂exS≥˘rum
 (
thªad
, *
ªsu…s
)

1903 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

1904 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1906 
	`¢≠_•e˘rum
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1908 
	`compuã_com∂ex_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1909 
	`mem˝y
 ((*Ë
ªsu…s
, 
uni
[
thªad
].
•ec
.
couçut
, uni[thªad].•ec.
size
 *  (
COMPLEX
));

1910 
	}
}

1912 
DâSP_EXP
 

1913 
	$Pro˚ss_S≥˘rum
 (
thªad
, *
ªsu…s
)

1915 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

1916 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1918 
	`¢≠_•e˘rum
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1920 
	`compuã_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1921 
	`mem˝y
 ((*Ë
ªsu…s
, 
uni
[
thªad
].
•ec
.
ouçut
, uni[thªad].•ec.
size
 *  ());

1922 
	}
}

1924 
DâSP_EXP
 

1925 
	$Pro˚ss_P™ad≠ãr
 (
thªad
, *
ªsu…s
)

1927 
BOOLEAN
 
ª£t_em
;

1929 i‡(
uni
[
thªad
].
mode
.
åx
 =
TX
)

1930 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

1932 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_PRE_FILT
;

1934 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1936 i‡(
ª£t_em
)

1938 
	`mem£t
(
ªsu…s
,0,
uni
[
thªad
].
•ec
.
size
 *  ());

1942 
	`¢≠_•e˘rum
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1944 
	`compuã_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1945 
	`mem˝y
 ((*Ë
ªsu…s
, 
uni
[
thªad
].
•ec
.
ouçut
, uni[thªad].•ec.
size
 *  ());

1946 
	}
}

1948 
DâSP_EXP
 

1949 
	$Pro˚ss_Pha£
 (
thªad
, *
ªsu…s
, 
numpoöts
)

1951 
i
, 
j
;

1952 
BOOLEAN
 
ª£t_em
;

1953 i‡(
ª£t_em
)

1955 
	`mem£t
(
ªsu…s
,0,
numpoöts
 *  ());

1959 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_AGC
;

1960 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1961 
uni
[
thªad
].
•ec
.
rxk
 = 0;

1962 
	`¢≠_sc›e
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1964 
i
 = 0, 
j
 = 0; i < 
numpoöts
; i++, j += 2)

1966 
ªsu…s
[
j
] = (Ë
	`CXBªÆ
 (
uni
[
thªad
].
•ec
.
timebuf
, 
i
);

1967 
ªsu…s
[
j
 + 1] = (Ë
	`CXBimag
 (
uni
[
thªad
].
•ec
.
timebuf
, 
i
);

1969 
	}
}

1971 
DâSP_EXP
 

1972 
	$Pro˚ss_Sc›e
 (
thªad
, *
ªsu…s
, 
numpoöts
)

1974 
i
;

1975 
BOOLEAN
 
ª£t_em
;

1976 i‡(
ª£t_em
)

1978 
	`mem£t
(
ªsu…s
,0,
numpoöts
 *  ());

1982 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_AGC
;

1983 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1984 
uni
[
thªad
].
•ec
.
rxk
 = 0;

1986 
	`¢≠_sc›e
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1988 
i
 = 0; i < 
numpoöts
; i++)

1990 
ªsu…s
[
i
] = (Ë
	`CXBªÆ
 (
uni
[
thªad
].
•ec
.
timebuf
, i);

1992 
	}
}

1994 
DâSP_EXP
 

1995 
	$SëRögBuf„rOff£t
(
thªad
, 
off£t
)

1997 
BOOLEAN
 
ª£t_em
;

1998 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1999 
t›
[
thªad
].
off£t
 = offset;

2001 
ª£t_em
 = 
TRUE
;

2002 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2003 
	}
}

2005 
DâSP_EXP
 

2006 
	$CÆcuœãRXMëî
 (
thªad
, 
subrx
, 
METERTYPE
 
mt
)

2008 
ªtu∫vÆ
 = 0;

2010 
uni
[
thªad
].
mëî
.
rx
.
mode
[
subrx
] = 
mt
;

2011 
mt
)

2013 
SIGNAL_STRENGTH
:

2014 
ªtu∫vÆ
 = 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_SIGNAL_STRENGTH
];

2016 
AVG_SIGNAL_STRENGTH
:

2017 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_AVG_SIGNAL_STRENGTH
];

2019 
ADC_REAL
:

2020 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_ADC_IMAG
];

2022 
ADC_IMAG
:

2023 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_ADC_REAL
];

2025 
AGC_GAIN
:

2026 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_AGC_GAIN
];

2029 
ªtu∫vÆ
 = -200;

2034  
ªtu∫vÆ
;

2035 
	}
}

2037 
DâSP_EXP
 

2038 
	$CÆcuœãTXMëî
 (
thªad
, 
METERTYPE
 
mt
)

2040 
ªtu∫vÆ
 = 0;

2042 
uni
[
thªad
].
mëî
.
tx
.
mode
 = 
mt
;

2043 
mt
)

2045 
MIC
:

2046 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC
];

2048 
PWR
:

2049 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_PWR
];

2051 
ALC
:

2052 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC
];

2054 
EQèp
:

2055 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ
];

2057 
LEVELER
:

2058 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL
];

2060 
COMP
:

2061 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP
];

2063 
CPDR
:

2064 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR
];

2066 
ALC_G
:

2067 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_G
];

2069 
LVL_G
:

2070 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_G
];

2072 
MIC_PK
:

2073 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC_PK
];

2075 
ALC_PK
:

2076 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_PK
];

2078 
EQ_PK
:

2079 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ_PK
];

2081 
LEVELER_PK
:

2082 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_PK
];

2084 
COMP_PK
:

2085 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP_PK
];

2087 
CPDR_PK
:

2088 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR_PK
];

2091 
ªtu∫vÆ
 = -200;

2094  
ªtu∫vÆ
;

2095 
	}
}

2097 
DâSP_EXP
 *

2098 
	$NewReßm∂î
 (
ßm∂î©e_ö
, 
ßm∂î©e_out
)

2100 
ResSt
 
tmp
;

2101 
lcm
 = 28224000, 
öãΩFa˘‹
, 
deciFa˘‹
;

2102 
öãΩFa˘‹
 = 
lcm
 / 
ßm∂î©e_ö
;

2103 
deciFa˘‹
 = 
lcm
 / 
ßm∂î©e_out
;

2104 
tmp
 = 
	`√wPﬁyPha£FIR
 (32768, 0, 
öãΩFa˘‹
, 0, 
deciFa˘‹
);

2105  (*Ë
tmp
;

2106 
	}
}

2108 
DâSP_EXP
 

2109 
	$DoReßm∂î
 (
COMPLEX
 * 
öput
, COMPLEX * 
ouçut
, 
numßmps
, *
outßmps
,

2110 
ResSt
 
±r
)

2112 
±r
->
öput
 = input;

2113 
±r
->
ouçut
 = output;

2114 
±r
->
öputAºayLígth
 = 
numßmps
;

2115 
	`PﬁyPha£FIR
 (
±r
);

2116 *
outßmps
 = 
±r
->
numOuçutSam∂es
;

2117 
	}
}

2119 
DâSP_EXP
 

2120 
	$DñPﬁyPha£FIR
 (
ResSt
 
ªs°
)

2122 
	`dñPﬁyPha£FIR
 (
ResSt
 
ªs°
);

2123 
	`dñPﬁyPha£FIR
 (
ªs°
);

2124 
	}
}

2126 
DâSP_EXP
 *

2127 
	$NewReßm∂îF
 (
ßm∂î©e_ö
, 
ßm∂î©e_out
)

2129 
ResStF
 
tmp
;

2130 
lcm
 = 28224000, 
öãΩFa˘‹
, 
deciFa˘‹
;

2131 
öãΩFa˘‹
 = 
lcm
 / 
ßm∂î©e_ö
;

2132 
deciFa˘‹
 = 
lcm
 / 
ßm∂î©e_out
;

2133 
tmp
 = 
	`√wPﬁyPha£FIRF
 (4096, 0, 
öãΩFa˘‹
, 0, 
deciFa˘‹
);

2134  (*Ë
tmp
;

2135 
	}
}

2137 
DâSP_EXP
 

2138 
	$DoReßm∂îF
 (*
öput
, *
ouçut
, 
numßmps
, *
outßmps
,

2139 
ResStF
 
±r
)

2141 
±r
->
öput
 = input;

2142 
±r
->
ouçut
 = output;

2143 
±r
->
öputAºayLígth
 = 
numßmps
;

2144 
	`PﬁyPha£FIRF
 (
±r
);

2145 *
outßmps
 = 
±r
->
numOuçutSam∂es
;

2146 
	}
}

2148 
DâSP_EXP
 

2149 
	$DñPﬁyPha£FIRF
 (
ResSt
 
ªs°
)

2151 
	`dñPﬁyPha£FIRF
 (
ResSt
 
ªs°
);

2152 
	`dñPﬁyPha£FIRF
 (
ªs°
);

2153 
	}
}

2155 
DâSP_EXP
 

2156 
	$SëSubRXSt
(
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

2158 
πn
 = 0;

2159 
£tô
)

2161 
TRUE
:

2162 i‡(
subrx
 >()
uni
[
thªad
].
mu…úx
.
ƒx
)

2164 
πn
 = -1;

2168 i‡(
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
])

2170 
πn
 = -1;

2174 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2175 
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
] = 
TRUE
;

2176 
uni
[
thªad
].
mu…úx
.
«c
++;

2177 
rx
[
thªad
][
subrx
].
tick
 = 0;

2178 
πn
 = 0;

2179 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2183 
FALSE
:

2184 i‡–
subrx
 >()
uni
[
thªad
].
mu…úx
.
ƒx
)

2186 
πn
 = -1;

2190 i‡(!
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
])

2191 
πn
 = -1;

2194 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2195 
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
] = 
FALSE
;

2196 --
uni
[
thªad
].
mu…úx
.
«c
;

2197 
πn
 = 0;

2198 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2203  
πn
;

2204 
	}
}

2224 
DâSP_EXP
 

2225 
	$SëRXP™
(
thªad
, 
subrx
, 
pos
)

2227 
thëa
, 
gaö_l
, 
gaö_r
;

2228 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2229 i‡(
pos
 < 0.0f)Öos = 0.0f;

2230 i‡(
pos
 > 1.0f)Öos = 1.0f;

2232 if(
pos
 <0.5fË
gaö_l
 = 1.0f;

2236 
thëa
 = (
REAL
Ë((
pos
 - 0.5Ë* 
M_PI
);

2237 
gaö_l
 = (
REAL
)
	`cos
(
thëa
);

2240 if(
pos
 >0.5fË
gaö_r
 = 1.0f;

2244 
thëa
 = (
REAL
Ë(
pos
 * 
M_PI
);

2245 
gaö_r
 = (
REAL
)
	`sö
(
thëa
);

2249 
rx
[
thªad
][
subrx
].
azim
 = 
	`Cm∂x
 (
gaö_r
, 
gaö_l
);

2254 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2255 
	}
}

2257 
DâSP_EXP
 

2258 
	$SëDivîsôy
 (
£tô
)

2260 
BOOLEAN
 
ª£t_em
;

2262 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

2263 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

2264 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

2266 
divîsôy
.
Êag
 = 
£tô
;

2267 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

2268 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

2269 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

2270 
	}
}

2272 
DâSP_EXP
 

2273 
	$SëDivîsôySˇœr
(
REAL
 
ª
, REAL 
im
)

2276 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

2277 
divîsôy
.
sˇœr
 = 
	`Cm∂x
(
ª
,
im
);

2278 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

2279 
	}
}

2281 
DâSP_EXP
 

2282 
	$SëDivîsôyGaö
(
REAL
 
gaö
)

2285 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

2286 
divîsôy
.
gaö
 = gain;

2287 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

2288 
	}
}

2290 
DâSP_EXP
 

2291 
	$SëSBMode
(
thªad
, 
subrx
, 
sbmode
)

2293 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2294 
rx
[
thªad
][
subrx
].
amd
.
gí
->
sbmode
 = sbmode;

2295 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2296 
	}
}

2298 
DâSP_EXP
 

2299 
	$SëFadeLevñ
(
thªad
, 
subrx
, 
ÀvñÁde
)

2301 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2302 
rx
[
thªad
][
subrx
].
amd
.
gí
->
ÀvñÁde
 =Üevelfade;

2303 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

2304 
	}
}

	@update.h

36 #i‚de‡
_upd©e_h


37 
	#_upd©e_h


	)

39 
	~<‰omsys.h
>

40 
	~<b™Æ.h
>

41 
	~<d©©y≥s.h
>

43 
do_upd©e
 (
thªad
, *
°r
, 
FILE
 * 
log
);

	@wcpAGC.c

33 
	~<comm⁄.h
>

34 
	~<m©h.h
>

35 
	~<w˝AGC.h
>

37 
WCPAGC
 
	$√wW˝AGC
 (
AGCMODE
 
mode
,

38 
pmode
,

39 
COMPLEX
 *
buff
,

40 
io_buffsize
,

41 
REAL
 
ßm∂e_øã
,

42 
èu_©èck
,

43 
èu_deˇy
,

44 
n_èu
,

45 
max_gaö
,

46 
v¨_gaö
,

47 
fixed_gaö
,

48 
max_öput
,

49 
out_èrg
,

50 
èu_Á°_backavîage
,

51 
èu_Á°_deˇy
,

52 
p›_øtio
,

53 
èu_h™g_backmu…
,

54 
h™gtime
,

55 
h™g_thªsh
,

56 
èu_h™g_deˇy
,

57 *
èg
)

59 
WCPAGC
 
a
;

60 
a
 = (
WCPAGC
Ë
	`ß„Æloc
 (1,(
w˝agc
), 
èg
);

62 
a
->
mode
 = mode;

63 
a
->
pmode
 =Ömode;

64 
a
->
buff
 = buff;

65 
a
->
io_buffsize
 = io_buffsize;

66 
a
->
ßm∂e_øã
 = sample_rate;

67 
a
->
èu_©èck
 =Åau_attack;

68 
a
->
èu_deˇy
 =Åau_decay;

69 
a
->
n_èu
 =Ç_tau;

70 
a
->
max_gaö
 = max_gain;

71 
a
->
v¨_gaö
 = var_gain;

72 
a
->
fixed_gaö
 = fixed_gain;

73 
a
->
max_öput
 = max_input;

74 
a
->
out_èrg
 = out_targ;

75 
a
->
èu_Á°_backavîage
 =Åau_fast_backaverage;

76 
a
->
èu_Á°_deˇy
 =Åau_fast_decay;

77 
a
->
p›_øtio
 =Öop_ratio;

78 
a
->
èu_h™g_backmu…
 =Åau_hang_backmult;

79 
a
->
h™gtime
 = hangtime;

80 
a
->
h™g_thªsh
 = hang_thresh;

81 
a
->
èu_h™g_deˇy
 =Åau_hang_decay;

82 
	`°r˝y
 (
a
->
èg
,Åag);

84 
a
->
rög_buffsize
 = 19200;

86 
a
->
out_ödex
 = -1;

87 
a
->
rög_max
 = 0.0;

88 
a
->
vﬁts
 = 0.0;

89 
a
->
ßve_vﬁts
 = 0.0;

90 
a
->
Á°_backavîage
 = 0.0;

91 
a
->
h™g_backavîage
 = 0.0;

92 
a
->
h™g_cou¡î
 = 0;

93 
a
->
deˇy_ty≥
 = 0;

94 
a
->
°©e
 = 0;

96 
	`lﬂdW˝AGC
 (
a
);

98  
a
;

99 
	}
}

101 
	$lﬂdW˝AGC
 (
WCPAGC
 
a
)

103 
tmp
;

105 
a
->
©èck_buffsize
 = ()
	`˚û
◊->
ßm∂e_øã
 *á->
n_èu
 *á->
èu_©èck
);

106 
a
->
ö_ödex
 =á->
©èck_buffsize
 +á->
out_ödex
;

107 
a
->
©èck_mu…
 = 1.0 - 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èu_©èck
));

108 
a
->
deˇy_mu…
 = 1.0 - 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èu_deˇy
));

109 
a
->
Á°_deˇy_mu…
 = 1.0 - 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èu_Á°_deˇy
));

110 
a
->
Á°_backmu…
 = 1.0 - 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èu_Á°_backavîage
));

111 
a
->
⁄emÁ°_backmu…
 = 1.0 -á->
Á°_backmu…
;

113 
a
->
out_èrgë
 =á->
out_èrg
 * (1.0 - 
	`exp
(-a->
n_èu
)) * 0.99;

114 
a
->
mö_vﬁts
 =á->
out_èrgë
 / (a->
v¨_gaö
 *á->
max_gaö
);

116 
tmp
 = 
	`log10
(
a
->
out_èrgë
 / (a->
max_öput
 *á->
v¨_gaö
 *á->
max_gaö
));

117 i‡(
tmp
 == 0.0)

118 
tmp
 = 1e-16;

119 
a
->
¶›e_c⁄°™t
 = (a->
out_èrgë
 * (1.0 - 1.0 /á->
v¨_gaö
)Ë/ 
tmp
;

121 
a
->
öv_max_öput
 = 1.0 /á->
max_öput
;

123 
tmp
 = 
	`pow
 (10.0, (
a
->
h™g_thªsh
 - 1.0) / 0.125);

124 
a
->
h™g_Àvñ
 = (a->
max_öput
 * 
tmp
 + (a->
out_èrgë
 /

125 (
a
->
v¨_gaö
 *á->
max_gaö
)Ë* (1.0 - 
tmp
)) * 0.637;

127 
a
->
h™g_backmu…
 = 1.0 - 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èu_h™g_backmu…
));

128 
a
->
⁄emh™g_backmu…
 = 1.0 -á->
h™g_backmu…
;

130 
a
->
h™g_deˇy_mu…
 = 1.0 - 
	`exp
(-1.0 / (a->
ßm∂e_øã
 *á->
èu_h™g_deˇy
));

131 
	}
}

133 
	$dñW˝AGC
 (
WCPAGC
 
a
)

135 i‡(
a
)

136 
	`ß„‰ì
 ((*Ë
a
);

137 
	}
}

139 
	$W˝AGC_Êushbuf
 (
WCPAGC
 
a
)

141 
	`mem£t
 ((*)
a
->
rög
, 0, ()*19200*2);

142 
a
->
rög_max
 = 0.0;

143 
	`mem£t
 ((*)
a
->
abs_rög
, 0, ()*19200);

144 
	}
}

146 
	$W˝AGC
 (
WCPAGC
 
a
)

148 
i
, 
j
, 
k
;

149 
mu…
;

151 i‡(
a
->
mode
 == 0)

153 
i
 = 0; i < 
a
->
io_buffsize
; i++)

155 
a
->
buff
[
i
].
ª
 *(Ô->
fixed_gaö
;

156 
a
->
buff
[
i
].
im
 *(Ô->
fixed_gaö
;

161 
i
 = 0; i < 
a
->
io_buffsize
; i++)

163 i‡(++
a
->
out_ödex
 >a->
rög_buffsize
)

164 
a
->
out_ödex
 -a->
rög_buffsize
;

165 i‡(++
a
->
ö_ödex
 >a->
rög_buffsize
)

166 
a
->
ö_ödex
 -a->
rög_buffsize
;

168 
a
->
out_ßm∂e
[0] =á->
rög
[a->
out_ödex
][0];

169 
a
->
out_ßm∂e
[1] =á->
rög
[a->
out_ödex
][1];

170 
a
->
abs_out_ßm∂e
 =á->
abs_rög
[a->
out_ödex
];

171 
a
->
rög
[a->
ö_ödex
][0] =á->
buff
[
i
].
ª
;

172 
a
->
rög
[a->
ö_ödex
][1] =á->
buff
[
i
].
im
;

173 i‡(
a
->
pmode
 == 0)

174 
a
->
abs_rög
[a->
ö_ödex
] = 
	`max
(
	`Ábs
◊->
rög
[a->in_index][0]), fabs(a->ring[a->in_index][1]));

176 
a
->
abs_rög
[a->
ö_ödex
] = 
	`sqπ
◊->
rög
[a->in_index][0] *á->ring[a->in_index][0] +á->ring[a->in_index][1] *á->ring[a->in_index][1]);

178 
a
->
Á°_backavîage
 =á->
Á°_backmu…
 *á->
abs_out_ßm∂e
 +á->
⁄emÁ°_backmu…
 *á->fast_backaverage;

179 
a
->
h™g_backavîage
 =á->
h™g_backmu…
 *á->
abs_out_ßm∂e
 +á->
⁄emh™g_backmu…
 *á->hang_backaverage;

181 i‡((
a
->
abs_out_ßm∂e
 >a->
rög_max
) && (a->abs_out_sample > 0))

183 
a
->
rög_max
 = 0.0;

184 
k
 = 
a
->
out_ödex
;

185 
j
 = 0; j < 
a
->
©èck_buffsize
; j++)

187 i‡(++
k
 =
a
->
rög_buffsize
)

188 
k
 = 0;

189 i‡(
a
->
abs_rög
[
k
] >á->
rög_max
)

190 
a
->
rög_max
 =á->
abs_rög
[
k
];

193 i‡(
a
->
abs_rög
[a->
ö_ödex
] >á->
rög_max
)

194 
a
->
rög_max
 =á->
abs_rög
[a->
ö_ödex
];

196 i‡(
a
->
h™g_cou¡î
 > 0)

197 --
a
->
h™g_cou¡î
;

199 
a
->
°©e
)

203 i‡(
a
->
rög_max
 >a->
vﬁts
)

205 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
©èck_mu…
;

209 i‡(
a
->
vﬁts
 >á->
p›_øtio
 *á->
Á°_backavîage
)

211 
a
->
°©e
 = 1;

212 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
Á°_deˇy_mu…
;

216 i‡(
a
->
h™g_backavîage
 >á->
h™g_Àvñ
)

218 
a
->
°©e
 = 2;

219 
a
->
h™g_cou¡î
 = ()◊->
h™gtime
 *á->
ßm∂e_øã
);

220 
a
->
deˇy_ty≥
 = 1;

224 
a
->
°©e
 = 3;

225 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
deˇy_mu…
;

226 
a
->
deˇy_ty≥
 = 0;

234 i‡(
a
->
rög_max
 >a->
vﬁts
)

236 
a
->
°©e
 = 0;

237 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
©èck_mu…
;

241 i‡(
a
->
vﬁts
 >á->
ßve_vﬁts
)

243 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
Á°_deˇy_mu…
;

247 i‡(
a
->
h™g_cou¡î
 > 0)

249 
a
->
°©e
 = 2;

253 i‡(
a
->
deˇy_ty≥
 == 0)

255 
a
->
°©e
 = 3;

256 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
deˇy_mu…
;

260 
a
->
°©e
 = 4;

261 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
h™g_deˇy_mu…
;

270 i‡(
a
->
rög_max
 >a->
vﬁts
)

272 
a
->
°©e
 = 0;

273 
a
->
ßve_vﬁts
 =á->
vﬁts
;

274 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
©èck_mu…
;

278 i‡(
a
->
h™g_cou¡î
 == 0)

280 
a
->
°©e
 = 4;

281 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
h™g_deˇy_mu…
;

288 i‡(
a
->
rög_max
 >a->
vﬁts
)

290 
a
->
°©e
 = 0;

291 
a
->
ßve_vﬁts
 =á->
vﬁts
;

292 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
©èck_mu…
;

296 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
deˇy_mu…
;

302 i‡(
a
->
rög_max
 >a->
vﬁts
)

304 
a
->
°©e
 = 0;

305 
a
->
ßve_vﬁts
 =á->
vﬁts
;

306 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
©èck_mu…
;

310 
a
->
vﬁts
 +◊->
rög_max
 -á->vﬁtsË*á->
h™g_deˇy_mu…
;

316 i‡(
a
->
vﬁts
 <á->
mö_vﬁts
)

317 
a
->
vﬁts
 =á->
mö_vﬁts
;

319 
mu…
 = (
a
->
out_èrgë
 -á->
¶›e_c⁄°™t
 * 
	`mö
(0.0, 
	`log10
◊->
öv_max_öput
 *á->
vﬁts
))) /á->volts;

320 
a
->
buff
[
i
].
ª
 = ()◊->
out_ßm∂e
[0] * 
mu…
);

321 
a
->
buff
[
i
].
im
 = ()◊->
out_ßm∂e
[1] * 
mu…
);

324 
	}
}

	@wcpAGC.h

33 #i‚de‡
_w˝agc_h


34 
	#_w˝agc_h


	)

41 
	s_w˝agc


43 
	mmode
;

44 
	mpmode
;

45 
COMPLEX
 *
	mbuff
;

46 
	mio_buffsize
;

47 
REAL
 
	mßm∂e_øã
;

49 
	mèu_©èck
;

50 
	mèu_deˇy
;

51 
	mn_èu
;

52 
	mmax_gaö
;

53 
	mv¨_gaö
;

54 
	mfixed_gaö
;

55 
	mmö_vﬁts
;

56 
	mmax_öput
;

57 
	mout_èrg
;

58 
	mout_èrgë
;

59 
	möv_max_öput
;

60 
	m¶›e_c⁄°™t
;

62 
	mout_ödex
;

63 
	mö_ödex
;

64 
	m©èck_buffsize
;

66 
	mrög
[19200][2];

67 
	mabs_rög
[19200];

68 
	mrög_buffsize
;

69 
	mrög_max
;

71 
	m©èck_mu…
;

72 
	mdeˇy_mu…
;

73 
	mvﬁts
;

74 
	mßve_vﬁts
;

75 
	mout_ßm∂e
[2];

76 
	mabs_out_ßm∂e
;

77 
	m°©e
;

79 
	mèu_Á°_backavîage
;

80 
	mÁ°_backmu…
;

81 
	m⁄emÁ°_backmu…
;

82 
	mÁ°_backavîage
;

83 
	mèu_Á°_deˇy
;

84 
	mÁ°_deˇy_mu…
;

85 
	mp›_øtio
;

87 
	mh™g_backavîage
;

88 
	mèu_h™g_backmu…
;

89 
	mh™g_backmu…
;

90 
	m⁄emh™g_backmu…
;

91 
	mh™g_cou¡î
;

92 
	mh™gtime
;

93 
	mh™g_thªsh
;

94 
	mh™g_Àvñ
;

96 
	mèu_h™g_deˇy
;

97 
	mh™g_deˇy_mu…
;

98 
	mdeˇy_ty≥
;

100 
	mèg
[4];

102 } 
	tw˝agc
, *
	tWCPAGC
;

104 
lﬂdW˝AGC
 (
WCPAGC
 
a
);

106 
W˝AGC
 (
WCPAGC
 
a
);

108 
WCPAGC
 
√wW˝AGC
 ( 
AGCMODE
 
mode
,

109 
pmode
,

110 
COMPLEX
 *
buff
,

111 
io_buffsize
,

112 
REAL
 
ßm∂e_øã
,

113 
èu_©èck
,

114 
èu_deˇy
,

115 
n_èu
,

116 
max_gaö
,

117 
v¨_gaö
,

118 
fixed_gaö
,

119 
max_öput
,

120 
out_èrg
,

121 
èu_Á°_backavîage
,

122 
èu_Á°_deˇy
,

123 
p›_øtio
,

124 
èu_h™g_backmu…
,

125 
h™gtime
,

126 
h™g_thªsh
,

127 
èu_h™g_deˇy
,

128 *
èg


131 
dñW˝AGC
 (
WCPAGC
 
a
);

133 
W˝AGC_Êushbuf
 (
WCPAGC
 
a
);

	@window.c

34 
	~<wödow.h
>

53 
REAL
 *

54 
	$makewödow
 (
Wödowty≥
 
ty≥
, 
size
, 
REAL
 * 
wödow
)

56 
i
, 
j
, 
midn
, 
midp1
, 
midm1
;

57 
REAL
 
‰eq
, 
øã
, 
§1
, 
™gÀ
, 
ex≤
, 
expsum
, 
cx
, 
two_pi
;

59 
midn
 = 
size
 >> 1;

60 
midp1
 = (
size
 + 1) / 2;

61 
midm1
 = (
size
 - 1) / 2;

62 
two_pi
 = (
REAL
Ë(8.0 * 
	`©™
 (1.0));

63 
‰eq
 = 
two_pi
 / (
REAL
Ë
size
;

64 
øã
 = (
REAL
Ë(1.0 / (REALË
midn
);

65 
™gÀ
 = 0.0;

66 
ex≤
 = (
REAL
Ë(
	`log
 (2.0Ë/ (REALË
midn
 + 1.0);

67 
expsum
 = 1.0;

69 
ty≥
)

71 
RECTANGULAR_WINDOW
:

72 
i
 = 0; i < 
size
; i++)

73 
wödow
[
i
] = 1.0;

75 
HANNING_WINDOW
:

76 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

77 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

78 
wödow
[
j
] = (wödow[
i
] = (
REAL
Ë(0.5 - 0.5 * 
	`cos
 (
™gÀ
)));

80 
WELCH_WINDOW
:

81 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

82 
wödow
[
j
] =

83 (
wödow
[
i
] =

84 (
REAL
Ë(1.0 - 
	`sqr
 ((REALË(
i
 - 
midm1
Ë/ (REALË
midp1
)));

86 
PARZEN_WINDOW
:

87 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

88 
wödow
[
j
] =

89 (
wödow
[
i
] =

90 (
REAL
Ë(1.0 - 
	`Ábs
 ((REALË(
i
 - 
midm1
Ë/ (REALË
midp1
)));

92 
BARTLETT_WINDOW
:

93 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

94 
i
++, 
j
--, 
™gÀ
 +
øã
)

95 
wödow
[
j
] = (wödow[
i
] = 
™gÀ
);

97 
HAMMING_WINDOW
:

98 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

99 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

100 
wödow
[
j
] = (wödow[
i
] = (
REAL
Ë(0.54 - 0.46 * 
	`cos
 (
™gÀ
)));

102 
BLACKMAN2_WINDOW
:

103 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

104 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

106 
cx
 = (
REAL
Ë
	`cos
 (
™gÀ
);

107 
wödow
[
j
] = (wödow[
i
] =

108 (
REAL
Ë(.34401 + (
cx
 * (-.49755 + (cx * .15844)))));

111 
BLACKMAN3_WINDOW
:

112 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

113 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

115 
cx
 = (
REAL
Ë
	`cos
 (
™gÀ
);

116 
wödow
[
j
] =

117 (
wödow
[
i
] =

118 (
REAL
) (.21747 +

119 (
cx
 * (-.45325 + (cx * (.28256 - (cx * .04672)))))));

122 
BLACKMAN4_WINDOW
:

123 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

124 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

126 
cx
 = (
REAL
Ë
	`cos
 (
™gÀ
);

127 
wödow
[
j
] = (wödow[
i
] = (
REAL
)

129 (
cx
 *

131 (
cx
 *

132 (.375696 + (
cx
 * (-.20762 + (cx * .041194)))))))));

135 
EXPONENTIAL_WINDOW
:

136 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

138 
wödow
[
j
] = (wödow[
i
] = (
REAL
Ë(
expsum
 - 1.0));

139 
expsum
 *
ex≤
;

142 
RIEMANN_WINDOW
:

143 
§1
 = 
two_pi
 / (
REAL
Ë
size
;

144 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

146 i‡(
i
 =
midn
)

147 
wödow
[
j
] = (wödow[
i
] = 1.0);

151 
cx
 = 
§1
 * (
midn
 - 
i
);

152 
wödow
[
i
] = (
REAL
Ë(
	`sö
 (
cx
) / cx);

153 
wödow
[
j
] = wödow[
i
];

157 
BLACKMANHARRIS_WINDOW
:

159 
REAL
 
a0
 = 0.35875f, 
a1
 = 0.48829f, 
a2
 = 0.14128f, 
a3
 = 0.01168f;

162 
i
 = 0; i < 
size
; i++)

164 
wödow
[
i
] =

165 (
REAL
Ë(
a0
 -

166 
a1
 * 
	`cos
 (
two_pi
 * (
REAL
Ë(
i
) /

167 (
REAL
Ë(
size
 - 1)) +

168 
a2
 * 
	`cos
 (2.0 * 
two_pi
 * (
REAL
Ë(
i
) /

169 (
REAL
Ë(
size
 - 1)) -

170 
a3
 * 
	`cos
 (3.0 * 
two_pi
 * (
REAL
Ë(
i
) /

171 (
REAL
Ë(
size
 - 1)));

175 
NUTTALL_WINDOW
:

177 
REAL
 
a0
 = 0.3635819f, 
a1
 = 0.4891775f, 
a2
 = 0.1365995f, 
a3
 =

181 
i
 = 0; i < 
size
; i++)

183 
wödow
[
i
] =

184 (
REAL
Ë(
a0
 -

185 
a1
 * 
	`cos
 (
two_pi
 * (
REAL
Ë(
i
) /

186 (
REAL
Ë(
size
 - 1)) +

187 
a2
 * 
	`cos
 (2.0 * 
two_pi
 * (
REAL
Ë(
i
) /

188 (
REAL
Ë(
size
 - 1)) -

189 
a3
 * 
	`cos
 (3.0 * 
two_pi
 * (
REAL
Ë(
i
) /

190 (
REAL
Ë(
size
 - 1)));

199  
wödow
;

200 
	}
}

	@window.h

35 #i‚de‡
_wödow_h


36 
	#_wödow_h


	)

38 
	~<°dlib.h
>

39 
	~<°dio.h
>

40 
	~<d©©y≥s.h
>

41 
	~<˘y≥.h
>

42 
	~<°rög.h
>

43 
	~<m©h.h
>

57 
	e_wödowty≥


59 
	mRECTANGULAR_WINDOW
,

60 
	mHANNING_WINDOW
,

61 
	mWELCH_WINDOW
,

62 
	mPARZEN_WINDOW
,

63 
	mBARTLETT_WINDOW
,

64 
	mHAMMING_WINDOW
,

65 
	mBLACKMAN2_WINDOW
,

66 
	mBLACKMAN3_WINDOW
,

67 
	mBLACKMAN4_WINDOW
,

68 
	mEXPONENTIAL_WINDOW
,

69 
	mRIEMANN_WINDOW
,

70 
	mBLACKMANHARRIS_WINDOW
,

71 
	mNUTTALL_WINDOW
,

72 } 
	tWödowty≥
;

74 
REAL
 *
makewödow
 (
Wödowty≥
 
ty≥
, 
size
, REAL * 
wödow
);

76 
REAL
 
sqr
 (REAL 
x
);

	@winmain.c

34 
	~<comm⁄.h
>

35 
	~<sys/ty≥s.h
>

36 
	~<uni°d.h
>

41 
_loc
 
	gloc
[3];

42 
thªadno
;

47 
ª£t_mëîs
 ();

48 
ª£t_•e˘rum
 ();

49 
ª£t_cou¡îs
 ();

50 
¥o˚ss_ßm∂es
 (*, *, *, *, , );

51 
£tup_w‹k•a˚
 (
REAL
 
øã
,

52 
buÊí
,

53 
SDRMODE
 
mode
,

54 *
wisdom
,

55 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
);

56 
de°roy_w‹k•a˚
 (
thªad
);

65 
BOOLEAN
 
	gª£t_em
;

66 *
	gAPP_DATA_PATH
;

68 
PRIVATE
 
BOOLEAN


69 
	$gëhﬁd
 (
¥oc_thªad
)

71 i‡(
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
l
Ë>t›[¥oc_thªad].
hﬁd
.
size
.
‰ames
)

73 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
l
,

74 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
l
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

75 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
r
,

76 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
r
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

77 #ifde‡
USE_AUXILIARY


78 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
i
.
l
,

79 
t›
[
¥oc_thªad
].
hﬁd
.
aux
.
l
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

80 
	`rögb_Êﬂt_ªad
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
,

81 
t›
[
¥oc_thªad
].
hﬁd
.
aux
.
r
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

83 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
i
.
l
,

84 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
l
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

85 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
i
.
r
,

86 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
r
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

88  
TRUE
;

89 }  
FALSE
;

91 
	}
}

92 
PRIVATE
 

93 
	$puthﬁd
(
¥oc_thªad
)

95 i‡(
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
o
.
l
Ë>t›[¥oc_thªad].
hﬁd
.
size
.
‰ames
)

97 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
o
.
l
,Å›[¥oc_thªad].
hﬁd
.
buf
.l,

98 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

99 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
o
.
r
,Å›[¥oc_thªad].
hﬁd
.
buf
.r,

100 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

101 #ifde‡
USE_AUXILIARY


102 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
l
,Å›[¥oc_thªad].
hﬁd
.
aux
.l,

103 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

104 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
r
,Å›[¥oc_thªad].
hﬁd
.
aux
.r,

105 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

107 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
l
,Å›[¥oc_thªad].
hﬁd
.
buf
.l,

108 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

109 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
r
,Å›[¥oc_thªad].
hﬁd
.
buf
.r,

110 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

115 
PRIVATE
 
BOOLEAN


116 
	`ˇnhﬁd
 (
¥oc_thªad
)

119  (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
l
) >=

120 (
size_t
Ë
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

126 
PRIVATE
 

127 
	`run_muã
 (
thªad
)

129 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
l
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

130 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
r
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

131 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
l
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

132 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
r
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

133 
uni
[
thªad
].
tick
++;

136 
PRIVATE
 

137 
	`run_∑ss
 (
thªad
)

139 
uni
[
thªad
].
tick
++;

142 
PRIVATE
 

143 
	`run_∂ay
 (
thªad
)

145 
	`¥o˚ss_ßm∂es
 (
t›
[
thªad
].
hﬁd
.
buf
.
l
,Å›[thªad].hﬁd.buf.
r
,

146 
t›
[
thªad
].
hﬁd
.
aux
.
l
,Å›[thªad].hﬁd.aux.
r
,Å›[thªad].hﬁd.
size
.
‰ames
,Åhread);

153 
PRIVATE
 

154 
	`run_swch
(
thªad
)

156 
i
, 
n
 = 
t›
[
thªad
].
hﬁd
.
size
.
‰ames
;

157 
REAL
 
w
;

160 
	`¥o˚ss_ßm∂es
(
t›
[
thªad
].
hﬁd
.
buf
.
l
,Å›[thªad].hﬁd.buf.
r
,

161 
t›
[
thªad
].
hﬁd
.
aux
.
l
,Å›[thªad].hﬁd.aux.
r
,

162 
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,Åhread);

164 
i
 = 0; i < 
n
; i++)

167 i‡(
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 =
SWCH_FALL
)

169 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 +t›[thªad].swch.ív.
ÁŒ
.
ö¸
;

170 
w
 = (
REAL
)
	`sö
(
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 * 
M_PI
 / 2.0f);

171 
t›
[
thªad
].
hﬁd
.
buf
.
l
[thªad] *
w
,Å›[thªad].hﬁd.buf.
r
[thread] *= w;

172 
t›
[
thªad
].
hﬁd
.
aux
.
l
[thªad] *
w
,Å›[thªad].hﬁd.aux.
r
[thread] *= w;

175 i‡(++
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 >t›[thªad].swch.ív.
ÁŒ
.
size
)

178 
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 = 
SWCH_STDY
;

179 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

180 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

184 i‡(
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 =
SWCH_STDY
)

186 
t›
[
thªad
].
hﬁd
.
buf
.
l
[
i
]t›[thªad].hﬁd.buf.
r
[i] =

187 
t›
[
thªad
].
hﬁd
.
aux
.
l
[
i
] =Å›[thªad].hﬁd.aux.
r
[i] = 0.0;

189 i‡(++
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 >t›[thªad].swch.ív.
°dy
.
size
)

192 
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 = 
SWCH_RISE
;

193 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

194 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

198 i‡(
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 =
SWCH_RISE
)

200 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 +t›[thªad].swch.ív.
ri£
.
ö¸
;

201 
w
 = (
REAL
)
	`sö
(
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 * 
M_PI
 / 2.0f);

202 
t›
[
thªad
].
hﬁd
.
buf
.
l
[
i
] *
w
,Å›[thªad].hﬁd.buf.
r
[i] *= w;

203 
t›
[
thªad
].
hﬁd
.
aux
.
l
[
i
] *
w
,Å›[thªad].hﬁd.aux.
r
[i] *= w;

205 i‡(++
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 >t›[thªad].swch.ív.
ri£
.
size
)

211 
uni
[
thªad
].
mode
.
åx
 = 
t›
[thªad].
swch
.åx.
√xt
;

212 
t›
[
thªad
].
°©e
 =Å›[thªad].
swch
.
run
.
œ°
;

223 
	`ª£t_sy°em_audio
(
size_t
 
n‰ames
)

225 
size_t
 
ª£t_size
;

226 
thªad
;

227 c⁄° 
zîo
 = 0.;

228 
i
;

230 
ª£t_em
 = 
FALSE
;

231 
thªad
 = 0;Åhªad < 
thªadno
;Åhread++)

233 
ª£t_size
 = 
	`max
 (
t›
[
thªad
].
jack
.ª£t_size, 
n‰ames
);

234 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

235 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

236 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
l
);

237 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
);

238 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
,Å›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring-1);

239 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
,Å›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring-1);

240 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

241 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

245 i‡(
t›
[
thªad
].
off£t
 < 0)

247 
i
=
t›
[
thªad
].
off£t
;i<0;i++)

249 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
rög
.
i
.
l
,&
zîo
,1);

250 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
auxr
.
i
.
l
,&
zîo
,1);

256 
i
=0;i<
t›
[
thªad
].
off£t
;i++)

258 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
rög
.
i
.
r
,&
zîo
,1);

259 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
auxr
.
i
.
r
,&
zîo
,1);

264 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
, 
ª£t_size
);

265 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
, 
ª£t_size
);

266 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
r
, 
ª£t_size
);

267 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
l
, 
ª£t_size
);

273 
DâSP_EXP
 

274 
	`Audio_CÆlback
 (*
öput_l
, *
öput_r
, *
ouçut_l
,

275 *
ouçut_r
, 
n‰ames
, 
thªad
)

277 
BOOLEAN
 
b
 = 
ª£t_em
;

278 
i
;

280 
i
=
thªad
;

281 i‡(
t›
[
i
].
su•
)

283 
	`mem£t
 (
ouçut_l
, 0, 
n‰ames
 *  ());

284 
	`mem£t
 (
ouçut_r
, 0, 
n‰ames
 *  ());

288 i‡(
b
)

291 
	`ª£t_sy°em_audio
(
n‰ames
);

292 
	`mem£t
 (
ouçut_l
, 0, 
n‰ames
 *  ());

293 
	`mem£t
 (
ouçut_r
, 0, 
n‰ames
 *  ());

299 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
i
].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

300 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
i
].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

302 i‡(
t›
[
i
].
°©e
 =
RUN_PLAY
)

304 
	`rögb_Êﬂt_ªad
 (
t›
[
i
].
jack
.
auxr
.
o
.
l
, 
ouçut_l
, 
n‰ames
);

305 
	`rögb_Êﬂt_ªad
 (
t›
[
i
].
jack
.
auxr
.
o
.
r
, 
ouçut_r
, 
n‰ames
);

306 
	`rögb_Êﬂt_ªad
 (
t›
[
i
].
jack
.
rög
.
o
.
l
, 
ouçut_l
, 
n‰ames
);

307 
	`rögb_Êﬂt_ªad
 (
t›
[
i
].
jack
.
rög
.
o
.
r
, 
ouçut_r
, 
n‰ames
);

311 
	`rögb_Êﬂt_ªad_adv™˚
 (
t›
[
i
].
jack
.
auxr
.
o
.
l
, 
n‰ames
);

312 
	`rögb_Êﬂt_ªad_adv™˚
 (
t›
[
i
].
jack
.
auxr
.
o
.
r
, 
n‰ames
);

313 
	`rögb_Êﬂt_ªad_adv™˚
 (
t›
[
i
].
jack
.
rög
.
o
.
l
, 
n‰ames
);

314 
	`rögb_Êﬂt_ªad_adv™˚
 (
t›
[
i
].
jack
.
rög
.
o
.
r
, 
n‰ames
);

327 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
l
Ë>
n‰ames
)

328 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
r
Ë>
n‰ames
))

330 
	`rögb_Êﬂt_wrôe
 (
t›
[
i
].
jack
.
rög
.i.
l
, (*Ë
öput_l
, 
n‰ames
);

331 
	`rögb_Êﬂt_wrôe
 (
t›
[
i
].
jack
.
rög
.i.
r
, (*Ë
öput_r
, 
n‰ames
);

332 
	`rögb_Êﬂt_wrôe
 (
t›
[
i
].
jack
.
auxr
.i.
l
, (*Ë
öput_l
, 
n‰ames
);

333 
	`rögb_Êﬂt_wrôe
 (
t›
[
i
].
jack
.
auxr
.i.
r
, (*Ë
öput_r
, 
n‰ames
);

344 i‡(
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
l
Ë>t›[i].
hﬁd
.
size
.
‰ames
)

345 
	`£m_po°
 (&
t›
[
i
].
sync
.
buf
.
£m
);

349 
DâSP_EXP
 

350 
	`Audio_CÆlback2
 (**
öput
, **
ouçut
, 
n‰ames
)

352 
thªad
;

353 
BOOLEAN
 
b
 = 
ª£t_em
;

354 
BOOLEAN
 
ªtu∫_em±y
=
FALSE
;

355 
i
;

356 
thªad
=0;thªad<
thªadno
;thread++)

358 i‡(
t›
[
thªad
].
su•
Ë
ªtu∫_em±y
 = 
TRUE
;

361 i‡(
ªtu∫_em±y
)

363 
thªad
=0;thªad<
thªadno
;thread++)

365 
	`mem£t
 (
ouçut
[2*
thªad
], 0, 
n‰ames
 *  ());

366 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

371 i‡(
b
)

375 
	`ª£t_sy°em_audio
(
n‰ames
);

376 
thªad
=0;thªad<
thªadno
;thread++) {

377 
	`mem£t
 (
ouçut
[2*
thªad
], 0, 
n‰ames
 *  ());

378 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

383 i‡(
divîsôy
.
Êag
) {

385 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

386 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

388 
	`rögb_Êﬂt_ªad
 (
t›
[1].
jack
.
rög
.
o
.
l
, 
ouçut
[2], 
n‰ames
);

389 
	`rögb_Êﬂt_ªad
 (
t›
[1].
jack
.
rög
.
o
.
r
, 
ouçut
[3], 
n‰ames
);

395 
thªad
=0;thªad<
thªadno
;thread++)

397 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

398 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

404 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

405 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

407 
	`rögb_Êﬂt_wrôe
 (
t›
[1].
jack
.
rög
.
i
.
l
, 
öput
[2], 
n‰ames
);

408 
	`rögb_Êﬂt_wrôe
 (
t›
[1].
jack
.
rög
.
i
.
r
, 
öput
[3], 
n‰ames
);

413 
thªad
=0;thªad<
thªadno
;thread++)

415 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

416 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

422 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
l
Ë>t›[1].
hﬁd
.
size
.
‰ames
) &&

423 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
r
Ë>t›[1].
hﬁd
.
size
.
‰ames
))

424 
	`£m_po°
 (&
t›
[1].
sync
.
buf
.
£m
);

429 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

430 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

434 
	`rögb_Êﬂt_ªad
 (
t›
[0].
jack
.
rög
.
o
.
l
, 
ouçut
[2], 
n‰ames
);

435 
	`rögb_Êﬂt_ªad
 (
t›
[0].
jack
.
rög
.
o
.
r
, 
ouçut
[3], 
n‰ames
);

441 
thªad
=0;thªad<
thªadno
;thread++)

443 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

444 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

452 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

453 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
r
Ë>
n‰ames
) &&

454 (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

455 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

457 
REAL
 *
l0
 = 
öput
[0];

458 
REAL
 *
r0
 = 
öput
[1];

459 
REAL
 *
l2
 = 
öput
[4];

460 
REAL
 *
r2
 = 
öput
[5];

461 
i
=0;i<
n‰ames
;i++) {

462 
COMPLEX
 
A
 = 
	`Cm∂x
(
l0
[
i
],
r0
[i]);

463 
COMPLEX
 
B
 = 
	`Cm∂x
(
l2
[
i
],
r2
[i]);

464 
A
 = 
	`Cs˛
(
	`Cadd
(A,
	`Cmul
(
B
,
divîsôy
.
sˇœr
)),divîsôy.
gaö
);

465 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
l
, &
A
.
ª
, 1);

466 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
r
, &
A
.
im
, 1);

475 
thªad
=0;thªad<
thªadno
;thread++)

477 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

478 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

484 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
l
Ë>t›[0].
hﬁd
.
size
.
‰ames
) &&

485 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
r
Ë>t›[0].
hﬁd
.
size
.
‰ames
))

486 
	`£m_po°
 (&
t›
[0].
sync
.
buf
.
£m
);

493 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

494 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

498 
	`rögb_Êﬂt_ªad
 (
t›
[2].
jack
.
rög
.
o
.
l
, 
ouçut
[4], 
n‰ames
);

499 
	`rögb_Êﬂt_ªad
 (
t›
[2].
jack
.
rög
.
o
.
r
, 
ouçut
[5], 
n‰ames
);

505 
thªad
=0;thªad<
thªadno
;thread++)

507 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

508 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

514 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

515 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

517 
	`rögb_Êﬂt_wrôe
 (
t›
[2].
jack
.
rög
.
i
.
l
, 
öput
[4], 
n‰ames
);

518 
	`rögb_Êﬂt_wrôe
 (
t›
[2].
jack
.
rög
.
i
.
r
, 
öput
[5], 
n‰ames
);

523 
thªad
=0;thªad<
thªadno
;thread++)

525 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

526 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

532 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>t›[2].
hﬁd
.
size
.
‰ames
) &&

533 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>t›[2].
hﬁd
.
size
.
‰ames
))

534 
	`£m_po°
 (&
t›
[2].
sync
.
buf
.
£m
);

538 
thªad
=0;Åhªad<
thªadno
;Åhread++)

540 
l
=2*
thªad
, 
r
 = 2*thread+1;

541 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

542 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

546 
	`rögb_Êﬂt_ªad
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
, 
ouçut
[l], 
n‰ames
);

547 
	`rögb_Êﬂt_ªad
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
, 
ouçut
[r], 
n‰ames
);

553 
thªad
=0;thªad<
thªadno
;thread++)

555 
	`mem£t
 (
ouçut
[2*
thªad
 ], 0, 
n‰ames
 *  ());

556 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

562 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

563 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

565 i‡(
divîsôy
.
Êag
 && (
thªad
 == 0)) {

566 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

567 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

569 
REAL
 *
l0
 = 
öput
[0];

570 
REAL
 *
r0
 = 
öput
[1];

571 
REAL
 *
l2
 = 
öput
[4];

572 
REAL
 *
r2
 = 
öput
[5];

573 
i
=0;i<
n‰ames
;i++) {

574 
COMPLEX
 
A
 = 
	`Cm∂x
(
l0
[
i
],
r0
[i]);

575 
COMPLEX
 
B
 = 
	`Cm∂x
(
l2
[
i
],
r2
[i]);

576 
A
 = 
	`Cs˛
(
	`Cadd
(A,
	`Cmul
(
B
,
divîsôy
.
sˇœr
)),divîsôy.
gaö
);

577 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
l
, &
A
.
ª
, 1);

578 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
r
, &
A
.
im
, 1);

585 
thªad
=0;thªad<
thªadno
;thread++)

587 
	`mem£t
 (
ouçut
[2*
thªad
 ], 0, 
n‰ames
 *  ());

588 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

593 
	`rögb_Êﬂt_wrôe
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
, 
öput
[l], 
n‰ames
);

594 
	`rögb_Êﬂt_wrôe
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
, 
öput
[r], 
n‰ames
);

603 
thªad
=0;thªad<
thªadno
;thread++)

605 
	`mem£t
 (
ouçut
[2*
thªad
 ], 0, 
n‰ames
 *  ());

606 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

612 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
Ë>t›[thªad].
hﬁd
.
size
.
‰ames
) &&

613 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
Ë>t›[thªad].
hﬁd
.
size
.
‰ames
))

614 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
buf
.
£m
);

622 
DâSP_EXP
 

623 
	`¥o˚ss_ßm∂es_thªad
 (
¥oc_thªad
)

625 
t›
[
¥oc_thªad
].
ru¬ög
)

627 
	`£m_waô
 (&
t›
[
¥oc_thªad
].
sync
.
buf
.
£m
);

628 
	`gëhﬁd
(
¥oc_thªad
))

630 
	`£m_waô
 (&
t›
[
¥oc_thªad
].
sync
.
upd
.
£m
);

631 
t›
[
¥oc_thªad
].
°©e
)

633 
RUN_MUTE
:

634 
	`run_muã
 (
¥oc_thªad
);

636 
RUN_PASS
:

637 
	`run_∑ss
 (
¥oc_thªad
);

639 
RUN_PLAY
:

640 
	`run_∂ay
 (
¥oc_thªad
);

642 
RUN_SWCH
:

643 
	`run_swch
 (
¥oc_thªad
);

646 
	`£m_po°
 (&
t›
[
¥oc_thªad
].
sync
.
upd
.
£m
);

647 
	`puthﬁd
 (
¥oc_thªad
);

655 
	`˛o£up
 ()

657 
thªad
;

658 
thªad
 = 0;Åhread<3;thread++)

660 
t›
[
thªad
].
ru¬ög
 = 
FALSE
;

661 
t›
[
thªad
].
su•
 = 
TRUE
;

663 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
l
);

664 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
);

665 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
l
);

666 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
r
);

668 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
);

669 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
);

670 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

671 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

673 
	`de°roy_w‹k•a˚
 (
thªad
);

681 
PRIVATE
 

682 
	`£tup_loˇl_audio
 (
thªad
)

684 
t›
[
thªad
].
hﬁd
.
size
.
‰ames
 = 
uni
[thªad].
buÊí
;

685 
t›
[
thªad
].
hﬁd
.
size
.
byãs
 =Å›[thªad].hﬁd.size.
‰ames
 *  ();

686 
t›
[
thªad
].
hﬁd
.
buf
.
l
 =

687 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

689 
t›
[
thªad
].
hﬁd
.
buf
.
r
 =

690 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

692 
t›
[
thªad
].
hﬁd
.
aux
.
l
 =

693 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

695 
t›
[
thªad
].
hﬁd
.
aux
.
r
 =

696 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

701 
PRIVATE
 

702 
	`£tup_sy°em_audio
 (
thªad
)

705 
	`•rötf
 (
t›
[
thªad
].
jack
.
«me
, "sdr-%d-%0u",Å›[thªad].
pid
,thread);

706 
t›
[
thªad
].
jack
.
size
 = 1024;

708 
	`mem£t
 ((*Ë&
t›
[
thªad
].
jack
.
blow
, 0,  (top[thread].jack.blow));

709 
t›
[
thªad
].
jack
.
rög
.
i
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

710 
t›
[
thªad
].
jack
.
rög
.
i
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

711 
t›
[
thªad
].
jack
.
rög
.
o
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

712 
t›
[
thªad
].
jack
.
rög
.
o
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

713 
t›
[
thªad
].
jack
.
auxr
.
i
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

714 
t›
[
thªad
].
jack
.
auxr
.
i
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

715 
t›
[
thªad
].
jack
.
auxr
.
o
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

716 
t›
[
thªad
].
jack
.
auxr
.
o
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

717 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

718 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

721 
PRIVATE
 

722 
	`£tup_thªadög
 (
thªad
)

724 
t›
[
thªad
].
su•
 = 
FALSE
;

725 
	`£m_öô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
, 0, 0);

726 
	`£m_öô
 (&
t›
[
thªad
].
sync
.
buf
.
£m
, 0, 0);

727 
	`±hªad_¸óã
((
±hªad_t
*)&
t›
[
thªad
].
pid
, 0, (*Ë
¥o˚ss_ßm∂es_thªad
, (*)thread);

733 
PRIVATE
 

734 
	`£tup_deÁu…s
 (
thªad
)

737 
loc
[
thªad
].
«me
[0] = 0;

738 
	`•rötf
 (
loc
[
thªad
].
∑th
.
rcfûe
, "%s%0lu_%0u", 
RCBASE
, 
t›
[thªad].
pid
,thread);

739 
	`•rötf
 (
loc
[
thªad
].
∑th
.
∑rm
, "%s%0lu_%0u", 
PARMPATH
, 
t›
[thªad].
pid
,thread);

740 
	`•rötf
 (
loc
[
thªad
].
∑th
.
mëî
, "%s%0lu_%0u", 
METERPATH
, 
t›
[thªad].
pid
,thread);

741 
	`•rötf
 (
loc
[
thªad
].
∑th
.
•ec
, "%s%0lu_%0u", 
SPECPATH
, 
t›
[thªad].
pid
,thread);

742 
	`•rötf
 (
loc
[
thªad
].
∑th
.
wisdom
, "%s%0lu_%0u", 
WISDOMPATH
, 
t›
[thªad].
pid
,thread);

743 
loc
[
thªad
].
def
.
øã
 = 
DEFRATE
;

744 
loc
[
thªad
].
def
.
size
 = 
DEFSIZE
;

745 
loc
[
thªad
].
def
.
ƒx
 = 
MAXRX
;

746 
loc
[
thªad
].
def
.
mode
 = 
DEFMODE
;

747 
loc
[
thªad
].
def
.
•ec
 = 
DEFSPEC
;

748 
loc
[
thªad
].
mu…
.
rög
 = 
RINGMULT
;

749 
loc
[
thªad
].
def
.
comp
 = 
DEFCOMP
;

754 
	`£tup
 (*
≠p_d©a_∑th
)

756 
thªad
;

758 
divîsôy
.
gaö
 = 1;

759 
divîsôy
.
Êag
 = 
FALSE
;

760 
divîsôy
.
sˇœr
 = 
cxzîo
;

762 
APP_DATA_PATH
=
≠p_d©a_∑th
;

763 
thªad
=0;thread<3;thread++)

765 
t›
[
thªad
].
pid
 = 
	`gëpid
();

766 
t›
[
thªad
].
uid
 = 0L;

767 
t›
[
thªad
].
°¨t_tv
 = 
	`now_tv
 ();

768 
t›
[
thªad
].
ru¬ög
 = 
TRUE
;

769 
t›
[
thªad
].
vîbo£
 = 
FALSE
;

770 
t›
[
thªad
].
°©e
 = 
RUN_PLAY
;

771 
t›
[
thªad
].
off£t
 = 0;

772 
t›
[
thªad
].
jack
.
ª£t_size
 = 1024;

773 
ª£t_em
 =
TRUE
;

774 
	`£tup_deÁu…s
 (
thªad
);

775 
	`°r˝y
(
loc
[
thªad
].
∑th
.
wisdom
,
≠p_d©a_∑th
);

778 
uni
[
thªad
].
mëî
.
Êag
 = 
TRUE
;

779 
uni
[
thªad
].
•ec
.
Êag
 = 
TRUE
;

780 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

781 
t›
[
thªad
].
swch
.
ív
.
°dy
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.050);

782 
t›
[
thªad
].
swch
.
ív
.
ri£
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

785 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

786 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

787 
t›
[
thªad
].
swch
.
ív
.
ri£
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ri£.
size
;

788 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ÁŒ.
size
;

791 
	`£tup_w‹k•a˚
 (
loc
[
thªad
].
def
.
øã
,

792 
loc
[
thªad
].
def
.
size
,

793 
loc
[
thªad
].
def
.
mode
,

794 
≠p_d©a_∑th
, 
loc
[
thªad
].
def
.
•ec
,Üoc[thªad].def.
ƒx
,Üoc[thªad].def.
comp
,Åhread);

797 
	`£tup_loˇl_audio
 (
thªad
);

799 
	`£tup_sy°em_audio
 (
thªad
);

802 
	`£tup_thªadög
 (
thªad
);

806 
uni
[
thªad
].
•ec
.
Êag
 = 
TRUE
;

807 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

808 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

809 
uni
[
thªad
].
•ec
.
rxk
 = 0;

810 
	`ª£t_mëîs
 (
thªad
);

811 
	`ª£t_•e˘rum
 (
thªad
);

812 
	`ª£t_cou¡îs
 (
thªad
);

813 
	`Ârötf
(
°dîr
,"£tu∞sd∏thªad %0u: d⁄e\n",
thªad
),
	`fÊush
(stderr);

817 
BOOLEAN
 
ª£t_buÊí
 = 
FALSE
;

819 
	`ª£t_f‹_buÊí
 (
thªad
, 
√w_buÊí
)

822 i‡(
	`p›˙t
 (
√w_buÊí
) != 1)

824 
ª£t_buÊí
 = 
TRUE
;

825 
uni
[
thªad
].
buÊí
 = 
√w_buÊí
;

826 
t›
[
thªad
].
jack
.
ª£t_size
 = 
√w_buÊí
;

827 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
r
);

828 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
l
);

829 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
r
);

830 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
l
);

832 
	`de°roy_w‹k•a˚
 (
thªad
);

833 
ª£t_buÊí
 = 
FALSE
;

834 
loc
[
thªad
].
def
.
size
 = 
√w_buÊí
;

835 
	`£tup_w‹k•a˚
 (
loc
[
thªad
].
def
.
øã
,

836 
loc
[
thªad
].
def
.
size
,

837 
loc
[
thªad
].
def
.
mode
,

838 
APP_DATA_PATH
, 
loc
[
thªad
].
def
.
•ec
,Üoc[thªad].def.
ƒx
,Üoc[thªad].def.
size
,Åhread);

840 
	`£tup_loˇl_audio
 (
thªad
);

842 
	`ª£t_mëîs
 (
thªad
);

843 
	`ª£t_•e˘rum
 (
thªad
);

844 
	`ª£t_cou¡îs
 (
thªad
);

850 
	`ª£t_f‹_ßm∂î©e
 (
REAL
 
√w_ßm∂î©e
)

852 
thªad
;

854 
thªad
=0;Åhread<3;Åhread++)

856 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
r
);

857 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
l
);

858 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
r
);

859 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
l
);

860 
	`de°roy_w‹k•a˚
 (
thªad
);

862 
loc
[
thªad
].
def
.
øã
 = 
uni
[thªad].
ßm∂î©e
 = 
√w_ßm∂î©e
;

863 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

864 
t›
[
thªad
].
swch
.
ív
.
°dy
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.050);

865 
t›
[
thªad
].
swch
.
ív
.
ri£
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

866 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

867 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

868 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ÁŒ.
size
;

869 
t›
[
thªad
].
swch
.
ív
.
ri£
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ri£.
size
;

870 
	`£tup_w‹k•a˚
 (
loc
[
thªad
].
def
.
øã
,

871 
loc
[
thªad
].
def
.
size
,

872 
loc
[
thªad
].
def
.
mode
,

873 
APP_DATA_PATH
, 
loc
[
thªad
].
def
.
•ec
,Üoc[thªad].def.
ƒx
,Üoc[thªad].def.
size
,thread);

874 
	`£tup_loˇl_audio
 (
thªad
);

876 
	`ª£t_mëîs
 (
thªad
);

877 
	`ª£t_•e˘rum
 (
thªad
);

878 
	`ª£t_cou¡îs
 (
thªad
);

	@wscompand.c

35 
	~<wscom∑nd.h
>

37 
PRIVATE
 
INLINE
 
REAL


38 
	$WSCLookup
 (
WSCom∑ndî
 
wsc
, 
REAL
 
x
)

40 i‡(
x
 > 0.0)

44 
i
 = (Ë(
x
 * 
wsc
->
≈ts
), 
íd
 = wsc->
√nd
;

45 
REAL
 
d
 = 
x
 * 
wsc
->
≈ts
 - 
i
, 
y
, *
tbl
 = wsc->tbl;

47 i‡(
i
 < 
íd
)

48 
y
 = 
tbl
[
i
] + 
d
 * (tbl[i + 1] -Åbl[i]);

50 
y
 = 
tbl
[
íd
];

51  
y
 / 
x
;

57 
	}
}

60 
	$WSCom∑nd
 (
WSCom∑ndî
 
wsc
)

62 
i
, 
n
 = 
	`CXBsize
 (
wsc
->
buff
);

64 i‡(
wsc
->
Ác
 != 0.0)

66 
i
 = 0; i < 
n
 ; i++)

68 
COMPLEX
 
vÆ
 = 
	`CXBd©a
 (
wsc
->
buff
, 
i
);

69 
REAL
 
mag
 = 
	`Cmag
 (
vÆ
), 
s˛
 = 
	`WSCLookup
 (
wsc
, mag);

70 
	`CXBd©a
 (
wsc
->
buff
, 
i
Ë
	`Cs˛
 (
vÆ
,
s˛
);

73 
	}
}

76 
	$WSCRe£t
 (
WSCom∑ndî
 
wsc
, 
REAL
 
Ác
)

78 
i
;

79 
REAL
 *
tbl
 = 
wsc
->tbl;

81 i‡(
Ác
 == 0.0)

83 
i
 = 0; i < 
wsc
->
≈ts
; i++)

84 
tbl
[
i
] = i / (
REAL
Ë
wsc
->
√nd
;

88 
REAL
 
dñ
 = 
Ác
 / 
wsc
->
√nd
, 
s˛
 = (REALË(1.0 - 
	`exp
 (fac));

89 
i
 = 0; i < 
wsc
->
≈ts
; i++)

90 
tbl
[
i
] = (
REAL
Ë((1.0 - 
	`exp
 (ò* 
dñ
)Ë/ 
s˛
);

92 
wsc
->
Ác
 = fac;

93 
	}
}

98 
WSCom∑ndî


99 
	$√wWSCom∑ndî
 (
≈ts
, 
REAL
 
Ác
, 
CXB
 
buff
)

101 
WSCom∑ndî
 
wsc
;

103 
wsc
 = (
WSCom∑ndî
Ë
	`ß„Æloc
 (1,

104  (
WSCom∑ndîInfo
),

106 
wsc
->
≈ts
 =Çpts;

107 
wsc
->
√nd
 = 
≈ts
 - 1;

108 
wsc
->
tbl
 = 
	`√wvec_REAL
 (
≈ts
, "WSCompanderÅable");

109 
wsc
->
buff
 = 
	`√wCXB
 (
	`CXBsize
 (buff), 
	`CXBba£
 (buff), "WSCompander buff");

110 
	`WSCRe£t
 (
wsc
, 
Ác
);

111  
wsc
;

112 
	}
}

115 
	$dñWSCom∑ndî
 (
WSCom∑ndî
 
wsc
)

117 i‡(
wsc
)

119 
	`dñvec_REAL
 (
wsc
->
tbl
);

120 
	`dñCXB
 (
wsc
->
buff
);

121 
	`ß„‰ì
 ((*Ë
wsc
);

123 
	}
}

	@wscompand.h

34 #i‚de‡
_wscom∑nd_h


35 
	#_wscom∑nd_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

45 
	s_wscom∑ndî


47 
	m≈ts
, 
	m√nd
;

48 
REAL
 
	mÁc
, *
	mtbl
;

49 
CXB
 
	mbuff
;

50 } 
	tWSCom∑ndîInfo
, *
	tWSCom∑ndî
;

52 
WSCom∑nd
 (
WSCom∑ndî
 
wsc
);

57 
WSCRe£t
 (
WSCom∑ndî
 
wsc
, 
REAL
 
Ác
);

58 
WSCom∑ndî
 
√wWSCom∑ndî
 (
≈ts
, 
REAL
 
Ác
, 
CXB
 
buff
);

59 
dñWSCom∑ndî
 (
WSCom∑ndî
 
wsc
);

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 
__BEGIN_DECLS


67 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

68 
__löe
, c⁄° *
__fun˘i⁄
)

69 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

72 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

73 
__löe
, c⁄° *
__fun˘i⁄
)

74 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

79 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

80 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

83 
__END_DECLS


85 
	#as£π
(
ex¥
) \

86 ((
ex¥
) \

87 ? 
	`__ASSERT_VOID_CAST
 (0) \

88 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

90 #ifdef 
__USE_GNU


91 
	#as£π_≥º‹
(
î∫um
) \

92 (!(
î∫um
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

102 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

103 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

105 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

106 
	#__ASSERT_FUNCTION
 
__func__


	)

108 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

115 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


116 #unde‡
°©ic_as£π


117 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

147 #ifde‡
__USE_ATFILE


148 
	#AT_FDCWD
 -100

	)

151 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

152 
	#AT_REMOVEDIR
 0x200

	)

154 
	#AT_SYMLINK_FOLLOW
 0x400

	)

155 #ifde‡
__USE_GNU


156 
	#AT_NO_AUTOMOUNT
 0x800

	)

158 
	#AT_EMPTY_PATH
 0x1000

	)

160 
	#AT_EACCESS
 0x200

	)

169 
f˙é
 (
__fd
, 
__cmd
, ...);

178 #i‚de‡
__USE_FILE_OFFSET64


179 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

181 #ifde‡
__REDIRECT


182 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

183 
	`__n⁄nuŒ
 ((1));

185 
	#›í
 
›í64


	)

188 #ifde‡
__USE_LARGEFILE64


189 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

192 #ifde‡
__USE_ATFILE


202 #i‚de‡
__USE_FILE_OFFSET64


203 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

204 
	`__n⁄nuŒ
 ((2));

206 #ifde‡
__REDIRECT


207 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

208 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

210 
	#›í©
 
›í©64


	)

213 #ifde‡
__USE_LARGEFILE64


214 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

215 
	`__n⁄nuŒ
 ((2));

224 #i‚de‡
__USE_FILE_OFFSET64


225 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

227 #ifde‡
__REDIRECT


228 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

229 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

231 
	#¸ót
 
¸ót64


	)

234 #ifde‡
__USE_LARGEFILE64


235 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

238 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

239 && !
deföed
 
__USE_POSIX
))

248 
	#F_ULOCK
 0

	)

249 
	#F_LOCK
 1

	)

250 
	#F_TLOCK
 2

	)

251 
	#F_TEST
 3

	)

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

256 #ifde‡
__REDIRECT


257 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

259 
	#lockf
 
lockf64


	)

262 #ifde‡
__USE_LARGEFILE64


263 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

267 #ifde‡
__USE_XOPEN2K


270 #i‚de‡
__USE_FILE_OFFSET64


271 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

272 
__advi£
Ë
__THROW
;

274 #ifde‡
__REDIRECT_NTH


275 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

276 
__off64_t
 
__Àn
, 
__advi£
),

277 
posix_Ádvi£64
);

279 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

282 #ifde‡
__USE_LARGEFILE64


283 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

284 
__advi£
Ë
__THROW
;

292 #i‚de‡
__USE_FILE_OFFSET64


293 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

295 #ifde‡
__REDIRECT


296 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

297 
__off64_t
 
__Àn
),

298 
posix_ÁŒoˇã64
);

300 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

303 #ifde‡
__USE_LARGEFILE64


304 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

310 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

311 && 
deföed
 
__va_¨g_∑ck_Àn


312 
	~<bôs/f˙é2.h
>

315 
__END_DECLS


	@/usr/include/linux/rtc.h

11 #i‚de‡
_LINUX_RTC_H_


12 
	#_LINUX_RTC_H_


	)

20 
	sπc_time
 {

21 
	mtm_£c
;

22 
	mtm_mö
;

23 
	mtm_hour
;

24 
	mtm_mday
;

25 
	mtm_m⁄
;

26 
	mtm_yór
;

27 
	mtm_wday
;

28 
	mtm_yday
;

29 
	mtm_isd°
;

36 
	sπc_wkÆrm
 {

37 
	míabÀd
;

38 
	m≥ndög
;

39 
πc_time
 
	mtime
;

55 
	sπc_∂l_öfo
 {

56 
	m∂l_˘æ
;

57 
	m∂l_vÆue
;

58 
	m∂l_max
;

59 
	m∂l_mö
;

60 
	m∂l_posmu…
;

61 
	m∂l_√gmu…
;

62 
	m∂l_˛ock
;

70 
	#RTC_AIE_ON
 
	`_IO
('p', 0x01Ë

	)

71 
	#RTC_AIE_OFF
 
	`_IO
('p', 0x02Ë

	)

72 
	#RTC_UIE_ON
 
	`_IO
('p', 0x03Ë

	)

73 
	#RTC_UIE_OFF
 
	`_IO
('p', 0x04Ë

	)

74 
	#RTC_PIE_ON
 
	`_IO
('p', 0x05Ë

	)

75 
	#RTC_PIE_OFF
 
	`_IO
('p', 0x06Ë

	)

76 
	#RTC_WIE_ON
 
	`_IO
('p', 0x0fË

	)

77 
	#RTC_WIE_OFF
 
	`_IO
('p', 0x10Ë

	)

79 
	#RTC_ALM_SET
 
	`_IOW
('p', 0x07, 
πc_time
Ë

	)

80 
	#RTC_ALM_READ
 
	`_IOR
('p', 0x08, 
πc_time
Ë

	)

81 
	#RTC_RD_TIME
 
	`_IOR
('p', 0x09, 
πc_time
Ë

	)

82 
	#RTC_SET_TIME
 
	`_IOW
('p', 0x0a, 
πc_time
Ë

	)

83 
	#RTC_IRQP_READ
 
	`_IOR
('p', 0x0b, Ë

	)

84 
	#RTC_IRQP_SET
 
	`_IOW
('p', 0x0c, Ë

	)

85 
	#RTC_EPOCH_READ
 
	`_IOR
('p', 0x0d, Ë

	)

86 
	#RTC_EPOCH_SET
 
	`_IOW
('p', 0x0e, Ë

	)

88 
	#RTC_WKALM_SET
 
	`_IOW
('p', 0x0f, 
πc_wkÆrm
)

	)

89 
	#RTC_WKALM_RD
 
	`_IOR
('p', 0x10, 
πc_wkÆrm
)

	)

91 
	#RTC_PLL_GET
 
	`_IOR
('p', 0x11, 
πc_∂l_öfo
Ë

	)

92 
	#RTC_PLL_SET
 
	`_IOW
('p', 0x12, 
πc_∂l_öfo
Ë

	)

94 
	#RTC_VL_READ
 
	`_IOR
('p', 0x13, Ë

	)

95 
	#RTC_VL_CLR
 
	`_IO
('p', 0x14Ë

	)

98 
	#RTC_IRQF
 0x80

	)

99 
	#RTC_PF
 0x40

	)

100 
	#RTC_AF
 0x20

	)

101 
	#RTC_UF
 0x10

	)

104 
	#RTC_MAX_FREQ
 8192

	)

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

81 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

82 
	~<bôs/m©hˇŒs.h
>

83 #unde‡
_MdoubÀ_


84 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


85 #unde‡
_MdoubÀ_END_NAMESPACE


86 #unde‡
__MATH_PRECNAME


88 #ifde‡
__USE_ISOC99


94 #i‚de‡
_MÊﬂt_


95 
	#_MÊﬂt_
 

	)

97 
	#_MdoubÀ_
 
_MÊﬂt_


	)

98 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

99 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

100 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

101 
	~<bôs/m©hˇŒs.h
>

102 #unde‡
_MdoubÀ_


103 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


104 #unde‡
_MdoubÀ_END_NAMESPACE


105 #unde‡
__MATH_PRECNAME


107 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

108 || 
deföed
 
__LDBL_COMPAT
 \

109 || 
deföed
 
_LIBC_TEST


110 #ifde‡
__LDBL_COMPAT


112 #ifde‡
__USE_ISOC99


113 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

114 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

115 #ifde‡
__REDIRECT_NTH


116 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

117 
__∆dbl_√xâow¨df
)

118 
	`__©åibuã__
 ((
__c⁄°__
));

119 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

120 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

121 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

122 (
__x
, 
__y
),

123 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

127 #unde‡
__MATHDECL_1


128 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

129 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

130 
¨gs
, 
Æüs
)

	)

131 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

132 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

138 #i‚de‡
_Ml⁄g_doubÀ_


139 
	#_Ml⁄g_doubÀ_
 

	)

141 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

142 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	#__MATH_DECLARE_LDOUBLE
 1

	)

146 
	~<bôs/m©hˇŒs.h
>

147 #unde‡
_MdoubÀ_


148 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


149 #unde‡
_MdoubÀ_END_NAMESPACE


150 #unde‡
__MATH_PRECNAME


155 #unde‡
__MATHDECL_1


156 #unde‡
__MATHDECL


157 #unde‡
__MATHCALL


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


162 
signgam
;

167 #ifde‡
__USE_ISOC99


205 
FP_NAN
 =

206 
	#FP_NAN
 0

	)

207 
FP_NAN
,

208 
FP_INFINITE
 =

209 
	#FP_INFINITE
 1

	)

210 
FP_INFINITE
,

211 
FP_ZERO
 =

212 
	#FP_ZERO
 2

	)

213 
FP_ZERO
,

214 
FP_SUBNORMAL
 =

215 
	#FP_SUBNORMAL
 3

	)

216 
FP_SUBNORMAL
,

217 
FP_NORMAL
 =

218 
	#FP_NORMAL
 4

	)

219 
FP_NORMAL


223 #ifde‡
__NO_LONG_DOUBLE_MATH


224 
	#Â˛assify
(
x
) \

225 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

227 
	#Â˛assify
(
x
) \

228 ( (
x
) ==  () \

229 ? 
	`__Â˛assifyf
 (
x
) \

230 :  (
x
) ==  () \

231 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

235 #ifde‡
__NO_LONG_DOUBLE_MATH


236 
	#signbô
(
x
) \

237 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

239 
	#signbô
(
x
) \

240 ( (
x
) ==  () \

241 ? 
	`__signbôf
 (
x
) \

242 :  (
x
) ==  () \

243 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

247 #ifde‡
__NO_LONG_DOUBLE_MATH


248 
	#isföôe
(
x
) \

249 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

251 
	#isföôe
(
x
) \

252 ( (
x
) ==  () \

253 ? 
	`__föôef
 (
x
) \

254 :  (
x
) ==  () \

255 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

259 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

263 #ifde‡
__NO_LONG_DOUBLE_MATH


264 
	#i¢™
(
x
) \

265 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

267 
	#i¢™
(
x
) \

268 ( (
x
) ==  () \

269 ? 
	`__i¢™f
 (
x
) \

270 :  (
x
) ==  () \

271 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

275 #ifde‡
__NO_LONG_DOUBLE_MATH


276 
	#isöf
(
x
) \

277 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

279 
	#isöf
(
x
) \

280 ( (
x
) ==  () \

281 ? 
	`__isöff
 (
x
) \

282 :  (
x
) ==  () \

283 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

287 
	#MATH_ERRNO
 1

	)

288 
	#MATH_ERREXCEPT
 2

	)

293 #i‚de‡
__FAST_MATH__


294 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

299 #ifde‡
__USE_GNU


301 #ifde‡
__NO_LONG_DOUBLE_MATH


302 
	#issig«lög
(
x
) \

303 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

305 
	#issig«lög
(
x
) \

306 ( (
x
) ==  () \

307 ? 
	`__issig«lögf
 (
x
) \

308 :  (
x
) ==  () \

309 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

313 #ifdef 
__USE_MISC


317 
_IEEE_
 = -1,

318 
_SVID_
,

319 
_XOPEN_
,

320 
_POSIX_
,

321 
_ISOC_


322 } 
	t_LIB_VERSION_TYPE
;

327 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

331 #ifde‡
__USE_MISC


337 #ifde‡
__˝lu•lus


338 
__ex˚±i⁄


340 
ex˚±i⁄


343 
ty≥
;

344 *
«me
;

345 
¨g1
;

346 
¨g2
;

347 
ªtvÆ
;

348 
	}
};

350 #ifde‡
__˝lu•lus


351 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

353 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

356 
	#X_TLOSS
 1.41484755040568800000e+16

	)

359 
	#DOMAIN
 1

	)

360 
	#SING
 2

	)

361 
	#OVERFLOW
 3

	)

362 
	#UNDERFLOW
 4

	)

363 
	#TLOSS
 5

	)

364 
	#PLOSS
 6

	)

367 
	#HUGE
 3.40282347e+38F

	)

371 #ifde‡
__USE_XOPEN


373 
	#MAXFLOAT
 3.40282347e+38F

	)

380 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


381 
	#M_E
 2.7182818284590452354

	)

382 
	#M_LOG2E
 1.4426950408889634074

	)

383 
	#M_LOG10E
 0.43429448190325182765

	)

384 
	#M_LN2
 0.69314718055994530942

	)

385 
	#M_LN10
 2.30258509299404568402

	)

386 
	#M_PI
 3.14159265358979323846

	)

387 
	#M_PI_2
 1.57079632679489661923

	)

388 
	#M_PI_4
 0.78539816339744830962

	)

389 
	#M_1_PI
 0.31830988618379067154

	)

390 
	#M_2_PI
 0.63661977236758134308

	)

391 
	#M_2_SQRTPI
 1.12837916709551257390

	)

392 
	#M_SQRT2
 1.41421356237309504880

	)

393 
	#M_SQRT1_2
 0.70710678118654752440

	)

399 #ifde‡
__USE_GNU


400 
	#M_El
 2.718281828459045235360287471352662498L

	)

401 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

402 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

403 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

404 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

405 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

406 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

407 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

408 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

409 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

410 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

411 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

412 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

419 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


420 
	#__NO_MATH_INLINES
 1

	)

423 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

430 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

431 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

432 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

433 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

434 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

435 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

439 #ifde‡
__USE_EXTERN_INLINES


440 
	~<bôs/m©hölöe.h
>

445 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

446 
	~<bôs/m©h-föôe.h
>

449 #ifde‡
__USE_ISOC99


453 #i‚de‡
isgª©î


454 
	#isgª©î
(
x
, 
y
) \

455 (
__exãnsi⁄__
 \

456 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

457 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

461 #i‚de‡
isgª©îequÆ


462 
	#isgª©îequÆ
(
x
, 
y
) \

463 (
__exãnsi⁄__
 \

464 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

465 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

469 #i‚de‡
i¶ess


470 
	#i¶ess
(
x
, 
y
) \

471 (
__exãnsi⁄__
 \

472 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

473 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

477 #i‚de‡
i¶es£quÆ


478 
	#i¶es£quÆ
(
x
, 
y
) \

479 (
__exãnsi⁄__
 \

480 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

481 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

485 #i‚de‡
i¶essgª©î


486 
	#i¶essgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

493 #i‚de‡
isun‹dîed


494 
	#isun‹dîed
(
u
, 
v
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

497 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

502 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #ifde‡
__USE_MISC


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #ifde‡
__USE_MISC


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_MISC


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifde‡
__USE_XOPEN2K


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #ifde‡
__USE_MISC


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #ifde‡
__USE_MISC


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #ifde‡
__USE_MISC


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #ifde‡
__USE_MISC


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #ifde‡
__USE_MISC


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

533 #i‚de‡
__USE_KERNEL_IPV6_DEFS


535 
	sö6_pktöfo


537 
ö6_addr
 
ùi6_addr
;

538 
ùi6_ifödex
;

542 
	sù6_mtuöfo


544 
sockaddr_ö6
 
ù6m_addr
;

545 
uöt32_t
 
ù6m_mtu
;

550 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

551 
__THROW
 
__©åibuã_dïªˇãd__
;

552 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

553 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

555 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

556 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

557 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

558 
__mu…x
, 
__∂usy
)

559 
__THROW
 
__©åibuã_dïªˇãd__
;

560 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

561 
uöt8_t
 **
__çåp
)

562 
__THROW
 
__©åibuã_dïªˇãd__
;

563 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

564 
uöt8_t
 **
__çåp
, 
__ty≥
)

565 
__THROW
 
__©åibuã_dïªˇãd__
;

569 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

570 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

571 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

572 **
__d©abuÂ
Ë
__THROW
;

573 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

574 
__THROW
;

575 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

576 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

577 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

578 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

579 **
__d©abuÂ
Ë
__THROW
;

580 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

581 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

582 **
__d©abuÂ
Ë
__THROW
;

583 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

584 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

588 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

589 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

590 
__£gmíts
Ë
__THROW
;

591 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

592 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

593 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

594 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

595 
__THROW
;

601 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

602 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

603 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

604 
__THROW
;

607 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

608 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

609 
uöt32_t
 
__num§c
,

610 c⁄° 
ö_addr
 *
__¶i°
)

611 
__THROW
;

615 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

616 c⁄° 
sockaddr
 *
__group
,

617 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

618 
uöt32_t
 *
__num§c
,

619 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

622 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

623 c⁄° 
sockaddr
 *
__group
,

624 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

625 
uöt32_t
 
__num§c
,

626 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

629 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 
__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_MISC


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‚de‡
NCARGS


54 #ifde‡
ARG_MAX


55 
	#NCARGS
 
ARG_MAX


	)

59 
	#NCARGS
 
INT_MAX


	)

65 #i‚de‡
NOGROUP


66 
	#NOGROUP
 65535

	)

68 #i‚de‡
NODEV


69 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

74 #i‚de‡
DEV_BSIZE


75 
	#DEV_BSIZE
 512

	)

80 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

81 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

82 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

83 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

86 #i‚de‡
howm™y


87 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

89 #ifde‡
__GNUC__


90 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

91 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

92 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

94 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

96 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

99 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

100 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<sys/uio.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

29 #ifde‡
__USE_GNU


31 
	~<bôs/sig£t.h
>

38 
	~<bôs/sockë.h
>

40 #ifde‡
__USE_MISC


43 
	sosockaddr


45 
	mß_Ámûy
;

46 
	mß_d©a
[14];

54 
	mSHUT_RD
 = 0,

55 
	#SHUT_RD
 
SHUT_RD


	)

56 
	mSHUT_WR
,

57 
	#SHUT_WR
 
SHUT_WR


	)

58 
	mSHUT_RDWR


59 
	#SHUT_RDWR
 
SHUT_RDWR


	)

68 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


69 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

70 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

74 
	#__SOCKADDR_ALLTYPES
 \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

89 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

90 uni⁄ { 
	m__SOCKADDR_ALLTYPES


91 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

92 #unde‡
__SOCKADDR_ONETYPE


93 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

94 uni⁄ { 
	m__SOCKADDR_ALLTYPES


95 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

96 #unde‡
__SOCKADDR_ONETYPE


99 #ifde‡
__USE_GNU


101 
	smmsghdr


103 
msghdr
 
	mmsg_hdr
;

104 
	mmsg_Àn
;

113 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

119 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

120 
__fds
[2]Ë
__THROW
;

123 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

124 
__THROW
;

127 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

128 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

141 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

142 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

149 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

156 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

163 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 
__addr_Àn
);

174 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

175 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

176 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

184 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

185 
__Êags
);

187 #ifde‡
__USE_GNU


193 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

194 
__vÀn
, 
__Êags
);

202 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

204 #ifde‡
__USE_GNU


210 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

211 
__vÀn
, 
__Êags
,

212 
time•ec
 *
__tmo
);

219 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

220 *
__ª°ri˘
 
__›tvÆ
,

221 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

226 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

227 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

233 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

243 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

244 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

246 #ifde‡
__USE_GNU


251 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

252 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

261 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

264 #ifde‡
__USE_XOPEN2K


266 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

270 #ifde‡
__USE_MISC


274 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

279 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


280 
	~<bôs/sockë2.h
>

283 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_ATFILE


30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

33 #ifde‡
__USE_ATFILE


34 
	#__√ed_time•ec


	)

36 
	~<time.h
>

39 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


42 #i‚de‡
__dev_t_deföed


43 
__dev_t
 
	tdev_t
;

44 
	#__dev_t_deföed


	)

47 #i‚de‡
__gid_t_deföed


48 
__gid_t
 
	tgid_t
;

49 
	#__gid_t_deföed


	)

52 #i‚de‡
__öo_t_deföed


53 #i‚de‡
__USE_FILE_OFFSET64


54 
__öo_t
 
	töo_t
;

56 
__öo64_t
 
	töo_t
;

58 
	#__öo_t_deföed


	)

61 #i‚de‡
__mode_t_deföed


62 
__mode_t
 
	tmode_t
;

63 
	#__mode_t_deföed


	)

66 #i‚de‡
__∆ök_t_deföed


67 
__∆ök_t
 
	t∆ök_t
;

68 
	#__∆ök_t_deföed


	)

71 #i‚de‡
__off_t_deföed


72 #i‚de‡
__USE_FILE_OFFSET64


73 
__off_t
 
	toff_t
;

75 
__off64_t
 
	toff_t
;

77 
	#__off_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

86 #ifde‡
__USE_UNIX98


87 #i‚de‡
__blk˙t_t_deföed


88 #i‚de‡
__USE_FILE_OFFSET64


89 
__blk˙t_t
 
	tblk˙t_t
;

91 
__blk˙t64_t
 
	tblk˙t_t
;

93 
	#__blk˙t_t_deföed


	)

96 #i‚de‡
__blksize_t_deföed


97 
__blksize_t
 
	tblksize_t
;

98 
	#__blksize_t_deföed


	)

102 
	g__BEGIN_DECLS


104 
	~<bôs/°©.h
>

106 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


107 
	#S_IFMT
 
__S_IFMT


	)

108 
	#S_IFDIR
 
__S_IFDIR


	)

109 
	#S_IFCHR
 
__S_IFCHR


	)

110 
	#S_IFBLK
 
__S_IFBLK


	)

111 
	#S_IFREG
 
__S_IFREG


	)

112 #ifde‡
__S_IFIFO


113 
	#S_IFIFO
 
__S_IFIFO


	)

115 #ifde‡
__S_IFLNK


116 
	#S_IFLNK
 
__S_IFLNK


	)

118 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

119 && 
deföed
 
	g__S_IFSOCK


120 
	#S_IFSOCK
 
__S_IFSOCK


	)

126 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

128 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

129 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

130 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

131 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

132 #ifde‡
__S_IFIFO


133 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

135 #ifde‡
__S_IFLNK


136 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

139 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


140 
	#S_ISLNK
(
mode
Ë0

	)

143 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

144 && 
deföed
 
	g__S_IFSOCK


145 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

146 #ñi‡
deföed
 
__USE_XOPEN2K


147 
	#S_ISSOCK
(
mode
Ë0

	)

154 #ifdef 
__USE_POSIX199309


155 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

156 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

157 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

163 
	#S_ISUID
 
__S_ISUID


	)

164 
	#S_ISGID
 
__S_ISGID


	)

166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
	#S_ISVTX
 
__S_ISVTX


	)

171 
	#S_IRUSR
 
__S_IREAD


	)

172 
	#S_IWUSR
 
__S_IWRITE


	)

173 
	#S_IXUSR
 
__S_IEXEC


	)

175 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

177 #ifde‡
__USE_MISC


178 
	#S_IREAD
 
S_IRUSR


	)

179 
	#S_IWRITE
 
S_IWUSR


	)

180 
	#S_IEXEC
 
S_IXUSR


	)

183 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

184 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

185 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

187 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

189 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

190 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

191 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

193 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

196 #ifdef 
__USE_MISC


198 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

199 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

200 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

202 
	#S_BLKSIZE
 512

	)

206 #i‚de‡
__USE_FILE_OFFSET64


208 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

209 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

213 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

215 #ifde‡
__REDIRECT_NTH


216 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

217 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

218 
	`__n⁄nuŒ
 ((1, 2));

219 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

220 
	`__n⁄nuŒ
 ((2));

222 
	#°©
 
°©64


	)

223 
	#f°©
 
f°©64


	)

226 #ifde‡
__USE_LARGEFILE64


227 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

228 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

229 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

232 #ifde‡
__USE_ATFILE


236 #i‚de‡
__USE_FILE_OFFSET64


237 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

238 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

239 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

243 
°©
 *
__ª°ri˘
 
__buf
,

244 
__Êag
),

245 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

247 
	#f°©©
 
f°©©64


	)

251 #ifde‡
__USE_LARGEFILE64


252 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

253 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

254 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

258 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


259 #i‚de‡
__USE_FILE_OFFSET64


262 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

263 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

265 #ifde‡
__REDIRECT_NTH


266 
	`__REDIRECT_NTH
 (
l°©
,

267 (c⁄° *
__ª°ri˘
 
__fûe
,

268 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 
	#l°©
 
l°©64


	)

274 #ifde‡
__USE_LARGEFILE64


275 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

276 
°©64
 *
__ª°ri˘
 
__buf
)

277 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

283 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

286 #ifde‡
__USE_MISC


290 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

295 #ifde‡
__USE_POSIX


296 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

299 #ifde‡
__USE_ATFILE


302 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

303 
__Êag
)

304 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

313 #ifdef 
__USE_GNU


316 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

320 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1));

323 #ifde‡
__USE_ATFILE


327 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

328 
__THROW
 
	`__n⁄nuŒ
 ((2));

334 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


335 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_ATFILE


342 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

343 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

349 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1));

352 #ifde‡
__USE_ATFILE


356 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 #ifde‡
__USE_ATFILE


363 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

364 c⁄° 
time•ec
 
__times
[2],

365 
__Êags
)

366 
__THROW
 
	`__n⁄nuŒ
 ((2));

369 #ifde‡
__USE_XOPEN2K8


371 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

389 #i‚de‡
_STAT_VER


390 
	#_STAT_VER
 0

	)

392 #i‚de‡
_MKNOD_VER


393 
	#_MKNOD_VER
 0

	)

397 #i‚de‡
__USE_FILE_OFFSET64


398 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

399 
__THROW
 
	`__n⁄nuŒ
 ((3));

400 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

401 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

402 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

403 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

404 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

405 
°©
 *
__°©_buf
, 
__Êag
)

406 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

408 #ifde‡
__REDIRECT_NTH


409 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

410 
°©
 *
__°©_buf
), 
__fx°©64
)

411 
	`__n⁄nuŒ
 ((3));

412 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__x°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__lx°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

419 c⁄° *
__fûíame
,

420 
°©
 *
__°©_buf
, 
__Êag
),

421 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

424 
	#__fx°©
 
__fx°©64


	)

425 
	#__x°©
 
__x°©64


	)

426 
	#__lx°©
 
__lx°©64


	)

430 #ifde‡
__USE_LARGEFILE64


431 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

432 
__THROW
 
	`__n⁄nuŒ
 ((3));

433 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

434 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

435 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

436 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

437 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

438 
°©64
 *
__°©_buf
, 
__Êag
)

439 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

441 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

442 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

444 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

445 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

446 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

448 #ifde‡
__USE_EXTERN_INLINES


451 
__exã∫_ölöe
 

452 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

454  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

455 
	}
}

457 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


458 
__exã∫_ölöe
 

459 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

461  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

462 
	}
}

465 
__exã∫_ölöe
 

466 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

468  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

469 
	}
}

471 #ifde‡
__USE_ATFILE


472 
__exã∫_ölöe
 

473 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

474 
__Êag
))

476  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

477 
	}
}

480 #ifde‡
__USE_MISC


481 
__exã∫_ölöe
 

482 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

484  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

485 
	}
}

488 #ifde‡
__USE_ATFILE


489 
__exã∫_ölöe
 

490 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

491 
__dev_t
 
__dev
))

493  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

494 
	}
}

497 #i‡
deföed
 
__USE_LARGEFILE64
 \

498 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

499 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

500 
__exã∫_ölöe
 

501 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

503  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

504 
	}
}

506 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


507 
__exã∫_ölöe
 

508 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

510  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

511 
	}
}

514 
__exã∫_ölöe
 

515 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

517  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

518 
	}
}

520 #ifde‡
__USE_ATFILE


521 
__exã∫_ölöe
 

522 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

523 
__Êag
))

525  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

526 
	}
}

533 
	g__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	#__√ed_timevÆ


	)

27 
	~<bôs/time.h
>

29 
	~<sys/£À˘.h
>

31 #i‚de‡
__su£c⁄ds_t_deföed


32 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

33 
	#__su£c⁄ds_t_deföed


	)

37 
	g__BEGIN_DECLS


39 #ifde‡
__USE_GNU


41 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

42 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

43 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

44 }

	)

45 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

46 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

47 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

48 }

	)

52 #ifde‡
__USE_MISC


55 
	stimez⁄e


57 
	mtz_möuãswe°
;

58 
	mtz_d°time
;

61 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

63 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

71 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__USE_MISC


77 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

78 c⁄° 
timez⁄e
 *
__tz
)

79 
__THROW
;

85 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

138 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

141 #ifde‡
__USE_MISC


143 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

144 
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

150 #ifde‡
__USE_GNU


154 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

155 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

159 #ifde‡
__USE_MISC


162 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

163 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

164 
	#timîcmp
(
a
, 
b
, 
CMP
) \

165 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

166 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

167 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

168 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

170 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

171 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

172 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

174 ++(
ªsu…
)->
tv_£c
; \

175 (
ªsu…
)->
tv_u£c
 -= 1000000; \

177 
	}
} 0)

	)

178 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

180 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

181 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

182 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

183 --(
ªsu…
)->
tv_£c
; \

184 (
ªsu…
)->
tv_u£c
 += 1000000; \

186 } 0)

	)

189 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/wait.h

22 #i‚def 
_SYS_WAIT_H


23 
	#_SYS_WAIT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<sig«l.h
>

32 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

35 
	~<bôs/waôÊags.h
>

37 #ifdef 
__USE_MISC


42 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


43 
	#__WAIT_INT
(
°©us
) \

44 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

45 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

47 
	#__WAIT_INT
(
°©us
Ë(*(c⁄° *Ë&(°©us))

	)

55 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


56 
	#__WAIT_STATUS
 *

	)

57 
	#__WAIT_STATUS_DEFN
 *

	)

62 
waô
 *
	m__u±r
;

63 *
	m__ùå
;

64 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

71 
	#__WAIT_STATUS
 *

	)

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	~<bôs/waô°©us.h
>

79 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

80 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

81 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

82 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

85 #ifde‡
__WIFCONTINUED


86 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifdef 
__USE_MISC


91 
	#WCOREFLAG
 
__WCOREFLAG


	)

92 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

93 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

94 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

98 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


101 
	mP_ALL
,

102 
	mP_PID
,

103 
	mP_PGID


104 } 
	tidty≥_t
;

113 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

115 #ifdef 
__USE_MISC


117 
	#WAIT_ANY
 (-1Ë

	)

118 
	#WAIT_MYPGRP
 0

	)

136 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

138 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


139 #i‚de‡
__id_t_deföed


140 
	~<bôs/ty≥s.h
>

141 
__id_t
 
	tid_t
;

142 
	#__id_t_deföed


	)

145 
	#__√ed_sigöfo_t


	)

146 
	~<bôs/sigöfo.h
>

159 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

160 
__›ti⁄s
);

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


166 
	grußge
;

173 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

174 
rußge
 * 
__ußge
Ë
__THROWNL
;

177 #ifde‡
__USE_MISC


179 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

180 
rußge
 *
__ußge
Ë
__THROWNL
;

184 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 (()((((
x
Ë>> 8Ë& 0xffuË| (((xË& 0xffuË<< 8)))

	)

34 
	~<bôs/byãsw≠-16.h
>

37 
	#__bsw≠_c⁄°™t_32
(
x
) \

38 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) | \

39 (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

41 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 3)

43 
__ölöe
 

44 
	$__bsw≠_32
 (
__bsx
)

46  
	`__buûtö_bsw≠32
 (
__bsx
);

47 
	}
}

49 
	#__bsw≠_32
(
x
) \

50 (
__exãnsi⁄__
 \

51 ({ 
__bsx
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__bsx); }))

	)

54 
__ölöe
 

55 
	$__bsw≠_32
 (
__bsx
)

57  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

58 
	}
}

62 #i‡
__GNUC_PREREQ
 (2, 0)

63 
	#__bsw≠_c⁄°™t_64
(
x
) \

64 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

65 | (((
x
) & 0x00ff000000000000ull) >> 40) \

66 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

67 | (((
x
) & 0x000000ff00000000ull) >> 8) \

68 | (((
x
) & 0x00000000ff000000ull) << 8) \

69 | (((
x
) & 0x0000000000ff0000ull) << 24) \

70 | (((
x
) & 0x000000000000ff00ull) << 40) \

71 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

73 #i‡
__GNUC_PREREQ
 (4, 3)

74 
__ölöe
 
__uöt64_t


75 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

77  
	`__buûtö_bsw≠64
 (
__bsx
);

78 
	}
}

80 
	#__bsw≠_64
(
x
) \

81 (
__exãnsi⁄__
 \

82 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

83 
__l
[2]; } 
__w
, 
__r
; \

84 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

85 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

88 
__w
.
__Œ
 = (
x
); \

89 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

90 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

92 
__r
.
__Œ
; }))

	)

95 
	#__bsw≠_c⁄°™t_64
(
x
) \

96 ((((
x
) & 0xff00000000000000ull) >> 56) \

97 | (((
x
) & 0x00ff000000000000ull) >> 40) \

98 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

99 | (((
x
) & 0x000000ff00000000ull) >> 8) \

100 | (((
x
) & 0x00000000ff000000ull) << 8) \

101 | (((
x
) & 0x0000000000ff0000ull) << 24) \

102 | (((
x
) & 0x000000000000ff00ull) << 40) \

103 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

105 
__ölöe
 
__uöt64_t


106 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

108  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

109 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

45 
	#_POSIX_V7_ILP32_OFF32
 -1

	)

46 
	#_POSIX_V7_ILP32_OFFBIG
 -1

	)

47 
	#_POSIX_V6_ILP32_OFF32
 -1

	)

48 
	#_POSIX_V6_ILP32_OFFBIG
 -1

	)

49 
	#_XBS5_ILP32_OFF32
 -1

	)

50 
	#_XBS5_ILP32_OFFBIG
 -1

	)

53 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

54 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

55 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V7_LP64_OFF64
 1

	)

59 
	#_POSIX_V6_LP64_OFF64
 1

	)

60 
	#_XBS5_LP64_OFF64
 1

	)

66 
	#_POSIX_V7_ILP32_OFF32
 1

	)

67 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

68 
	#_POSIX_V6_ILP32_OFF32
 1

	)

69 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

70 
	#_XBS5_ILP32_OFF32
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

77 
	#_POSIX_V7_LP64_OFF64
 -1

	)

78 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

79 
	#_POSIX_V6_LP64_OFF64
 -1

	)

80 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

81 
	#_XBS5_LP64_OFF64
 -1

	)

82 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

85 
	#__ILP32_OFFBIG_CFLAGS
 "-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

	@/usr/include/bits/fcntl.h

19 #i‚def 
_FCNTL_H


23 
	#__O_DIRECTORY
 040000

	)

24 
	#__O_NOFOLLOW
 0100000

	)

25 
	#__O_DIRECT
 0200000

	)

26 
	#__O_LARGEFILE
 0400000

	)

28 
	sÊock


30 
	ml_ty≥
;

31 
	ml_whí˚
;

32 #i‚de‡
__USE_FILE_OFFSET64


33 
__off_t
 
	ml_°¨t
;

34 
__off_t
 
	ml_Àn
;

36 
__off64_t
 
	ml_°¨t
;

37 
__off64_t
 
	ml_Àn
;

39 
__pid_t
 
	ml_pid
;

42 #ifde‡
__USE_LARGEFILE64


43 
	sÊock64


45 
	ml_ty≥
;

46 
	ml_whí˚
;

47 
__off64_t
 
	ml_°¨t
;

48 
__off64_t
 
	ml_Àn
;

49 
__pid_t
 
	ml_pid
;

54 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

27 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


29 #i‡
deföed
 
_UAPI_LINUX_IN6_H
 || deföed 
_UAPI_IPV6_H


33 
	#__USE_KERNEL_IPV6_DEFS


	)

39 
	#IP_OPTIONS
 4

	)

40 
	#IP_HDRINCL
 3

	)

41 
	#IP_TOS
 1

	)

42 
	#IP_TTL
 2

	)

43 
	#IP_RECVOPTS
 6

	)

45 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

46 
	#IP_RETOPTS
 7

	)

47 
	#IP_MULTICAST_IF
 32

	)

48 
	#IP_MULTICAST_TTL
 33

	)

49 
	#IP_MULTICAST_LOOP
 34

	)

50 
	#IP_ADD_MEMBERSHIP
 35

	)

51 
	#IP_DROP_MEMBERSHIP
 36

	)

52 
	#IP_UNBLOCK_SOURCE
 37

	)

53 
	#IP_BLOCK_SOURCE
 38

	)

54 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

55 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

56 
	#IP_MSFILTER
 41

	)

57 #ifde‡
__USE_MISC


58 
	#MCAST_JOIN_GROUP
 42

	)

59 
	#MCAST_BLOCK_SOURCE
 43

	)

60 
	#MCAST_UNBLOCK_SOURCE
 44

	)

61 
	#MCAST_LEAVE_GROUP
 45

	)

62 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

63 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

64 
	#MCAST_MSFILTER
 48

	)

65 
	#IP_MULTICAST_ALL
 49

	)

66 
	#IP_UNICAST_IF
 50

	)

68 
	#MCAST_EXCLUDE
 0

	)

69 
	#MCAST_INCLUDE
 1

	)

72 
	#IP_ROUTER_ALERT
 5

	)

73 
	#IP_PKTINFO
 8

	)

74 
	#IP_PKTOPTIONS
 9

	)

75 
	#IP_PMTUDISC
 10

	)

76 
	#IP_MTU_DISCOVER
 10

	)

77 
	#IP_RECVERR
 11

	)

78 
	#IP_RECVTTL
 12

	)

79 
	#IP_RECVTOS
 13

	)

80 
	#IP_MTU
 14

	)

81 
	#IP_FREEBIND
 15

	)

82 
	#IP_IPSEC_POLICY
 16

	)

83 
	#IP_XFRM_POLICY
 17

	)

84 
	#IP_PASSSEC
 18

	)

85 
	#IP_TRANSPARENT
 19

	)

86 
	#IP_MULTICAST_ALL
 49

	)

89 
	#IP_ORIGDSTADDR
 20

	)

90 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

92 
	#IP_MINTTL
 21

	)

93 
	#IP_NODEFRAG
 22

	)

94 
	#IP_CHECKSUM
 23

	)

97 
	#IP_PMTUDISC_DONT
 0

	)

98 
	#IP_PMTUDISC_WANT
 1

	)

99 
	#IP_PMTUDISC_DO
 2

	)

100 
	#IP_PMTUDISC_PROBE
 3

	)

104 
	#IP_PMTUDISC_INTERFACE
 4

	)

106 
	#IP_PMTUDISC_OMIT
 5

	)

108 
	#IP_MULTICAST_IF
 32

	)

109 
	#IP_MULTICAST_TTL
 33

	)

110 
	#IP_MULTICAST_LOOP
 34

	)

111 
	#IP_ADD_MEMBERSHIP
 35

	)

112 
	#IP_DROP_MEMBERSHIP
 36

	)

113 
	#IP_UNBLOCK_SOURCE
 37

	)

114 
	#IP_BLOCK_SOURCE
 38

	)

115 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

116 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

117 
	#IP_MSFILTER
 41

	)

118 
	#IP_MULTICAST_ALL
 49

	)

119 
	#IP_UNICAST_IF
 50

	)

122 
	#SOL_IP
 0

	)

124 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

125 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

126 
	#IP_MAX_MEMBERSHIPS
 20

	)

128 #ifde‡
__USE_MISC


132 
	sù_›ts


134 
ö_addr
 
	mù_d°
;

135 
	mù_›ts
[40];

139 
	sù_mªqn


141 
ö_addr
 
	mimr_mu…üddr
;

142 
ö_addr
 
	mimr_addªss
;

143 
	mimr_ifödex
;

147 
	sö_pktöfo


149 
	mùi_ifödex
;

150 
ö_addr
 
	mùi_•ec_d°
;

151 
ö_addr
 
	mùi_addr
;

158 
	#IPV6_ADDRFORM
 1

	)

159 
	#IPV6_2292PKTINFO
 2

	)

160 
	#IPV6_2292HOPOPTS
 3

	)

161 
	#IPV6_2292DSTOPTS
 4

	)

162 
	#IPV6_2292RTHDR
 5

	)

163 
	#IPV6_2292PKTOPTIONS
 6

	)

164 
	#IPV6_CHECKSUM
 7

	)

165 
	#IPV6_2292HOPLIMIT
 8

	)

167 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

169 
	#IPV6_NEXTHOP
 9

	)

170 
	#IPV6_AUTHHDR
 10

	)

171 
	#IPV6_UNICAST_HOPS
 16

	)

172 
	#IPV6_MULTICAST_IF
 17

	)

173 
	#IPV6_MULTICAST_HOPS
 18

	)

174 
	#IPV6_MULTICAST_LOOP
 19

	)

175 
	#IPV6_JOIN_GROUP
 20

	)

176 
	#IPV6_LEAVE_GROUP
 21

	)

177 
	#IPV6_ROUTER_ALERT
 22

	)

178 
	#IPV6_MTU_DISCOVER
 23

	)

179 
	#IPV6_MTU
 24

	)

180 
	#IPV6_RECVERR
 25

	)

181 
	#IPV6_V6ONLY
 26

	)

182 
	#IPV6_JOIN_ANYCAST
 27

	)

183 
	#IPV6_LEAVE_ANYCAST
 28

	)

184 
	#IPV6_IPSEC_POLICY
 34

	)

185 
	#IPV6_XFRM_POLICY
 35

	)

188 
	#IPV6_RECVPKTINFO
 49

	)

189 
	#IPV6_PKTINFO
 50

	)

190 
	#IPV6_RECVHOPLIMIT
 51

	)

191 
	#IPV6_HOPLIMIT
 52

	)

192 
	#IPV6_RECVHOPOPTS
 53

	)

193 
	#IPV6_HOPOPTS
 54

	)

194 
	#IPV6_RTHDRDSTOPTS
 55

	)

195 
	#IPV6_RECVRTHDR
 56

	)

196 
	#IPV6_RTHDR
 57

	)

197 
	#IPV6_RECVDSTOPTS
 58

	)

198 
	#IPV6_DSTOPTS
 59

	)

199 
	#IPV6_RECVPATHMTU
 60

	)

200 
	#IPV6_PATHMTU
 61

	)

201 
	#IPV6_DONTFRAG
 62

	)

204 
	#IPV6_RECVTCLASS
 66

	)

205 
	#IPV6_TCLASS
 67

	)

208 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

209 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

210 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

211 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

214 
	#IPV6_PMTUDISC_DONT
 0

	)

215 
	#IPV6_PMTUDISC_WANT
 1

	)

216 
	#IPV6_PMTUDISC_DO
 2

	)

217 
	#IPV6_PMTUDISC_PROBE
 3

	)

218 
	#IPV6_PMTUDISC_INTERFACE
 4

	)

219 
	#IPV6_PMTUDISC_OMIT
 5

	)

222 
	#SOL_IPV6
 41

	)

223 
	#SOL_ICMPV6
 58

	)

226 
	#IPV6_RTHDR_LOOSE
 0

	)

227 
	#IPV6_RTHDR_STRICT
 1

	)

229 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

255 && 
deföed
 
	g__exã∫_Æways_ölöe
)

257 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

259 #ifde‡
__USE_ISOC99


260 
__loˇl_signgam
 = 0;

261  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

263  
	`lgamma_r
 (
__d
, &
signgam
);

265 
	}
}

266 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

268 #ifde‡
__USE_ISOC99


269 
__loˇl_signgam
 = 0;

270  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

272  
	`lgammaf_r
 (
__d
, &
signgam
);

274 
	}
}

275 #ifde‡
__MATH_DECLARE_LDOUBLE


276 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

278 #ifde‡
__USE_ISOC99


279 
__loˇl_signgam
 = 0;

280  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

282  
	`lgammÆ_r
 (
__d
, &
signgam
);

284 
	}
}

288 #i‡((
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
) \

289 && 
deföed
 
	g__exã∫_Æways_ölöe
)

291 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

293 #ifde‡
__USE_ISOC99


294 
__loˇl_signgam
 = 0;

295  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

297  
	`lgamma_r
 (
__d
, &
signgam
);

299 
	}
}

300 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

302 #ifde‡
__USE_ISOC99


303 
__loˇl_signgam
 = 0;

304  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

306  
	`lgammaf_r
 (
__d
, &
signgam
);

308 
	}
}

309 #ifde‡
__MATH_DECLARE_LDOUBLE


310 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

312 #ifde‡
__USE_ISOC99


313 
__loˇl_signgam
 = 0;

314  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

316  
	`lgammÆ_r
 (
__d
, &
signgam
);

318 
	}
}

323 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

324 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

325 #ifde‡
__MATH_DECLARE_LDOUBLE


326 #ifde‡
__NO_LONG_DOUBLE_MATH


327 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

329 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

334 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

335 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

336 #ifde‡
__MATH_DECLARE_LDOUBLE


337 #ifde‡
__NO_LONG_DOUBLE_MATH


338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

340 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

344 #ifde‡
__USE_ISOC99


346 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

347 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

348 #ifde‡
__MATH_DECLARE_LDOUBLE


349 #ifde‡
__NO_LONG_DOUBLE_MATH


350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

352 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

358 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

359 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

360 #ifde‡
__MATH_DECLARE_LDOUBLE


361 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

365 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

366 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

367 #ifde‡
__MATH_DECLARE_LDOUBLE


368 #ifde‡
__NO_LONG_DOUBLE_MATH


369 
__REDIRECT_NTH
 (
powl
, (, ),

370 
__pow_föôe
);

372 
__REDIRECT_NTH
 (
powl
, (, ),

373 
__powl_föôe
);

378 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

379 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

380 #ifde‡
__MATH_DECLARE_LDOUBLE


381 #ifde‡
__NO_LONG_DOUBLE_MATH


382 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

383 
__ªmaödî_föôe
);

385 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

386 
__ªmaödîl_föôe
);

390 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


392 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

393 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

394 #ifde‡
__MATH_DECLARE_LDOUBLE


395 #ifde‡
__NO_LONG_DOUBLE_MATH


396 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

397 
__sˇlb_föôe
);

399 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

400 
__sˇlbl_föôe
);

406 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

407 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

408 #ifde‡
__MATH_DECLARE_LDOUBLE


409 #ifde‡
__NO_LONG_DOUBLE_MATH


410 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

412 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

417 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

418 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

419 #ifde‡
__MATH_DECLARE_LDOUBLE


420 #ifde‡
__NO_LONG_DOUBLE_MATH


421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

423 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

427 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


429 
__gamma_r_föôe
 (, *);

430 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

432 
__loˇl_signgam
 = 0;

433 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

434  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

435 
	}
}

436 
__gammaf_r_föôe
 (, *);

437 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

439 
__loˇl_signgam
 = 0;

440 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

441  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

442 
	}
}

443 #ifde‡
__MATH_DECLARE_LDOUBLE


444 
__gammÆ_r_föôe
 (, *);

445 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

447 
__loˇl_signgam
 = 0;

448 #ifde‡
__NO_LONG_DOUBLE_MATH


449 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

451 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

453  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

454 
	}
}

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


27 
	~<bôs/libm-simd-de˛-°ubs.h
>

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL_VEC
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


201 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

204 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

207 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

211 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

214 #ifde‡
__USE_ISOC99


215 
__BEGIN_NAMESPACE_C99


217 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

218 
	g__END_NAMESPACE_C99


221 #ifde‡
__USE_ISOC99


222 
__BEGIN_NAMESPACE_C99


224 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

225 
	g__END_NAMESPACE_C99


230 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

237 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

238 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

240 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

246 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


247 
__BEGIN_NAMESPACE_C99


249 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

250 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

252 
	g__END_NAMESPACE_C99


255 #ifde‡
__USE_ISOC99


256 
__BEGIN_NAMESPACE_C99


258 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

259 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


264 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

267 #ifde‡
__USE_MISC


271 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

275 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


276 
__BEGIN_NAMESPACE_C99


279 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

282 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

283 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


284 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

288 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

290 #ifde‡
__USE_ISOC99


292 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

296 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

299 #ifde‡
__USE_ISOC99


301 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

305 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

309 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

313 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

318 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

325 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

326 
__exãnsi⁄__


327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__exãnsi⁄__


333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

343 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #ifde‡
__USE_GNU


365 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

366 
__©åibuã__
 ((
__c⁄°__
));

369 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


371 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

26 
	tÊﬂt_t
;

28 
	tdoubÀ_t
;

32 
	#FP_ILOGB0
 (-2147483647)

	)

33 
	#FP_ILOGBNAN
 (2147483647)

	)

37 #ifde‡
__FP_FAST_FMA


38 
	#FP_FAST_FMA
 1

	)

41 #ifde‡
__FP_FAST_FMAF


42 
	#FP_FAST_FMAF
 1

	)

45 #ifde‡
__FP_FAST_FMAL


46 
	#FP_FAST_FMAL
 1

	)

51 #i‚de‡
__NO_LONG_DOUBLE_MATH


54 
	#__NO_LONG_DOUBLE_MATH
 1

	)

	@/usr/include/bits/mathinline.h

8 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 #ifde‡
__USE_MISC


28 
	#MAP_GROWSDOWN
 0x00100

	)

29 
	#MAP_DENYWRITE
 0x00800

	)

30 
	#MAP_EXECUTABLE
 0x01000

	)

31 
	#MAP_LOCKED
 0x02000

	)

32 
	#MAP_NORESERVE
 0x04000

	)

33 
	#MAP_POPULATE
 0x08000

	)

34 
	#MAP_NONBLOCK
 0x10000

	)

35 
	#MAP_STACK
 0x20000

	)

36 
	#MAP_HUGETLB
 0x40000

	)

40 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<ídün.h
>

23 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

24 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

25 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

26 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

27 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

28 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

30 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

31 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

32 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

37 
	t±hªad_t
;

40 
	u±hªad_©å_t


42 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

43 
	m__Æign
;

45 #i‚de‡
__have_±hªad_©å_t


46 
±hªad_©å_t
 
	t±hªad_©å_t
;

47 
	#__have_±hªad_©å_t
 1

	)

51 
	s__±hªad_öã∫Æ_¶i°


53 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

54 } 
	t__±hªad_¶i°_t
;

61 
	s__±hªad_muãx_s


63 
	m__lock
;

64 
	m__cou¡
;

65 
	m__ow√r
;

68 
	m__köd
;

69 
	m__nu£rs
;

70 
__exãnsi⁄__
 union

72 
	m__•ös
;

73 
__±hªad_¶i°_t
 
	m__li°
;

75 } 
	m__d©a
;

76 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

77 
	m__Æign
;

78 } 
	t±hªad_muãx_t
;

81 
	#__PTHREAD_SPINS
 0

	)

85 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

86 
	m__Æign
;

87 } 
	t±hªad_muãx©å_t
;

96 
	m__lock
;

97 
	m__fuãx
;

98 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

99 
__exãnsi⁄__
 
	m__wakeup_£q
;

100 
__exãnsi⁄__
 
	m__wokí_£q
;

101 *
	m__muãx
;

102 
	m__nwaôîs
;

103 
	m__brﬂdˇ°_£q
;

104 } 
	m__d©a
;

105 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

106 
__exãnsi⁄__
 
	m__Æign
;

107 } 
	t±hªad_c⁄d_t
;

111 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

112 
	m__Æign
;

113 } 
	t±hªad_c⁄d©å_t
;

117 
	t±hªad_key_t
;

121 
	t±hªad_⁄˚_t
;

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


131 
	m__lock
;

132 
	m__ƒ_ªadîs
;

133 
	m__ªadîs_wakeup
;

134 
	m__wrôî_wakeup
;

135 
	m__ƒ_ªadîs_queued
;

136 
	m__ƒ_wrôîs_queued
;

137 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


138 
	m__∑d1
;

139 
	m__∑d2
;

140 
	m__sh¨ed
;

143 
	m__Êags
;

147 
	m__Êags
;

148 
	m__sh¨ed
;

149 
	m__∑d1
;

150 
	m__∑d2
;

152 
	m__wrôî
;

153 } 
	m__d©a
;

154 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

155 
	m__Æign
;

156 } 
	t±hªad_rwlock_t
;

158 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

162 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

163 
	m__Æign
;

164 } 
	t±hªad_rwlock©å_t
;

168 #ifde‡
__USE_XOPEN2K


170 vﬁ©ûê
	t±hªad_•ölock_t
;

177 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

178 
	m__Æign
;

179 } 
	t±hªad_b¨rõr_t
;

183 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

184 
	m__Æign
;

185 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/bits/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


23 
	#__SIZEOF_SEM_T
 16

	)

27 
	#SEM_FAILED
 ((
£m_t
 *Ë0)

	)

32 
	m__size
[
__SIZEOF_SEM_T
];

33 
	m__Æign
;

34 } 
	t£m_t
;

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 #i‚de‡
__ASSEMBLER__


33 
	t__jmp_buf
[64] 
	t__©åibuã__
((
	t__Æig√d__
 (8)));

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

52 
	msi_signo
;

53 
	msi_î∫o
;

55 
	msi_code
;

59 
	m_∑d
[
__SI_PAD_SIZE
];

64 
__pid_t
 
	msi_pid
;

65 
__uid_t
 
	msi_uid
;

66 } 
	m_kûl
;

71 
	msi_tid
;

72 
	msi_ovîrun
;

73 
sigvÆ_t
 
	msi_sigvÆ
;

74 } 
	m_timî
;

79 
__pid_t
 
	msi_pid
;

80 
__uid_t
 
	msi_uid
;

81 
sigvÆ_t
 
	msi_sigvÆ
;

82 } 
	m_π
;

87 
__pid_t
 
	msi_pid
;

88 
__uid_t
 
	msi_uid
;

89 
	msi_°©us
;

90 
__˛ock_t
 
	msi_utime
;

91 
__˛ock_t
 
	msi_°ime
;

92 } 
	m_sigchld
;

97 *
	msi_addr
;

98 
	msi_addr_lsb
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

111 *
	m_ˇŒ_addr
;

112 
	m_sysˇŒ
;

113 
	m_¨ch
;

114 } 
	m_sigsys
;

115 } 
	m_sifõlds
;

116 } 
	tsigöfo_t
;

120 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

121 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

122 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

123 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

124 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

125 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

126 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

127 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

128 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

129 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

130 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

131 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

132 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

133 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

134 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

135 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

136 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

143 
	mSI_ASYNCNL
 = -60,

144 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

145 
	mSI_TKILL
 = -6,

146 
	#SI_TKILL
 
SI_TKILL


	)

147 
	mSI_SIGIO
,

148 
	#SI_SIGIO
 
SI_SIGIO


	)

149 
	mSI_ASYNCIO
,

150 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

151 
	mSI_MESGQ
,

152 
	#SI_MESGQ
 
SI_MESGQ


	)

153 
	mSI_TIMER
,

154 
	#SI_TIMER
 
SI_TIMER


	)

155 
	mSI_QUEUE
,

156 
	#SI_QUEUE
 
SI_QUEUE


	)

157 
	mSI_USER
,

158 
	#SI_USER
 
SI_USER


	)

159 
	mSI_KERNEL
 = 0x80

160 
	#SI_KERNEL
 
SI_KERNEL


	)

164 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


168 
	mILL_ILLOPC
 = 1,

169 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

170 
	mILL_ILLOPN
,

171 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

172 
	mILL_ILLADR
,

173 
	#ILL_ILLADR
 
ILL_ILLADR


	)

174 
	mILL_ILLTRP
,

175 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

176 
	mILL_PRVOPC
,

177 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

178 
	mILL_PRVREG
,

179 
	#ILL_PRVREG
 
ILL_PRVREG


	)

180 
	mILL_COPROC
,

181 
	#ILL_COPROC
 
ILL_COPROC


	)

182 
	mILL_BADSTK


183 
	#ILL_BADSTK
 
ILL_BADSTK


	)

189 
	mFPE_INTDIV
 = 1,

190 
	#FPE_INTDIV
 
FPE_INTDIV


	)

191 
	mFPE_INTOVF
,

192 
	#FPE_INTOVF
 
FPE_INTOVF


	)

193 
	mFPE_FLTDIV
,

194 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

195 
	mFPE_FLTOVF
,

196 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

197 
	mFPE_FLTUND
,

198 
	#FPE_FLTUND
 
FPE_FLTUND


	)

199 
	mFPE_FLTRES
,

200 
	#FPE_FLTRES
 
FPE_FLTRES


	)

201 
	mFPE_FLTINV
,

202 
	#FPE_FLTINV
 
FPE_FLTINV


	)

203 
	mFPE_FLTSUB


204 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

210 
	mSEGV_MAPERR
 = 1,

211 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

212 
	mSEGV_ACCERR


213 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

219 
	mBUS_ADRALN
 = 1,

220 
	#BUS_ADRALN
 
BUS_ADRALN


	)

221 
	mBUS_ADRERR
,

222 
	#BUS_ADRERR
 
BUS_ADRERR


	)

223 
	mBUS_OBJERR
,

224 
	#BUS_OBJERR
 
BUS_OBJERR


	)

225 
	mBUS_MCEERR_AR
,

226 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

227 
	mBUS_MCEERR_AO


228 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

232 #ifde‡
__USE_XOPEN_EXTENDED


236 
	mTRAP_BRKPT
 = 1,

237 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

238 
	mTRAP_TRACE


239 
	#TRAP_TRACE
 
TRAP_TRACE


	)

243 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


247 
	mCLD_EXITED
 = 1,

248 
	#CLD_EXITED
 
CLD_EXITED


	)

249 
	mCLD_KILLED
,

250 
	#CLD_KILLED
 
CLD_KILLED


	)

251 
	mCLD_DUMPED
,

252 
	#CLD_DUMPED
 
CLD_DUMPED


	)

253 
	mCLD_TRAPPED
,

254 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

255 
	mCLD_STOPPED
,

256 
	#CLD_STOPPED
 
CLD_STOPPED


	)

257 
	mCLD_CONTINUED


258 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

264 
	mPOLL_IN
 = 1,

265 
	#POLL_IN
 
POLL_IN


	)

266 
	mPOLL_OUT
,

267 
	#POLL_OUT
 
POLL_OUT


	)

268 
	mPOLL_MSG
,

269 
	#POLL_MSG
 
POLL_MSG


	)

270 
	mPOLL_ERR
,

271 
	#POLL_ERR
 
POLL_ERR


	)

272 
	mPOLL_PRI
,

273 
	#POLL_PRI
 
POLL_PRI


	)

274 
	mPOLL_HUP


275 
	#POLL_HUP
 
POLL_HUP


	)

279 #unde‡
__√ed_sigöfo_t


283 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

284 && !
deföed
 
	g__have_sigevít_t


285 
	#__have_sigevít_t
 1

	)

288 
	#__SIGEV_MAX_SIZE
 64

	)

289 #i‡
__WORDSIZE
 == 64

290 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

292 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

296 #i‚de‡
__have_±hªad_©å_t


297 
±hªad_©å_t
 
	t±hªad_©å_t
;

298 
	#__have_±hªad_©å_t
 1

	)

301 
	ssigevít


303 
sigvÆ_t
 
	msigev_vÆue
;

304 
	msigev_signo
;

305 
	msigev_nŸify
;

309 
	m_∑d
[
__SIGEV_PAD_SIZE
];

313 
__pid_t
 
	m_tid
;

317 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

318 
±hªad_©å_t
 *
	m_©åibuã
;

319 } 
	m_sigev_thªad
;

320 } 
	m_sigev_un
;

321 } 
	tsigevít_t
;

324 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

325 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

330 
	mSIGEV_SIGNAL
 = 0,

331 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

332 
	mSIGEV_NONE
,

333 
	#SIGEV_NONE
 
SIGEV_NONE


	)

334 
	mSIGEV_THREAD
,

335 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

337 
	mSIGEV_THREAD_ID
 = 4

338 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_IB
 27

	)

72 
	#PF_MPLS
 28

	)

73 
	#PF_CAN
 29

	)

74 
	#PF_TIPC
 30

	)

75 
	#PF_BLUETOOTH
 31

	)

76 
	#PF_IUCV
 32

	)

77 
	#PF_RXRPC
 33

	)

78 
	#PF_ISDN
 34

	)

79 
	#PF_PHONET
 35

	)

80 
	#PF_IEEE802154
 36

	)

81 
	#PF_CAIF
 37

	)

82 
	#PF_ALG
 38

	)

83 
	#PF_NFC
 39

	)

84 
	#PF_VSOCK
 40

	)

85 
	#PF_MAX
 41

	)

88 
	#AF_UNSPEC
 
PF_UNSPEC


	)

89 
	#AF_LOCAL
 
PF_LOCAL


	)

90 
	#AF_UNIX
 
PF_UNIX


	)

91 
	#AF_FILE
 
PF_FILE


	)

92 
	#AF_INET
 
PF_INET


	)

93 
	#AF_AX25
 
PF_AX25


	)

94 
	#AF_IPX
 
PF_IPX


	)

95 
	#AF_APPLETALK
 
PF_APPLETALK


	)

96 
	#AF_NETROM
 
PF_NETROM


	)

97 
	#AF_BRIDGE
 
PF_BRIDGE


	)

98 
	#AF_ATMPVC
 
PF_ATMPVC


	)

99 
	#AF_X25
 
PF_X25


	)

100 
	#AF_INET6
 
PF_INET6


	)

101 
	#AF_ROSE
 
PF_ROSE


	)

102 
	#AF_DEC√t
 
PF_DEC√t


	)

103 
	#AF_NETBEUI
 
PF_NETBEUI


	)

104 
	#AF_SECURITY
 
PF_SECURITY


	)

105 
	#AF_KEY
 
PF_KEY


	)

106 
	#AF_NETLINK
 
PF_NETLINK


	)

107 
	#AF_ROUTE
 
PF_ROUTE


	)

108 
	#AF_PACKET
 
PF_PACKET


	)

109 
	#AF_ASH
 
PF_ASH


	)

110 
	#AF_ECONET
 
PF_ECONET


	)

111 
	#AF_ATMSVC
 
PF_ATMSVC


	)

112 
	#AF_RDS
 
PF_RDS


	)

113 
	#AF_SNA
 
PF_SNA


	)

114 
	#AF_IRDA
 
PF_IRDA


	)

115 
	#AF_PPPOX
 
PF_PPPOX


	)

116 
	#AF_WANPIPE
 
PF_WANPIPE


	)

117 
	#AF_LLC
 
PF_LLC


	)

118 
	#AF_IB
 
PF_IB


	)

119 
	#AF_MPLS
 
PF_MPLS


	)

120 
	#AF_CAN
 
PF_CAN


	)

121 
	#AF_TIPC
 
PF_TIPC


	)

122 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

123 
	#AF_IUCV
 
PF_IUCV


	)

124 
	#AF_RXRPC
 
PF_RXRPC


	)

125 
	#AF_ISDN
 
PF_ISDN


	)

126 
	#AF_PHONET
 
PF_PHONET


	)

127 
	#AF_IEEE802154
 
PF_IEEE802154


	)

128 
	#AF_CAIF
 
PF_CAIF


	)

129 
	#AF_ALG
 
PF_ALG


	)

130 
	#AF_NFC
 
PF_NFC


	)

131 
	#AF_VSOCK
 
PF_VSOCK


	)

132 
	#AF_MAX
 
PF_MAX


	)

138 
	#SOL_RAW
 255

	)

139 
	#SOL_DECNET
 261

	)

140 
	#SOL_X25
 262

	)

141 
	#SOL_PACKET
 263

	)

142 
	#SOL_ATM
 264

	)

143 
	#SOL_AAL
 265

	)

144 
	#SOL_IRDA
 266

	)

147 
	#SOMAXCONN
 128

	)

150 
	~<bôs/sockaddr.h
>

153 
	ssockaddr


155 
__SOCKADDR_COMMON
 (
ß_
);

156 
	mß_d©a
[14];

162 
	#__ss_Æig¡y≥
 

	)

163 
	#_SS_SIZE
 128

	)

164 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

166 
	ssockaddr_°‹age


168 
__SOCKADDR_COMMON
 (
ss_
);

169 
__ss_Æig¡y≥
 
	m__ss_Æign
;

170 
	m__ss_∑ddög
[
_SS_PADSIZE
];

177 
	mMSG_OOB
 = 0x01,

178 
	#MSG_OOB
 
MSG_OOB


	)

179 
	mMSG_PEEK
 = 0x02,

180 
	#MSG_PEEK
 
MSG_PEEK


	)

181 
	mMSG_DONTROUTE
 = 0x04,

182 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

183 #ifde‡
__USE_GNU


185 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

186 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

188 
	mMSG_CTRUNC
 = 0x08,

189 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

190 
	mMSG_PROXY
 = 0x10,

191 
	#MSG_PROXY
 
MSG_PROXY


	)

192 
	mMSG_TRUNC
 = 0x20,

193 
	#MSG_TRUNC
 
MSG_TRUNC


	)

194 
	mMSG_DONTWAIT
 = 0x40,

195 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

196 
	mMSG_EOR
 = 0x80,

197 
	#MSG_EOR
 
MSG_EOR


	)

198 
	mMSG_WAITALL
 = 0x100,

199 
	#MSG_WAITALL
 
MSG_WAITALL


	)

200 
	mMSG_FIN
 = 0x200,

201 
	#MSG_FIN
 
MSG_FIN


	)

202 
	mMSG_SYN
 = 0x400,

203 
	#MSG_SYN
 
MSG_SYN


	)

204 
	mMSG_CONFIRM
 = 0x800,

205 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

206 
	mMSG_RST
 = 0x1000,

207 
	#MSG_RST
 
MSG_RST


	)

208 
	mMSG_ERRQUEUE
 = 0x2000,

209 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

210 
	mMSG_NOSIGNAL
 = 0x4000,

211 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

212 
	mMSG_MORE
 = 0x8000,

213 
	#MSG_MORE
 
MSG_MORE


	)

214 
	mMSG_WAITFORONE
 = 0x10000,

215 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

216 
	mMSG_FASTOPEN
 = 0x20000000,

217 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

219 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

222 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

228 
	smsghdr


230 *
	mmsg_«me
;

231 
sockÀn_t
 
	mmsg_«mñí
;

233 
iovec
 *
	mmsg_iov
;

234 
size_t
 
	mmsg_iovÀn
;

236 *
	mmsg_c⁄åﬁ
;

237 
size_t
 
	mmsg_c⁄åﬁÀn
;

242 
	mmsg_Êags
;

246 
	scmsghdr


248 
size_t
 
	mcmsg_Àn
;

253 
	mcmsg_Àvñ
;

254 
	mcmsg_ty≥
;

255 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

256 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

261 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

262 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

264 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

266 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

267 
	#CMSG_FIRSTHDR
(
mhdr
) \

268 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

269 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

270 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

271 & (
size_t
Ë~( (size_tË- 1))

	)

272 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

273 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

274 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

276 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

277 
cmsghdr
 *
__cmsg
Ë
__THROW
;

278 #ifde‡
__USE_EXTERN_INLINES


279 #i‚de‡
_EXTERN_INLINE


280 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

282 
_EXTERN_INLINE
 
cmsghdr
 *

283 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

285 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

287  (
cmsghdr
 *) 0;

289 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

290 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

291 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


292 + 
__mhdr
->
msg_c⁄åﬁÀn
)

293 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

294 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

296  (
cmsghdr
 *) 0;

297  
__cmsg
;

298 
	}
}

305 
	mSCM_RIGHTS
 = 0x01

306 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

307 #ifde‡
__USE_GNU


308 , 
	mSCM_CREDENTIALS
 = 0x02

309 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

313 #ifde‡
__USE_GNU


315 
	su¸ed


317 
pid_t
 
	mpid
;

318 
uid_t
 
	muid
;

319 
gid_t
 
	mgid
;

324 #i‚de‡
__USE_MISC


325 #i‚de‡
FIOGETOWN


326 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

328 #i‚de‡
FIOSETOWN


329 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

331 #i‚de‡
SIOCATMARK


332 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

334 #i‚de‡
SIOCGPGRP


335 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

337 #i‚de‡
SIOCGSTAMP


338 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

340 #i‚de‡
SIOCGSTAMPNS


341 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

343 #i‚de‡
SIOCSPGRP


344 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

349 
	~<asm/sockë.h
>

351 #i‚de‡
__USE_MISC


352 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


353 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


354 #unde‡
FIOGETOWN


356 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


357 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


358 #unde‡
FIOSETOWN


360 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


361 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


362 #unde‡
SIOCATMARK


364 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


365 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


366 #unde‡
SIOCGPGRP


368 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


369 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


370 #unde‡
SIOCGSTAMP


372 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


373 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


374 #unde‡
SIOCGSTAMPNS


376 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


377 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


378 #unde‡
SIOCSPGRP


383 
	slögî


385 
	ml_⁄off
;

386 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 
	#_STAT_VER_LINUX_OLD
 1

	)

27 
	#_STAT_VER_KERNEL
 1

	)

28 
	#_STAT_VER_SVR4
 2

	)

29 
	#_STAT_VER_LINUX
 3

	)

30 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	s°©


40 
__dev_t
 
	m°_dev
;

41 
	m__∑d1
;

42 #i‚de‡
__USE_FILE_OFFSET64


43 
__öo_t
 
	m°_öo
;

45 
__öo_t
 
	m__°_öo
;

47 
__mode_t
 
	m°_mode
;

48 
__∆ök_t
 
	m°_∆ök
;

49 
__uid_t
 
	m°_uid
;

50 
__gid_t
 
	m°_gid
;

51 
__dev_t
 
	m°_rdev
;

52 
	m__∑d2
;

53 #i‚de‡
__USE_FILE_OFFSET64


54 
__off_t
 
	m°_size
;

56 
__off64_t
 
	m°_size
;

58 
__blksize_t
 
	m°_blksize
;

60 #i‚de‡
__USE_FILE_OFFSET64


61 
__blk˙t_t
 
	m°_blocks
;

63 
__blk˙t64_t
 
	m°_blocks
;

65 #ifde‡
__USE_XOPEN2K8


72 
time•ec
 
	m°_©im
;

73 
time•ec
 
	m°_mtim
;

74 
time•ec
 
	m°_˘im
;

75 
	#°_©ime
 
°_©im
.
tv_£c


	)

76 
	#°_mtime
 
°_mtim
.
tv_£c


	)

77 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

79 
__time_t
 
	m°_©ime
;

80 
	m°_©imí£c
;

81 
__time_t
 
	m°_mtime
;

82 
	m°_mtimí£c
;

83 
__time_t
 
	m°_˘ime
;

84 
	m°_˘imí£c
;

86 #i‚de‡
__USE_FILE_OFFSET64


87 
	m__glibc_ª£rved4
;

88 
	m__glibc_ª£rved5
;

90 
__öo64_t
 
	m°_öo
;

94 #ifde‡
__USE_LARGEFILE64


95 
	s°©64


97 
__dev_t
 
	m°_dev
;

98 
	m__∑d1
;

100 
__öo_t
 
	m__°_öo
;

101 
__mode_t
 
	m°_mode
;

102 
__∆ök_t
 
	m°_∆ök
;

103 
__uid_t
 
	m°_uid
;

104 
__gid_t
 
	m°_gid
;

105 
__dev_t
 
	m°_rdev
;

106 
	m__∑d2
;

107 
__off64_t
 
	m°_size
;

108 
__blksize_t
 
	m°_blksize
;

110 
__blk˙t64_t
 
	m°_blocks
;

111 #ifde‡
__USE_XOPEN2K8


118 
time•ec
 
	m°_©im
;

119 
time•ec
 
	m°_mtim
;

120 
time•ec
 
	m°_˘im
;

122 
__time_t
 
	m°_©ime
;

123 
	m°_©imí£c
;

124 
__time_t
 
	m°_mtime
;

125 
	m°_mtimí£c
;

126 
__time_t
 
	m°_˘ime
;

127 
	m°_˘imí£c
;

129 
__öo64_t
 
	m°_öo
;

134 
	#_STATBUF_ST_BLKSIZE


	)

135 
	#_STATBUF_ST_RDEV


	)

137 
	#_STATBUF_ST_NSEC


	)

141 
	#__S_IFMT
 0170000

	)

144 
	#__S_IFDIR
 0040000

	)

145 
	#__S_IFCHR
 0020000

	)

146 
	#__S_IFBLK
 0060000

	)

147 
	#__S_IFREG
 0100000

	)

148 
	#__S_IFIFO
 0010000

	)

149 
	#__S_IFLNK
 0120000

	)

150 
	#__S_IFSOCK
 0140000

	)

154 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

155 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

156 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

160 
	#__S_ISUID
 04000

	)

161 
	#__S_ISGID
 02000

	)

162 
	#__S_ISVTX
 01000

	)

163 
	#__S_IREAD
 0400

	)

164 
	#__S_IWRITE
 0200

	)

165 
	#__S_IEXEC
 0100

	)

167 #ifde‡
__USE_ATFILE


168 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

169 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

8 #i‚de‡
_BITS_STRING_H


9 
	#_BITS_STRING_H
 1

	)

12 
	#_STRING_ARCH_u«lig√d
 0

	)

	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #ifde‡
__USE_POSIX


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_MISC


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_XOPEN2K8


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_MISC


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

18 
	#__WORDSIZE
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


149 #unde‡
_DEFAULT_SOURCE


150 
	#_DEFAULT_SOURCE
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_ISOC11_SOURCE


160 
	#_ISOC11_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_DEFAULT_SOURCE


172 
	#_DEFAULT_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
))

184 #unde‡
_DEFAULT_SOURCE


185 
	#_DEFAULT_SOURCE
 1

	)

189 #i‡(
deföed
 
_ISOC11_SOURCE
 \

190 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

191 
	#__USE_ISOC11
 1

	)

195 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

196 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

197 
	#__USE_ISOC99
 1

	)

201 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

202 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

203 
	#__USE_ISOC95
 1

	)

210 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

211 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

212 
	#__USE_ISOCXX11
 1

	)

218 #ifde‡
_DEFAULT_SOURCE


219 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


220 
	#__USE_POSIX_IMPLICITLY
 1

	)

222 #unde‡
_POSIX_SOURCE


223 
	#_POSIX_SOURCE
 1

	)

224 #unde‡
_POSIX_C_SOURCE


225 
	#_POSIX_C_SOURCE
 200809L

	)

227 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

228 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

229 
	#_POSIX_SOURCE
 1

	)

230 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

231 
	#_POSIX_C_SOURCE
 2

	)

232 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

233 
	#_POSIX_C_SOURCE
 199506L

	)

234 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

235 
	#_POSIX_C_SOURCE
 200112L

	)

237 
	#_POSIX_C_SOURCE
 200809L

	)

239 
	#__USE_POSIX_IMPLICITLY
 1

	)

242 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


243 
	#__USE_POSIX
 1

	)

246 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


247 
	#__USE_POSIX2
 1

	)

250 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

251 
	#__USE_POSIX199309
 1

	)

254 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

255 
	#__USE_POSIX199506
 1

	)

258 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

259 
	#__USE_XOPEN2K
 1

	)

260 #unde‡
__USE_ISOC95


261 
	#__USE_ISOC95
 1

	)

262 #unde‡
__USE_ISOC99


263 
	#__USE_ISOC99
 1

	)

266 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

267 
	#__USE_XOPEN2K8
 1

	)

268 #unde‡
_ATFILE_SOURCE


269 
	#_ATFILE_SOURCE
 1

	)

272 #ifdef 
_XOPEN_SOURCE


273 
	#__USE_XOPEN
 1

	)

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

275 
	#__USE_XOPEN_EXTENDED
 1

	)

276 
	#__USE_UNIX98
 1

	)

277 #unde‡
_LARGEFILE_SOURCE


278 
	#_LARGEFILE_SOURCE
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

281 
	#__USE_XOPEN2K8
 1

	)

282 
	#__USE_XOPEN2K8XSI
 1

	)

284 
	#__USE_XOPEN2K
 1

	)

285 
	#__USE_XOPEN2KXSI
 1

	)

286 #unde‡
__USE_ISOC95


287 
	#__USE_ISOC95
 1

	)

288 #unde‡
__USE_ISOC99


289 
	#__USE_ISOC99
 1

	)

292 #ifde‡
_XOPEN_SOURCE_EXTENDED


293 
	#__USE_XOPEN_EXTENDED
 1

	)

298 #ifde‡
_LARGEFILE_SOURCE


299 
	#__USE_LARGEFILE
 1

	)

302 #ifde‡
_LARGEFILE64_SOURCE


303 
	#__USE_LARGEFILE64
 1

	)

306 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

307 
	#__USE_FILE_OFFSET64
 1

	)

310 #i‡
deföed
 
_DEFAULT_SOURCE


311 
	#__USE_MISC
 1

	)

314 #ifdef 
_ATFILE_SOURCE


315 
	#__USE_ATFILE
 1

	)

318 #ifdef 
_GNU_SOURCE


319 
	#__USE_GNU
 1

	)

322 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


323 
	#__USE_REENTRANT
 1

	)

326 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

327 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

328 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

329 #ñi‡!
__GNUC_PREREQ
 (4, 1)

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


331 #ñi‡
_FORTIFY_SOURCE
 > 1

332 
	#__USE_FORTIFY_LEVEL
 2

	)

334 
	#__USE_FORTIFY_LEVEL
 1

	)

337 #i‚de‡
__USE_FORTIFY_LEVEL


338 
	#__USE_FORTIFY_LEVEL
 0

	)

343 
	~<°dc-¥edef.h
>

351 #unde‡
__GNU_LIBRARY__


352 
	#__GNU_LIBRARY__
 6

	)

356 
	#__GLIBC__
 2

	)

357 
	#__GLIBC_MINOR__
 22

	)

359 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

360 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

363 #i‚de‡
__ASSEMBLER__


364 #i‚de‡
_SYS_CDEFS_H


365 
	~<sys/cdefs.h
>

370 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


371 
	#__USE_LARGEFILE
 1

	)

372 
	#__USE_LARGEFILE64
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/uio.h

18 #i‚de‡
_SYS_UIO_H


19 
	#_SYS_UIO_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	g__BEGIN_DECLS


28 
	~<bôs/uio.h
>

39 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

40 
__wur
;

50 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

51 
__wur
;

54 #ifde‡
__USE_MISC


55 #i‚de‡
__USE_FILE_OFFSET64


65 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

66 
__off_t
 
__off£t
Ë
__wur
;

77 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

78 
__off_t
 
__off£t
Ë
__wur
;

80 #ifde‡
__REDIRECT


81 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

82 
__cou¡
, 
__off64_t
 
__off£t
),

83 
¥ódv64
Ë
__wur
;

84 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

85 
__cou¡
, 
__off64_t
 
__off£t
),

86 
pwrôev64
Ë
__wur
;

88 
	#¥ódv
 
¥ódv64


	)

89 
	#pwrôev
 
pwrôev64


	)

93 #ifde‡
__USE_LARGEFILE64


103 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

104 
__off64_t
 
__off£t
Ë
__wur
;

115 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

116 
__off64_t
 
__off£t
Ë
__wur
;

120 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/ioctls.h

1 #i‚de‡
__ASM_ARM_IOCTLS_H


2 
	#__ASM_ARM_IOCTLS_H


	)

4 
	#FIOQSIZE
 0x545E

	)

6 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 
	#__bsw≠_16
(
x
) \

25 (
__exãnsi⁄__
 \

26 ({ 
__bsx
 = (Ë(
x
); \

27 
	`__bsw≠_c⁄°™t_16
 (
__bsx
); }))

	)

29 
__ölöe
 

30 
	$__bsw≠_16
 (
__bsx
)

32  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

33 
	}
}

	@/usr/include/bits/endian.h

1 #i‚de‡
_ENDIAN_H


6 #ifde‡
__ARMEB__


7 
	#__BYTE_ORDER
 
__BIG_ENDIAN


	)

9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

206 #ifde‡
__USE_XOPEN2K8


207 
	#F_DUPFD_CLOEXEC
 1030

	)

212 
	#FD_CLOEXEC
 1

	)

214 #i‚de‡
F_RDLCK


216 
	#F_RDLCK
 0

	)

217 
	#F_WRLCK
 1

	)

218 
	#F_UNLCK
 2

	)

223 #i‚de‡
F_EXLCK


224 
	#F_EXLCK
 4

	)

225 
	#F_SHLCK
 8

	)

228 #ifde‡
__USE_MISC


230 
	#LOCK_SH
 1

	)

231 
	#LOCK_EX
 2

	)

232 
	#LOCK_NB
 4

	)

234 
	#LOCK_UN
 8

	)

237 #ifde‡
__USE_GNU


238 
	#LOCK_MAND
 32

	)

239 
	#LOCK_READ
 64

	)

240 
	#LOCK_WRITE
 128

	)

241 
	#LOCK_RW
 192

	)

244 #ifde‡
__USE_GNU


246 
	#DN_ACCESS
 0x00000001

	)

247 
	#DN_MODIFY
 0x00000002

	)

248 
	#DN_CREATE
 0x00000004

	)

249 
	#DN_DELETE
 0x00000008

	)

250 
	#DN_RENAME
 0x00000010

	)

251 
	#DN_ATTRIB
 0x00000020

	)

252 
	#DN_MULTISHOT
 0x80000000

	)

256 #ifde‡
__USE_GNU


258 
	e__pid_ty≥


260 
	mF_OWNER_TID
 = 0,

261 
	mF_OWNER_PID
,

262 
	mF_OWNER_PGRP
,

263 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


267 
	sf_ow√r_ex


269 
__pid_ty≥
 
	mty≥
;

270 
__pid_t
 
	mpid
;

276 #ifdef 
__USE_MISC


277 
	#FAPPEND
 
O_APPEND


	)

278 
	#FFSYNC
 
O_FSYNC


	)

279 
	#FASYNC
 
O_ASYNC


	)

280 
	#FNONBLOCK
 
O_NONBLOCK


	)

281 
	#FNDELAY
 
O_NDELAY


	)

284 #i‚de‡
__POSIX_FADV_DONTNEED


285 
	#__POSIX_FADV_DONTNEED
 4

	)

286 
	#__POSIX_FADV_NOREUSE
 5

	)

289 #ifde‡
__USE_XOPEN2K


290 
	#POSIX_FADV_NORMAL
 0

	)

291 
	#POSIX_FADV_RANDOM
 1

	)

292 
	#POSIX_FADV_SEQUENTIAL
 2

	)

293 
	#POSIX_FADV_WILLNEED
 3

	)

294 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

295 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

299 #ifde‡
__USE_GNU


301 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

304 
	#SYNC_FILE_RANGE_WRITE
 2

	)

307 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

312 
	#SPLICE_F_MOVE
 1

	)

313 
	#SPLICE_F_NONBLOCK
 2

	)

316 
	#SPLICE_F_MORE
 4

	)

317 
	#SPLICE_F_GIFT
 8

	)

321 
	#FALLOC_FL_KEEP_SIZE
 1

	)

324 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

325 
	#FALLOC_FL_COLLAPSE_RANGE
 8

	)

328 
	#FALLOC_FL_ZERO_RANGE
 16

	)

333 
	sfûe_h™dÀ


335 
	mh™dÀ_byãs
;

336 
	mh™dÀ_ty≥
;

338 
	mf_h™dÀ
[0];

342 
	#MAX_HANDLE_SZ
 128

	)

345 
	g__BEGIN_DECLS


347 #ifde‡
__USE_GNU


350 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

351 
__THROW
;

358 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

359 
__Êags
);

366 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

367 
size_t
 
__cou¡
, 
__Êags
);

373 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

374 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

375 
__Êags
);

381 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

382 
__Êags
);

388 #i‚de‡
__USE_FILE_OFFSET64


389 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

391 #ifde‡
__REDIRECT


392 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

393 
__off64_t
 
__Àn
),

394 
ÁŒoˇã64
);

396 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

399 #ifde‡
__USE_LARGEFILE64


400 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

401 
__off64_t
 
__Àn
);

406 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

407 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

408 
__Êags
Ë
__THROW
;

414 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

415 
__Êags
);

419 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

40 
	#__DECL_SIMD_sö


	)

41 
	#__DECL_SIMD_söf


	)

42 
	#__DECL_SIMD_söl


	)

44 
	#__DECL_SIMD_söcos


	)

45 
	#__DECL_SIMD_söcosf


	)

46 
	#__DECL_SIMD_söco¶


	)

48 
	#__DECL_SIMD_log


	)

49 
	#__DECL_SIMD_logf


	)

50 
	#__DECL_SIMD_logl


	)

52 
	#__DECL_SIMD_exp


	)

53 
	#__DECL_SIMD_expf


	)

54 
	#__DECL_SIMD_ex∂


	)

56 
	#__DECL_SIMD_pow


	)

57 
	#__DECL_SIMD_powf


	)

58 
	#__DECL_SIMD_powl


	)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


35 
	#PROT_READ
 0x1

	)

36 
	#PROT_WRITE
 0x2

	)

37 
	#PROT_EXEC
 0x4

	)

38 
	#PROT_NONE
 0x0

	)

39 
	#PROT_GROWSDOWN
 0x01000000

	)

41 
	#PROT_GROWSUP
 0x02000000

	)

45 
	#MAP_SHARED
 0x01

	)

46 
	#MAP_PRIVATE
 0x02

	)

47 #ifde‡
__USE_MISC


48 
	#MAP_TYPE
 0x0‡

	)

52 
	#MAP_FIXED
 0x10

	)

53 #ifde‡
__USE_MISC


54 
	#MAP_FILE
 0

	)

55 #ifde‡
__MAP_ANONYMOUS


56 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

58 
	#MAP_ANONYMOUS
 0x20

	)

60 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

62 
	#MAP_HUGE_SHIFT
 26

	)

63 
	#MAP_HUGE_MASK
 0x3f

	)

67 
	#MS_ASYNC
 1

	)

68 
	#MS_SYNC
 4

	)

69 
	#MS_INVALIDATE
 2

	)

72 #ifde‡
__USE_GNU


73 
	#MREMAP_MAYMOVE
 1

	)

74 
	#MREMAP_FIXED
 2

	)

78 #ifde‡
__USE_MISC


79 
	#MADV_NORMAL
 0

	)

80 
	#MADV_RANDOM
 1

	)

81 
	#MADV_SEQUENTIAL
 2

	)

82 
	#MADV_WILLNEED
 3

	)

83 
	#MADV_DONTNEED
 4

	)

84 
	#MADV_REMOVE
 9

	)

85 
	#MADV_DONTFORK
 10

	)

86 
	#MADV_DOFORK
 11

	)

87 
	#MADV_MERGEABLE
 12

	)

88 
	#MADV_UNMERGEABLE
 13

	)

89 
	#MADV_HUGEPAGE
 14

	)

90 
	#MADV_NOHUGEPAGE
 15

	)

91 
	#MADV_DONTDUMP
 16

	)

93 
	#MADV_DODUMP
 17

	)

94 
	#MADV_HWPOISON
 100

	)

98 #ifde‡
__USE_XOPEN2K


99 
	#POSIX_MADV_NORMAL
 0

	)

100 
	#POSIX_MADV_RANDOM
 1

	)

101 
	#POSIX_MADV_SEQUENTIAL
 2

	)

102 
	#POSIX_MADV_WILLNEED
 3

	)

103 
	#POSIX_MADV_DONTNEED
 4

	)

107 #i‚de‡
MCL_CURRENT


108 
	#MCL_CURRENT
 1

	)

109 
	#MCL_FUTURE
 2

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


25 
	#__FD_ZERO
(
s
) \

27 
__i
; \

28 
fd_£t
 *
__¨r
 = (
s
); \

29 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

30 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

31 } 0)

	)

32 
	#__FD_SET
(
d
, 
s
) \

33 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] |
	`__FD_MASK
(d)))

	)

34 
	#__FD_CLR
(
d
, 
s
) \

35 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] &~
	`__FD_MASK
(d)))

	)

36 
	#__FD_ISSET
(
d
, 
s
) \

37 ((
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


22 #i‚de‡
sigc⁄ãxt_°ru˘


25 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

27 
	~<asm/sigc⁄ãxt.h
>

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

23 
	~<lowÀvñlock.h
>

27 
	#_IO_lock_öex≥nsive
 1

	)

29 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

31 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

33 
	#_IO_lock_öô
(
_«me
) \

34 ((Ë((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
))

	)

36 
	#_IO_lock_föi
(
_«me
) \

37 ((Ë0)

	)

39 
	#_IO_lock_lock
(
_«me
) \

41 *
__£lf
 = 
THREAD_SELF
; \

42 i‡((
_«me
).
ow√r
 !
__£lf
) \

44 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

45 (
_«me
).
ow√r
 = 
__£lf
; \

47 ++(
_«me
).
˙t
; \

48 } 0)

	)

50 
	#_IO_lock_åylock
(
_«me
) \

52 
__ªsu…
 = 0; \

53 *
__£lf
 = 
THREAD_SELF
; \

54 i‡((
_«me
).
ow√r
 !
__£lf
) \

56 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

58 (
_«me
).
ow√r
 = 
__£lf
; \

59 (
_«me
).
˙t
 = 1; \

62 
__ªsu…
 = 
EBUSY
; \

65 ++(
_«me
).
˙t
; \

66 
__ªsu…
; \

67 })

	)

69 
	#_IO_lock_u∆ock
(
_«me
) \

71 i‡(--(
_«me
).
˙t
 == 0) \

73 (
_«me
).
ow√r
 = 
NULL
; \

74 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

76 } 0)

	)

80 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

81 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

82 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

83 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

84 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

85 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

87 #i‡
deföed
 
_LIBC
 && 
IS_IN
 (
libc
)

89 #ifde‡
__EXCEPTIONS


90 
	#_IO_acquúe_lock
(
_Â
) \

92 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

93 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

94 (
_Â
); \

95 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

96 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

98 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

99 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

100 (
_Â
); \

101 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

103 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

104 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

106 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_SETOFFSET
 0x0100

	)

64 
	#ADJ_MICRO
 0x1000

	)

65 
	#ADJ_NANO
 0x2000

	)

66 
	#ADJ_TICK
 0x4000

	)

67 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

68 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

71 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

72 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

73 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

74 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

75 
	#MOD_STATUS
 
ADJ_STATUS


	)

76 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

77 
	#MOD_CLKB
 
ADJ_TICK


	)

78 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

79 
	#MOD_TAI
 
ADJ_TAI


	)

80 
	#MOD_MICRO
 
ADJ_MICRO


	)

81 
	#MOD_NANO
 
ADJ_NANO


	)

85 
	#STA_PLL
 0x0001

	)

86 
	#STA_PPSFREQ
 0x0002

	)

87 
	#STA_PPSTIME
 0x0004

	)

88 
	#STA_FLL
 0x0008

	)

90 
	#STA_INS
 0x0010

	)

91 
	#STA_DEL
 0x0020

	)

92 
	#STA_UNSYNC
 0x0040

	)

93 
	#STA_FREQHOLD
 0x0080

	)

95 
	#STA_PPSSIGNAL
 0x0100

	)

96 
	#STA_PPSJITTER
 0x0200

	)

97 
	#STA_PPSWANDER
 0x0400

	)

98 
	#STA_PPSERROR
 0x0800

	)

100 
	#STA_CLOCKERR
 0x1000

	)

101 
	#STA_NANO
 0x2000

	)

102 
	#STA_MODE
 0x4000

	)

103 
	#STA_CLK
 0x8000

	)

106 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

107 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

29 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

30 
	#__UID_T_TYPE
 
__U32_TYPE


	)

31 
	#__GID_T_TYPE
 
__U32_TYPE


	)

32 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

33 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

34 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

35 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

36 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

37 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

38 
	#__PID_T_TYPE
 
__S32_TYPE


	)

39 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

40 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

41 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

42 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

43 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

44 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

45 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

46 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

47 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

55 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

56 
	#__TIMER_T_TYPE
 *

	)

57 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

58 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

59 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

60 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

61 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

63 #ifde‡
__LP64__


67 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

70 
	#__INO_T_MATCHES_INO64_T
 1

	)

74 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__ARM_PCS_VFP


7 
	~<gnu/°ubs-so·.h
>

9 #i‡
deföed
 
__ARM_PCS_VFP


10 
	~<gnu/°ubs-h¨d.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

59 
	#__STDC_ISO_10646__
 201304L

	)

62 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 #i‡(!
deföed
 
_N‹ëu∫
 \

393 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

394 && !
	$__GNUC_PREREQ
 (4,7))

395 #i‡
	`__GNUC_PREREQ
 (2,8)

396 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

398 
	#_N‹ëu∫


	)

402 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

403 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

404 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

405 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

406 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

407 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

410 
	~<bôs/w‹dsize.h
>

412 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


413 
	#__LDBL_COMPAT
 1

	)

414 #ifde‡
__REDIRECT


415 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

416 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

417 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

418 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

419 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

420 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

421 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

422 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

423 
	#__LDBL_REDIR_DECL
(
«me
) \

424 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

425 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

426 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

427 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

428 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

431 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


432 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

433 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

434 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

435 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

436 
	#__LDBL_REDIR_DECL
(
«me
)

	)

437 #ifde‡
__REDIRECT


438 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

439 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

440 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/ucontext.h

20 #i‚de‡
_SYS_UCONTEXT_H


21 
	#_SYS_UCONTEXT_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<sig«l.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 
	tgªg_t
;

33 
	#NGREG
 18

	)

36 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 
	mREG_R0
 = 0,

42 
	#REG_R0
 
REG_R0


	)

43 
	mREG_R1
 = 1,

44 
	#REG_R1
 
REG_R1


	)

45 
	mREG_R2
 = 2,

46 
	#REG_R2
 
REG_R2


	)

47 
	mREG_R3
 = 3,

48 
	#REG_R3
 
REG_R3


	)

49 
	mREG_R4
 = 4,

50 
	#REG_R4
 
REG_R4


	)

51 
	mREG_R5
 = 5,

52 
	#REG_R5
 
REG_R5


	)

53 
	mREG_R6
 = 6,

54 
	#REG_R6
 
REG_R6


	)

55 
	mREG_R7
 = 7,

56 
	#REG_R7
 
REG_R7


	)

57 
	mREG_R8
 = 8,

58 
	#REG_R8
 
REG_R8


	)

59 
	mREG_R9
 = 9,

60 
	#REG_R9
 
REG_R9


	)

61 
	mREG_R10
 = 10,

62 
	#REG_R10
 
REG_R10


	)

63 
	mREG_R11
 = 11,

64 
	#REG_R11
 
REG_R11


	)

65 
	mREG_R12
 = 12,

66 
	#REG_R12
 
REG_R12


	)

67 
	mREG_R13
 = 13,

68 
	#REG_R13
 
REG_R13


	)

69 
	mREG_R14
 = 14,

70 
	#REG_R14
 
REG_R14


	)

71 
	mREG_R15
 = 15

72 
	#REG_R15
 
REG_R15


	)

75 
	s_libc_Â°©e


79 
	msign1
:1;

80 
	munu£d
:15;

81 
	msign2
:1;

82 
	mexp⁄ít
:14;

83 
	mj
:1;

84 
	mm™tisß1
:31;

85 
	mm™tisß0
:32;

86 } 
	mÂªgs
[8];

87 
	mÂ§
:32;

88 
	mÂ¸
:32;

89 
	m·y≥
[8];

90 
	möô_Êag
;

93 
_libc_Â°©e
 
	tÂªg£t_t
;

99 
sigc⁄ãxt
 
	tmc⁄ãxt_t
;

102 
	suc⁄ãxt


104 
	muc_Êags
;

105 
uc⁄ãxt
 *
	muc_lök
;

106 
°ack_t
 
	muc_°ack
;

107 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

108 
__sig£t_t
 
	muc_sigmask
;

109 
	muc_ªg•a˚
[128] 
__©åibuã__
((
__Æig√d__
(8)));

110 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

77 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

78 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

79 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#FIONCLEX
 0x5450

	)

82 
	#FIOCLEX
 0x5451

	)

83 
	#FIOASYNC
 0x5452

	)

84 
	#TIOCSERCONFIG
 0x5453

	)

85 
	#TIOCSERGWILD
 0x5454

	)

86 
	#TIOCSERSWILD
 0x5455

	)

87 
	#TIOCGLCKTRMIOS
 0x5456

	)

88 
	#TIOCSLCKTRMIOS
 0x5457

	)

89 
	#TIOCSERGSTRUCT
 0x5458

	)

90 
	#TIOCSERGETLSR
 0x5459

	)

91 
	#TIOCSERGETMULTI
 0x545A

	)

92 
	#TIOCSERSETMULTI
 0x545B

	)

94 
	#TIOCMIWAIT
 0x545C

	)

95 
	#TIOCGICOUNT
 0x545D

	)

101 #i‚de‡
FIOQSIZE


102 
	#FIOQSIZE
 0x5460

	)

106 
	#TIOCPKT_DATA
 0

	)

107 
	#TIOCPKT_FLUSHREAD
 1

	)

108 
	#TIOCPKT_FLUSHWRITE
 2

	)

109 
	#TIOCPKT_STOP
 4

	)

110 
	#TIOCPKT_START
 8

	)

111 
	#TIOCPKT_NOSTOP
 16

	)

112 
	#TIOCPKT_DOSTOP
 32

	)

113 
	#TIOCPKT_IOCTL
 64

	)

115 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

26 #i‚de‡
SO_PASSCRED


27 
	#SO_PASSCRED
 16

	)

28 
	#SO_PEERCRED
 17

	)

29 
	#SO_RCVLOWAT
 18

	)

30 
	#SO_SNDLOWAT
 19

	)

31 
	#SO_RCVTIMEO
 20

	)

32 
	#SO_SNDTIMEO
 21

	)

36 
	#SO_SECURITY_AUTHENTICATION
 22

	)

37 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

38 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

40 
	#SO_BINDTODEVICE
 25

	)

43 
	#SO_ATTACH_FILTER
 26

	)

44 
	#SO_DETACH_FILTER
 27

	)

45 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_WIFI_STATUS
 41

	)

69 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

70 
	#SO_PEEK_OFF
 42

	)

73 
	#SO_NOFCS
 43

	)

75 
	#SO_LOCK_FILTER
 44

	)

77 
	#SO_SELECT_ERR_QUEUE
 45

	)

79 
	#SO_BUSY_POLL
 46

	)

81 
	#SO_MAX_PACING_RATE
 47

	)

83 
	#SO_BPF_EXTENSIONS
 48

	)

85 
	#SO_INCOMING_CPU
 49

	)

87 
	#SO_ATTACH_BPF
 50

	)

88 
	#SO_DETACH_BPF
 
SO_DETACH_FILTER


	)

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASMARM_SIGCONTEXT_H


2 
	#_ASMARM_SIGCONTEXT_H


	)

9 
	ssigc⁄ãxt
 {

10 
	må≠_no
;

11 
	mîr‹_code
;

12 
	mﬁdmask
;

13 
	m¨m_r0
;

14 
	m¨m_r1
;

15 
	m¨m_r2
;

16 
	m¨m_r3
;

17 
	m¨m_r4
;

18 
	m¨m_r5
;

19 
	m¨m_r6
;

20 
	m¨m_r7
;

21 
	m¨m_r8
;

22 
	m¨m_r9
;

23 
	m¨m_r10
;

24 
	m¨m_Â
;

25 
	m¨m_ù
;

26 
	m¨m_•
;

27 
	m¨m_Ã
;

28 
	m¨m_pc
;

29 
	m¨m_˝§
;

30 
	mÁu…_addªss
;

	@/usr/include/bits/libc-lock.h

19 #i‚de‡
_BITS_LIBC_LOCK_H


20 
	#_BITS_LIBC_LOCK_H
 1

	)

22 
	~<±hªad.h
>

23 
	#__√ed_NULL


	)

24 
	~<°ddef.h
>

28 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


29 #i‡(!
IS_IN
 (
libc
Ë&& !IS_IN (
lib±hªad
)Ë|| !
deföed
 
_LIBC


30 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

32 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

35 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

45 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

46 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

50 #i‡
deföed
 
_LIBC
 && (
IS_IN
 (
libc
Ë|| IS_IN (
lib±hªad
))

51 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
, 
NAME
) \

52 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

53 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

54 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

56 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

58 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

59 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

63 #i‡
deföed
 
_LIBC
 && (
IS_IN
 (
libc
Ë|| IS_IN (
lib±hªad
))

64 
	#__libc_lock_öô_ªcursive
(
NAME
) \

65 ((Ë((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
))

	)

67 
	#__libc_lock_öô_ªcursive
(
NAME
) \

69 i‡(
__±hªad_muãx_öô
 !
NULL
) \

71 
±hªad_muãx©å_t
 
__©å
; \

72 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

73 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

74 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

75 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

77 } 0)

	)

81 #i‡
deföed
 
_LIBC
 && (
IS_IN
 (
libc
Ë|| IS_IN (
lib±hªad
))

82 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

84 
	#__libc_lock_föi_ªcursive
(
NAME
) \

85 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
).
muãx
), 0)

	)

89 #i‡
deföed
 
_LIBC
 && (
IS_IN
 (
libc
Ë|| IS_IN (
lib±hªad
))

90 
	#__libc_lock_lock_ªcursive
(
NAME
) \

92 *
£lf
 = 
THREAD_SELF
; \

93 i‡((
NAME
).
ow√r
 !
£lf
) \

95 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

96 (
NAME
).
ow√r
 = 
£lf
; \

98 ++(
NAME
).
˙t
; \

99 } 0)

	)

101 
	#__libc_lock_lock_ªcursive
(
NAME
) \

102 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

106 #i‡
deföed
 
_LIBC
 && (
IS_IN
 (
libc
Ë|| IS_IN (
lib±hªad
))

107 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

109 
ªsu…
 = 0; \

110 *
£lf
 = 
THREAD_SELF
; \

111 i‡((
NAME
).
ow√r
 !
£lf
) \

113 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

115 (
NAME
).
ow√r
 = 
£lf
; \

116 (
NAME
).
˙t
 = 1; \

119 
ªsu…
 = 
EBUSY
; \

122 ++(
NAME
).
˙t
; \

123 
ªsu…
; \

124 })

	)

126 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

127 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

131 #i‡
deföed
 
_LIBC
 && (
IS_IN
 (
libc
Ë|| IS_IN (
lib±hªad
))

133 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

135 i‡(--(
NAME
).
˙t
 == 0) \

137 (
NAME
).
ow√r
 = 
NULL
; \

138 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

140 } 0)

	)

142 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

143 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

150 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

151 (*
routöe
Ë(*), *
¨g
);

152 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

153 
execuã
);

156 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

157 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

158 
_avaû
; \

159 i‡(
DOIT
) { \

160 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

161 i‡(
_avaû
) { \

162 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

163 
ARG
)); \

165 
_buf„r
.
__routöe
 = (
FCT
); \

166 
_buf„r
.
__¨g
 = (
ARG
); \

169 
_avaû
 = 0; \

170 }

	)

173 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

174 i‡(
_avaû
) { \

175 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

176 } i‡(
DOIT
) \

177 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

178 
	}

	)
}

183 #ifde‡
_LIBC


184 
	~"libc-lockP.h
"

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-hard.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_¸óã_moduÀ


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gë_kî√l_syms


	)

16 
	#__°ub_gëmsg


	)

17 
	#__°ub_gëpmsg


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_putmsg


	)

21 
	#__°ub_puçmsg


	)

22 
	#__°ub_quîy_moduÀ


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

160 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

162 
__THROW
;

165 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

166 
__THROW
 
__©åibuã_puª__
;

168 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

169 
__THROW
 
__©åibuã_puª__
;

170 
__END_NAMESPACE_STD


172 #ifde‡
__USE_XOPEN2K8


174 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

177 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

178 
size_t
 
__n
Ë
__THROW
;

182 
	~<xloˇÀ.h
>

184 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

185 
__loˇÀ_t
 
__loc
Ë
__THROW
;

187 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

188 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

191 
__BEGIN_NAMESPACE_STD


194 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

199 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

200 
__END_NAMESPACE_STD


202 #ifde‡
__USE_XOPEN2K8


208 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

209 
__loˇÀ_t
 
__loc
Ë
__THROW
;

214 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

215 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

218 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

221 
__BEGIN_NAMESPACE_STD


223 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


224 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

226 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

227 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

229 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
__©åibuã_puª__
;

233 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


234 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

236 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

237 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

239 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

240 
__THROW
 
__©åibuã_puª__
;

242 
__END_NAMESPACE_STD


244 #ifde‡
__USE_GNU


247 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

248 
__THROW
 
__©åibuã_puª__
;

251 
__BEGIN_NAMESPACE_STD


254 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

255 
__THROW
 
__©åibuã_puª__
;

258 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

259 
__THROW
 
__©åibuã_puª__
;

261 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


262 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

263 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

264 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

265 c⁄° 
wch¨_t
 *
__ac˚±
)

266 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

268 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

269 
__THROW
 
__©åibuã_puª__
;

272 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


273 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

274 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

275 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

276 c⁄° 
wch¨_t
 *
__√edÀ
)

277 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

280 
__THROW
 
__©åibuã_puª__
;

284 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

285 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

286 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

289 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

290 
__END_NAMESPACE_STD


292 #ifde‡
__USE_XOPEN


294 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


295 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

296 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

297 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

298 c⁄° 
wch¨_t
 *
__√edÀ
)

299 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

301 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

302 
__THROW
 
__©åibuã_puª__
;

306 #ifde‡
__USE_XOPEN2K8


308 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

309 
__THROW
 
__©åibuã_puª__
;

313 
__BEGIN_NAMESPACE_STD


315 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


316 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

317 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

318 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

319 
size_t
 
__n
)

320 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

322 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

327 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

328 
__THROW
 
__©åibuã_puª__
;

331 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

336 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

337 
__THROW
;

340 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

341 
__END_NAMESPACE_STD


343 #ifde‡
__USE_GNU


346 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

347 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

348 
__THROW
;

352 
__BEGIN_NAMESPACE_STD


355 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

359 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

363 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

367 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

368 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

369 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

372 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

379 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

380 
__END_NAMESPACE_STD


382 #ifde‡
__USE_EXTERN_INLINES


388 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

389 
__exã∫_ölöe
 
wöt_t


390 
	`__NTH
 (
	$btowc
 (
__c
))

391 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

392 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

394 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

395 
__exã∫_ölöe
 

396 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

397 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

398 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

400 
__exã∫_ölöe
 
size_t


401 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

402 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

403 {  (
__ps
 !
NULL


404 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

407 
__BEGIN_NAMESPACE_STD


410 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

411 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

412 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

416 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

417 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

418 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

419 
__END_NAMESPACE_STD


422 #ifdef 
__USE_XOPEN2K8


425 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

426 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

427 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

431 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

432 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

433 
size_t
 
__nwc
, size_à
__Àn
,

434 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

439 #ifde‡
__USE_XOPEN


441 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

445 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

449 
__BEGIN_NAMESPACE_STD


452 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

453 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

454 
__END_NAMESPACE_STD


456 #ifde‡
__USE_ISOC99


457 
__BEGIN_NAMESPACE_C99


459 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

462 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

463 
__END_NAMESPACE_C99


467 
__BEGIN_NAMESPACE_STD


470 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

475 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

476 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

477 
__THROW
;

478 
__END_NAMESPACE_STD


480 #ifde‡
__USE_ISOC99


481 
__BEGIN_NAMESPACE_C99


484 
__exãnsi⁄__


485 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

486 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

487 
__THROW
;

491 
__exãnsi⁄__


492 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

493 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

494 
__ba£
Ë
__THROW
;

495 
__END_NAMESPACE_C99


498 #ifde‡
__USE_GNU


501 
__exãnsi⁄__


502 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

503 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

504 
__THROW
;

508 
__exãnsi⁄__


509 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

510 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

511 
__ba£
Ë
__THROW
;

514 #ifde‡
__USE_GNU


528 
	~<xloˇÀ.h
>

532 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

534 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

545 
__exãnsi⁄__


546 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

548 
__ba£
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

557 
__THROW
;

559 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

560 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

561 
__loˇÀ_t
 
__loc
Ë
__THROW
;

565 #ifde‡
__USE_XOPEN2K8


568 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

573 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

574 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

575 
__THROW
;

582 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

585 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


586 
__BEGIN_NAMESPACE_STD


589 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

596 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

597 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

607 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

608 
__THROW
 ;

614 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

615 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

616 
__gnuc_va_li°
 
__¨g
)

622 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

623 
__gnuc_va_li°
 
__¨g
)

627 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

628 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

629 
__gnuc_va_li°
 
__¨g
)

630 
__THROW
 ;

637 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

638 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

648 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

649 
__THROW
 ;

651 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

652 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

653 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

654 #ifde‡
__REDIRECT


658 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

659 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

660 
__isoc99_fwsˇnf
)

662 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_wsˇnf
)

665 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

666 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

667 ...), 
__isoc99_swsˇnf
)

670 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

671 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

672 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

674 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

675 
__THROW
;

676 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

677 
	#wsˇnf
 
__isoc99_wsˇnf


	)

678 
	#swsˇnf
 
__isoc99_swsˇnf


	)

682 
__END_NAMESPACE_STD


685 #ifde‡
__USE_ISOC99


686 
__BEGIN_NAMESPACE_C99


691 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

692 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

693 
__gnuc_va_li°
 
__¨g
)

699 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

703 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

704 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

705 
__gnuc_va_li°
 
__¨g
)

706 
__THROW
 ;

708 #i‡!
deföed
 
__USE_GNU
 \

709 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

710 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

711 #ifde‡
__REDIRECT


712 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

713 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

714 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

716 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

719 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

720 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

724 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

725 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

728 
__gnuc_va_li°
 
__¨g
);

729 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

730 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

731 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

732 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

733 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

734 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

738 
__END_NAMESPACE_C99


742 
__BEGIN_NAMESPACE_STD


747 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

748 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

754 
wöt_t
 
	`gëwch¨
 ();

761 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

762 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

768 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

776 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

777 
__FILE
 *
__ª°ri˘
 
__°ªam
);

783 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

784 
__FILE
 *
__ª°ri˘
 
__°ªam
);

791 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

792 
__END_NAMESPACE_STD


795 #ifde‡
__USE_GNU


803 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

804 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

812 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

820 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

829 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

839 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

840 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

849 
__FILE
 *
__ª°ri˘
 
__°ªam
);

853 
__BEGIN_NAMESPACE_C99


857 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

858 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

859 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

860 
__END_NAMESPACE_C99


862 #ifde‡
__USE_GNU


863 
	~<xloˇÀ.h
>

867 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

868 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

869 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

870 
__loˇÀ_t
 
__loc
Ë
__THROW
;

879 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


880 
	#__√ed_iswxxx


	)

881 
	~<w˘y≥.h
>

885 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


886 
	~<bôs/wch¨2.h
>

889 #ifde‡
__LDBL_COMPAT


890 
	~<bôs/wch¨-ldbl.h
>

893 
__END_DECLS


901 #unde‡
__√ed_mb°©e_t


902 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 #i‚de‡
EXEC_PAGESIZE


9 
	#EXEC_PAGESIZE
 4096

	)

12 #i‚de‡
NOGROUP


13 
	#NOGROUP
 (-1)

	)

16 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@
1
.
1
/usr/include
234
4719
am_demod.c
am_demod.h
amd.c
amd.h
anf.c
anf.h
anr.c
anr.h
banal.c
banal.h
bufvec.c
bufvec.h
common.h
complex.h
compress.c
compress.h
correctIQ.c
correctIQ.h
cwtones.c
cwtones.h
cxops.c
cxops.h
datatypes.h
dcblock.c
dcblock.h
defs.h
diversity.c
diversity.h
dttspagc.c
dttspagc.h
fastrig.c
fastrig.h
fftw.h
fftw3.h
fftw3_fix.h
filt2p2z.c
filt2p2z.h
filter.c
filter.h
filterbank.c
filterbank.h
fm_demod.c
fm_demod.h
fromsys.h
graphiceq.c
graphiceq.h
hilbert.c
hilbert.h
iambic-keyer-for-SR.c
iosdr.h
isoband.c
isoband.h
keyboard-keyer-for-SR.c
keyd.c
keyer.c
keyer.h
keyerio.c
lmadf.c
lmadf.h
local.h
malloc16.c
malloc16.h
meter.c
meter.h
metermon.c
noiseblanker.c
noiseblanker.h
oscillator.c
oscillator.h
ovsv.c
ovsv.h
resample.c
resample.h
resampleF.c
resampleF.h
ringb.c
ringb.h
sdr.c
sdrexport.c
sdrexport.h
spectrum.c
spectrum.h
speechproc.c
speechproc.h
splitfields.c
splitfields.h
spottone.c
spottone.h
update.c
update.h
wcpAGC.c
wcpAGC.h
window.c
window.h
winmain.c
wscompand.c
wscompand.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/fcntl.h
/usr/include/linux/rtc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/semaphore.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/ioctl.h
/usr/include/sys/mman.h
/usr/include/sys/param.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/param.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sched.h
/usr/include/bits/semaphore.h
/usr/include/bits/setjmp.h
/usr/include/bits/siginfo.h
/usr/include/bits/sigset.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/rpc/netdb.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/mman-linux.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket_type.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/ucontext.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm/param.h
/usr/include/asm/sigcontext.h
/usr/include/bits/libc-lock.h
/usr/include/bits/local_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-hard.h
/usr/include/wchar.h
/usr/include/asm-generic/param.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/linux/ioctl.h
/usr/include/wctype.h
/usr/include/asm-generic/sockios.h
/usr/include/asm/ioctl.h
/usr/include/asm-generic/ioctl.h
